/* SPDX-License-Identifier: (GPL-2.0 OR MIT) */
/*
 * Microchip LAN966x Switch driver
 *
 * License: Dual MIT/GPL
 * Copyright (c) 2020 Microchip Technology Inc.
 */

/* This file is autogenerated by cml-utils 2021-07-05 11:03:36 +0200.
 * Commit ID: f7160425b899cbb5eb3c57ba6d16bec55f7c0c9b (dirty)
 */

#ifndef _LAN966X_REGS_H_
#define _LAN966X_REGS_H_

#include <linux/bitops.h>

#define LAN966X_BUILD_ID_REG GCB_BUILDID
enum lan966x_target {
	TARGET_AFI = 2,
	TARGET_ANA = 3,
	TARGET_CHIP_TOP = 5,
	TARGET_CPU = 6,
	TARGET_DEV = 13,
	TARGET_FDMA = 21,
	TARGET_GCB = 27,
	TARGET_HSIO = 32,
	TARGET_MEP = 35,
	TARGET_ORG = 36,
	TARGET_PTP = 41,
	TARGET_QS = 42,
	TARGET_QSYS = 46,
	TARGET_REW = 47,
	TARGET_SYS = 52,
	TARGET_VCAP = 61,
	NUM_TARGETS = 66
};

#define __REG(...)    __VA_ARGS__

/*      AFI:MISC:MISC_CTRL */
#define AFI_MISC_CTRL             __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 0, 0, 1, 4)

#define AFI_MISC_CTRL_AFI_ENA(x)                 ((x) & GENMASK(0, 0))
#define AFI_MISC_CTRL_AFI_ENA_M                  GENMASK(0, 0)
#define AFI_MISC_CTRL_AFI_ENA_X(x)               ((x) & GENMASK(0, 0))

/*      AFI:MISC:NEW_FRM_CTRL */
#define AFI_NEW_FRM_CTRL          __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 4, 0, 1, 4)

#define AFI_NEW_FRM_CTRL_VLD(x)                  ((x) & GENMASK(0, 0))
#define AFI_NEW_FRM_CTRL_VLD_M                   GENMASK(0, 0)
#define AFI_NEW_FRM_CTRL_VLD_X(x)                ((x) & GENMASK(0, 0))

/*      AFI:MISC:NEW_FRM_INFO */
#define AFI_NEW_FRM_INFO          __REG(TARGET_AFI,\
					0, 1, 98896, 0, 1, 32, 8, 0, 1, 4)

#define AFI_NEW_FRM_INFO_FRM_INFO(x)             ((x) & GENMASK(19, 0))
#define AFI_NEW_FRM_INFO_FRM_INFO_M              GENMASK(19, 0)
#define AFI_NEW_FRM_INFO_FRM_INFO_X(x)           ((x) & GENMASK(19, 0))

/*      AFI:FRM_TBL:FRM_NXT_AND_TYPE */
#define AFI_FRM_NXT_AND_TYPE(g)   __REG(TARGET_AFI,\
					0, 1, 65536, g, 2048, 16, 0, 0, 1, 4)

#define AFI_FRM_NXT_AND_TYPE_ENTRY_TYPE(x)       (((x) << 16) & GENMASK(16, 16))
#define AFI_FRM_NXT_AND_TYPE_ENTRY_TYPE_M        GENMASK(16, 16)
#define AFI_FRM_NXT_AND_TYPE_ENTRY_TYPE_X(x)     (((x) & GENMASK(16, 16)) >> 16)

#define AFI_FRM_NXT_AND_TYPE_NEXT_PTR(x)         ((x) & GENMASK(10, 0))
#define AFI_FRM_NXT_AND_TYPE_NEXT_PTR_M          GENMASK(10, 0)
#define AFI_FRM_NXT_AND_TYPE_NEXT_PTR_X(x)       ((x) & GENMASK(10, 0))

/*      AFI:FRM_TBL:FRM_ENTRY_PART0 */
#define AFI_FRM_ENTRY_PART0(g)    __REG(TARGET_AFI,\
					0, 1, 65536, g, 2048, 16, 4, 0, 1, 4)

#define AFI_FRM_ENTRY_PART0_PART0(x)             ((x) & GENMASK(29, 0))
#define AFI_FRM_ENTRY_PART0_PART0_M              GENMASK(29, 0)
#define AFI_FRM_ENTRY_PART0_PART0_X(x)           ((x) & GENMASK(29, 0))

/*      AFI:FRM_TBL:FRM_ENTRY_PART1 */
#define AFI_FRM_ENTRY_PART1(g)    __REG(TARGET_AFI,\
					0, 1, 65536, g, 2048, 16, 8, 0, 1, 4)

#define AFI_FRM_ENTRY_PART1_PART1(x)             ((x) & GENMASK(5, 0))
#define AFI_FRM_ENTRY_PART1_PART1_M              GENMASK(5, 0)
#define AFI_FRM_ENTRY_PART1_PART1_X(x)           ((x) & GENMASK(5, 0))

/*      AFI:TTI_TBL:TTI_PORT_QU */
#define AFI_TTI_PORT_QU(g)        __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 0, 0, 1, 4)

#define AFI_TTI_PORT_QU_QU_NUM(x)                (((x) << 8) & GENMASK(17, 8))
#define AFI_TTI_PORT_QU_QU_NUM_M                 GENMASK(17, 8)
#define AFI_TTI_PORT_QU_QU_NUM_X(x)              (((x) & GENMASK(17, 8)) >> 8)

#define AFI_TTI_PORT_QU_PORT_NUM(x)              ((x) & GENMASK(3, 0))
#define AFI_TTI_PORT_QU_PORT_NUM_M               GENMASK(3, 0)
#define AFI_TTI_PORT_QU_PORT_NUM_X(x)            ((x) & GENMASK(3, 0))

/*      AFI:TTI_TBL:TTI_TIMER */
#define AFI_TTI_TIMER(g)          __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 4, 0, 1, 4)

#define AFI_TTI_TIMER_TIMER_LEN(x)               (((x) << 16) & GENMASK(24, 16))
#define AFI_TTI_TIMER_TIMER_LEN_M                GENMASK(24, 16)
#define AFI_TTI_TIMER_TIMER_LEN_X(x)             (((x) & GENMASK(24, 16)) >> 16)

#define AFI_TTI_TIMER_TIMER_ENA(x)               (((x) << 6) & GENMASK(6, 6))
#define AFI_TTI_TIMER_TIMER_ENA_M                GENMASK(6, 6)
#define AFI_TTI_TIMER_TIMER_ENA_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define AFI_TTI_TIMER_JITTER(x)                  (((x) << 4) & GENMASK(5, 4))
#define AFI_TTI_TIMER_JITTER_M                   GENMASK(5, 4)
#define AFI_TTI_TIMER_JITTER_X(x)                (((x) & GENMASK(5, 4)) >> 4)

#define AFI_TTI_TIMER_TICK_IDX(x)                ((x) & GENMASK(2, 0))
#define AFI_TTI_TIMER_TICK_IDX_M                 GENMASK(2, 0)
#define AFI_TTI_TIMER_TICK_IDX_X(x)              ((x) & GENMASK(2, 0))

/*      AFI:TTI_TBL:TTI_FRM */
#define AFI_TTI_FRM(g)            __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 8, 0, 1, 4)

#define AFI_TTI_FRM_FRM_PTR(x)                   ((x) & GENMASK(10, 0))
#define AFI_TTI_FRM_FRM_PTR_M                    GENMASK(10, 0)
#define AFI_TTI_FRM_FRM_PTR_X(x)                 ((x) & GENMASK(10, 0))

/*      AFI:TTI_TBL:TTI_TICKS */
#define AFI_TTI_TICKS(g)          __REG(TARGET_AFI,\
					0, 1, 0, g, 2048, 32, 12, 0, 1, 4)

#define AFI_TTI_TICKS_LAST_TICK_ERA(x)           (((x) << 16) & GENMASK(16, 16))
#define AFI_TTI_TICKS_LAST_TICK_ERA_M            GENMASK(16, 16)
#define AFI_TTI_TICKS_LAST_TICK_ERA_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define AFI_TTI_TICKS_TICK_CNT(x)                ((x) & GENMASK(8, 0))
#define AFI_TTI_TICKS_TICK_CNT_M                 GENMASK(8, 0)
#define AFI_TTI_TICKS_TICK_CNT_X(x)              ((x) & GENMASK(8, 0))

/*      AFI:TTI_TICKS:TTI_TICK_BASE */
#define AFI_TTI_TICK_BASE         __REG(TARGET_AFI,\
					0, 1, 99120, 0, 1, 44, 0, 0, 1, 4)

#define AFI_TTI_TICK_BASE_BASE_CNT(x)            (((x) << 16) & GENMASK(29, 16))
#define AFI_TTI_TICK_BASE_BASE_CNT_M             GENMASK(29, 16)
#define AFI_TTI_TICK_BASE_BASE_CNT_X(x)          (((x) & GENMASK(29, 16)) >> 16)

#define AFI_TTI_TICK_BASE_BASE_LEN(x)            ((x) & GENMASK(13, 0))
#define AFI_TTI_TICK_BASE_BASE_LEN_M             GENMASK(13, 0)
#define AFI_TTI_TICK_BASE_BASE_LEN_X(x)          ((x) & GENMASK(13, 0))

/*      AFI:TTI_TICKS:TTI_TICK_LEN_0_3 */
#define AFI_TTI_TICK_LEN_0_3      __REG(TARGET_AFI,\
					0, 1, 99120, 0, 1, 44, 4, 0, 1, 4)

#define AFI_TTI_TICK_LEN_0_3_LEN3(x)             (((x) << 24) & GENMASK(31, 24))
#define AFI_TTI_TICK_LEN_0_3_LEN3_M              GENMASK(31, 24)
#define AFI_TTI_TICK_LEN_0_3_LEN3_X(x)           (((x) & GENMASK(31, 24)) >> 24)

#define AFI_TTI_TICK_LEN_0_3_LEN2(x)             (((x) << 16) & GENMASK(23, 16))
#define AFI_TTI_TICK_LEN_0_3_LEN2_M              GENMASK(23, 16)
#define AFI_TTI_TICK_LEN_0_3_LEN2_X(x)           (((x) & GENMASK(23, 16)) >> 16)

#define AFI_TTI_TICK_LEN_0_3_LEN1(x)             (((x) << 8) & GENMASK(15, 8))
#define AFI_TTI_TICK_LEN_0_3_LEN1_M              GENMASK(15, 8)
#define AFI_TTI_TICK_LEN_0_3_LEN1_X(x)           (((x) & GENMASK(15, 8)) >> 8)

#define AFI_TTI_TICK_LEN_0_3_LEN0(x)             ((x) & GENMASK(7, 0))
#define AFI_TTI_TICK_LEN_0_3_LEN0_M              GENMASK(7, 0)
#define AFI_TTI_TICK_LEN_0_3_LEN0_X(x)           ((x) & GENMASK(7, 0))

/*      AFI:TTI_TICKS:TTI_TICK_LEN_4_7 */
#define AFI_TTI_TICK_LEN_4_7      __REG(TARGET_AFI,\
					0, 1, 99120, 0, 1, 44, 8, 0, 1, 4)

#define AFI_TTI_TICK_LEN_4_7_LEN7(x)             (((x) << 24) & GENMASK(31, 24))
#define AFI_TTI_TICK_LEN_4_7_LEN7_M              GENMASK(31, 24)
#define AFI_TTI_TICK_LEN_4_7_LEN7_X(x)           (((x) & GENMASK(31, 24)) >> 24)

#define AFI_TTI_TICK_LEN_4_7_LEN6(x)             (((x) << 16) & GENMASK(23, 16))
#define AFI_TTI_TICK_LEN_4_7_LEN6_M              GENMASK(23, 16)
#define AFI_TTI_TICK_LEN_4_7_LEN6_X(x)           (((x) & GENMASK(23, 16)) >> 16)

#define AFI_TTI_TICK_LEN_4_7_LEN5(x)             (((x) << 8) & GENMASK(15, 8))
#define AFI_TTI_TICK_LEN_4_7_LEN5_M              GENMASK(15, 8)
#define AFI_TTI_TICK_LEN_4_7_LEN5_X(x)           (((x) & GENMASK(15, 8)) >> 8)

#define AFI_TTI_TICK_LEN_4_7_LEN4(x)             ((x) & GENMASK(7, 0))
#define AFI_TTI_TICK_LEN_4_7_LEN4_M              GENMASK(7, 0)
#define AFI_TTI_TICK_LEN_4_7_LEN4_X(x)           ((x) & GENMASK(7, 0))

/*      AFI:TTI_MISC:TTI_CTRL */
#define AFI_TTI_CTRL              __REG(TARGET_AFI,\
					0, 1, 99164, 0, 1, 64, 48, 0, 1, 4)

#define AFI_TTI_CTRL_TTI_CAL_CNT(x)              (((x) << 20) & GENMASK(27, 20))
#define AFI_TTI_CTRL_TTI_CAL_CNT_M               GENMASK(27, 20)
#define AFI_TTI_CTRL_TTI_CAL_CNT_X(x)            (((x) & GENMASK(27, 20)) >> 20)

#define AFI_TTI_CTRL_TTI_CAL_PTR(x)              (((x) << 16) & GENMASK(17, 16))
#define AFI_TTI_CTRL_TTI_CAL_PTR_M               GENMASK(17, 16)
#define AFI_TTI_CTRL_TTI_CAL_PTR_X(x)            (((x) & GENMASK(17, 16)) >> 16)

#define AFI_TTI_CTRL_TTI_CSR_RSV(x)              (((x) << 8) & GENMASK(15, 8))
#define AFI_TTI_CTRL_TTI_CSR_RSV_M               GENMASK(15, 8)
#define AFI_TTI_CTRL_TTI_CSR_RSV_X(x)            (((x) & GENMASK(15, 8)) >> 8)

#define AFI_TTI_CTRL_TTI_CAL_LEN(x)              (((x) << 4) & GENMASK(5, 4))
#define AFI_TTI_CTRL_TTI_CAL_LEN_M               GENMASK(5, 4)
#define AFI_TTI_CTRL_TTI_CAL_LEN_X(x)            (((x) & GENMASK(5, 4)) >> 4)

#define AFI_TTI_CTRL_TTI_SERIAL_ENA(x)           (((x) << 2) & GENMASK(2, 2))
#define AFI_TTI_CTRL_TTI_SERIAL_ENA_M            GENMASK(2, 2)
#define AFI_TTI_CTRL_TTI_SERIAL_ENA_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define AFI_TTI_CTRL_TTI_INIT(x)                 (((x) << 1) & GENMASK(1, 1))
#define AFI_TTI_CTRL_TTI_INIT_M                  GENMASK(1, 1)
#define AFI_TTI_CTRL_TTI_INIT_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define AFI_TTI_CTRL_TTI_ENA(x)                  ((x) & GENMASK(0, 0))
#define AFI_TTI_CTRL_TTI_ENA_M                   GENMASK(0, 0)
#define AFI_TTI_CTRL_TTI_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      AFI:PORT_TBL:PORT_FRM_OUT */
#define AFI_PORT_FRM_OUT(g)       __REG(TARGET_AFI,\
					0, 1, 98816, g, 10, 8, 0, 0, 1, 4)

#define AFI_PORT_FRM_OUT_FRM_OUT_CNT(x)          (((x) << 16) & GENMASK(26, 16))
#define AFI_PORT_FRM_OUT_FRM_OUT_CNT_M           GENMASK(26, 16)
#define AFI_PORT_FRM_OUT_FRM_OUT_CNT_X(x)        (((x) & GENMASK(26, 16)) >> 16)

/*      AFI:PORT_TBL:PORT_CFG */
#define AFI_PORT_CFG(g)           __REG(TARGET_AFI,\
					0, 1, 98816, g, 10, 8, 4, 0, 1, 4)

#define AFI_PORT_CFG_FC_SKIP_TTI_INJ(x)          (((x) << 16) & GENMASK(16, 16))
#define AFI_PORT_CFG_FC_SKIP_TTI_INJ_M           GENMASK(16, 16)
#define AFI_PORT_CFG_FC_SKIP_TTI_INJ_X(x)        (((x) & GENMASK(16, 16)) >> 16)

#define AFI_PORT_CFG_FRM_OUT_MAX(x)              ((x) & GENMASK(9, 0))
#define AFI_PORT_CFG_FRM_OUT_MAX_M               GENMASK(9, 0)
#define AFI_PORT_CFG_FRM_OUT_MAX_X(x)            ((x) & GENMASK(9, 0))

/*      ANA:ANA:ADVLEARN */
#define ANA_ADVLEARN              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 0, 0, 1, 4)

#define ANA_ADVLEARN_VLAN_CHK(x)                 ((x) & GENMASK(0, 0))
#define ANA_ADVLEARN_VLAN_CHK_M                  GENMASK(0, 0)
#define ANA_ADVLEARN_VLAN_CHK_X(x)               ((x) & GENMASK(0, 0))

/*      ANA:ANA:VLANMASK */
#define ANA_VLANMASK              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 8, 0, 1, 4)

#define ANA_VLANMASK_VLANMASK(x)                 ((x) & GENMASK(8, 0))
#define ANA_VLANMASK_VLANMASK_M                  GENMASK(8, 0)
#define ANA_VLANMASK_VLANMASK_X(x)               ((x) & GENMASK(8, 0))

/*      ANA:ANA:ANAGEFIL */
#define ANA_ANAGEFIL              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 12, 0, 1, 4)

#define ANA_ANAGEFIL_AGE_LOCKED(x)               (((x) << 20) & GENMASK(20, 20))
#define ANA_ANAGEFIL_AGE_LOCKED_M                GENMASK(20, 20)
#define ANA_ANAGEFIL_AGE_LOCKED_X(x)             (((x) & GENMASK(20, 20)) >> 20)

#define ANA_ANAGEFIL_PID_EN(x)                   (((x) << 19) & GENMASK(19, 19))
#define ANA_ANAGEFIL_PID_EN_M                    GENMASK(19, 19)
#define ANA_ANAGEFIL_PID_EN_X(x)                 (((x) & GENMASK(19, 19)) >> 19)

#define ANA_ANAGEFIL_PID_VAL(x)                  (((x) << 14) & GENMASK(18, 14))
#define ANA_ANAGEFIL_PID_VAL_M                   GENMASK(18, 14)
#define ANA_ANAGEFIL_PID_VAL_X(x)                (((x) & GENMASK(18, 14)) >> 14)

#define ANA_ANAGEFIL_VID_EN(x)                   (((x) << 13) & GENMASK(13, 13))
#define ANA_ANAGEFIL_VID_EN_M                    GENMASK(13, 13)
#define ANA_ANAGEFIL_VID_EN_X(x)                 (((x) & GENMASK(13, 13)) >> 13)

#define ANA_ANAGEFIL_VID_VAL(x)                  ((x) & GENMASK(12, 0))
#define ANA_ANAGEFIL_VID_VAL_M                   GENMASK(12, 0)
#define ANA_ANAGEFIL_VID_VAL_X(x)                ((x) & GENMASK(12, 0))

/*      ANA:ANA:ANAINTR */
#define ANA_ANAINTR               __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 16, 0, 1, 4)

#define ANA_ANAINTR_INTR(x)                      (((x) << 1) & GENMASK(1, 1))
#define ANA_ANAINTR_INTR_M                       GENMASK(1, 1)
#define ANA_ANAINTR_INTR_X(x)                    (((x) & GENMASK(1, 1)) >> 1)

#define ANA_ANAINTR_INTR_ENA(x)                  ((x) & GENMASK(0, 0))
#define ANA_ANAINTR_INTR_ENA_M                   GENMASK(0, 0)
#define ANA_ANAINTR_INTR_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      ANA:ANA:AUTOAGE */
#define ANA_AUTOAGE               __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 44, 0, 1, 4)

#define ANA_AUTOAGE_AGE_FAST(x)                  (((x) << 21) & GENMASK(21, 21))
#define ANA_AUTOAGE_AGE_FAST_M                   GENMASK(21, 21)
#define ANA_AUTOAGE_AGE_FAST_X(x)                (((x) & GENMASK(21, 21)) >> 21)

#define ANA_AUTOAGE_AGE_PERIOD(x)                (((x) << 1) & GENMASK(20, 1))
#define ANA_AUTOAGE_AGE_PERIOD_M                 GENMASK(20, 1)
#define ANA_AUTOAGE_AGE_PERIOD_X(x)              (((x) & GENMASK(20, 1)) >> 1)

#define ANA_AUTOAGE_AUTOAGE_LOCKED(x)            ((x) & GENMASK(0, 0))
#define ANA_AUTOAGE_AUTOAGE_LOCKED_M             GENMASK(0, 0)
#define ANA_AUTOAGE_AUTOAGE_LOCKED_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:ANA:AGENCTRL */
#define ANA_AGENCTRL              __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 56, 0, 1, 4)

#define ANA_AGENCTRL_APPLY_SPLIT_MASK(x)         (((x) << 24) & GENMASK(24, 24))
#define ANA_AGENCTRL_APPLY_SPLIT_MASK_M          GENMASK(24, 24)
#define ANA_AGENCTRL_APPLY_SPLIT_MASK_X(x)       (((x) & GENMASK(24, 24)) >> 24)

#define ANA_AGENCTRL_FID_MASK(x)                 (((x) << 12) & GENMASK(23, 12))
#define ANA_AGENCTRL_FID_MASK_M                  GENMASK(23, 12)
#define ANA_AGENCTRL_FID_MASK_X(x)               (((x) & GENMASK(23, 12)) >> 12)

#define ANA_AGENCTRL_IGNORE_DMAC_FLAGS(x)        (((x) << 11) & GENMASK(11, 11))
#define ANA_AGENCTRL_IGNORE_DMAC_FLAGS_M         GENMASK(11, 11)
#define ANA_AGENCTRL_IGNORE_DMAC_FLAGS_X(x)      (((x) & GENMASK(11, 11)) >> 11)

#define ANA_AGENCTRL_IGNORE_SMAC_FLAGS(x)        (((x) << 10) & GENMASK(10, 10))
#define ANA_AGENCTRL_IGNORE_SMAC_FLAGS_M         GENMASK(10, 10)
#define ANA_AGENCTRL_IGNORE_SMAC_FLAGS_X(x)      (((x) & GENMASK(10, 10)) >> 10)

#define ANA_AGENCTRL_FLOOD_SPECIAL(x)            (((x) << 9) & GENMASK(9, 9))
#define ANA_AGENCTRL_FLOOD_SPECIAL_M             GENMASK(9, 9)
#define ANA_AGENCTRL_FLOOD_SPECIAL_X(x)          (((x) & GENMASK(9, 9)) >> 9)

#define ANA_AGENCTRL_FLOOD_IGNORE_VLAN(x)        (((x) << 8) & GENMASK(8, 8))
#define ANA_AGENCTRL_FLOOD_IGNORE_VLAN_M         GENMASK(8, 8)
#define ANA_AGENCTRL_FLOOD_IGNORE_VLAN_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define ANA_AGENCTRL_MIRROR_CPU(x)               (((x) << 7) & GENMASK(7, 7))
#define ANA_AGENCTRL_MIRROR_CPU_M                GENMASK(7, 7)
#define ANA_AGENCTRL_MIRROR_CPU_X(x)             (((x) & GENMASK(7, 7)) >> 7)

#define ANA_AGENCTRL_LEARN_CPU_COPY(x)           (((x) << 6) & GENMASK(6, 6))
#define ANA_AGENCTRL_LEARN_CPU_COPY_M            GENMASK(6, 6)
#define ANA_AGENCTRL_LEARN_CPU_COPY_X(x)         (((x) & GENMASK(6, 6)) >> 6)

#define ANA_AGENCTRL_LEARN_FWD_KILL(x)           (((x) << 5) & GENMASK(5, 5))
#define ANA_AGENCTRL_LEARN_FWD_KILL_M            GENMASK(5, 5)
#define ANA_AGENCTRL_LEARN_FWD_KILL_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define ANA_AGENCTRL_LEARN_IGNORE_VLAN(x)        (((x) << 4) & GENMASK(4, 4))
#define ANA_AGENCTRL_LEARN_IGNORE_VLAN_M         GENMASK(4, 4)
#define ANA_AGENCTRL_LEARN_IGNORE_VLAN_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define ANA_AGENCTRL_CPU_CPU_KILL_ENA(x)         (((x) << 3) & GENMASK(3, 3))
#define ANA_AGENCTRL_CPU_CPU_KILL_ENA_M          GENMASK(3, 3)
#define ANA_AGENCTRL_CPU_CPU_KILL_ENA_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define ANA_AGENCTRL_GREEN_COUNT_MODE(x)         (((x) << 2) & GENMASK(2, 2))
#define ANA_AGENCTRL_GREEN_COUNT_MODE_M          GENMASK(2, 2)
#define ANA_AGENCTRL_GREEN_COUNT_MODE_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define ANA_AGENCTRL_YELLOW_COUNT_MODE(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_AGENCTRL_YELLOW_COUNT_MODE_M         GENMASK(1, 1)
#define ANA_AGENCTRL_YELLOW_COUNT_MODE_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_AGENCTRL_RED_COUNT_MODE(x)           ((x) & GENMASK(0, 0))
#define ANA_AGENCTRL_RED_COUNT_MODE_M            GENMASK(0, 0)
#define ANA_AGENCTRL_RED_COUNT_MODE_X(x)         ((x) & GENMASK(0, 0))

/*      ANA:ANA:MIRRORPORTS */
#define ANA_MIRRORPORTS           __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 60, 0, 1, 4)

#define ANA_MIRRORPORTS_MIRRORPORTS(x)           ((x) & GENMASK(8, 0))
#define ANA_MIRRORPORTS_MIRRORPORTS_M            GENMASK(8, 0)
#define ANA_MIRRORPORTS_MIRRORPORTS_X(x)         ((x) & GENMASK(8, 0))

/*      ANA:ANA:EMIRRORPORTS */
#define ANA_EMIRRORPORTS          __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 64, 0, 1, 4)

#define ANA_EMIRRORPORTS_EMIRRORPORTS(x)         ((x) & GENMASK(8, 0))
#define ANA_EMIRRORPORTS_EMIRRORPORTS_M          GENMASK(8, 0)
#define ANA_EMIRRORPORTS_EMIRRORPORTS_X(x)       ((x) & GENMASK(8, 0))

/*      ANA:ANA:FLOODING */
#define ANA_FLOODING(r)           __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 68, r, 8, 4)

#define ANA_FLOODING_FLD_UNICAST(x)              (((x) << 12) & GENMASK(17, 12))
#define ANA_FLOODING_FLD_UNICAST_M               GENMASK(17, 12)
#define ANA_FLOODING_FLD_UNICAST_X(x)            (((x) & GENMASK(17, 12)) >> 12)

#define ANA_FLOODING_FLD_BROADCAST(x)            (((x) << 6) & GENMASK(11, 6))
#define ANA_FLOODING_FLD_BROADCAST_M             GENMASK(11, 6)
#define ANA_FLOODING_FLD_BROADCAST_X(x)          (((x) & GENMASK(11, 6)) >> 6)

#define ANA_FLOODING_FLD_MULTICAST(x)            ((x) & GENMASK(5, 0))
#define ANA_FLOODING_FLD_MULTICAST_M             GENMASK(5, 0)
#define ANA_FLOODING_FLD_MULTICAST_X(x)          ((x) & GENMASK(5, 0))

/*      ANA:ANA:FLOODING_IPMC */
#define ANA_FLOODING_IPMC         __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 100, 0, 1, 4)

#define ANA_FLOODING_IPMC_FLD_MC4_CTRL(x)        (((x) << 18) & GENMASK(23, 18))
#define ANA_FLOODING_IPMC_FLD_MC4_CTRL_M         GENMASK(23, 18)
#define ANA_FLOODING_IPMC_FLD_MC4_CTRL_X(x)      (((x) & GENMASK(23, 18)) >> 18)

#define ANA_FLOODING_IPMC_FLD_MC4_DATA(x)        (((x) << 12) & GENMASK(17, 12))
#define ANA_FLOODING_IPMC_FLD_MC4_DATA_M         GENMASK(17, 12)
#define ANA_FLOODING_IPMC_FLD_MC4_DATA_X(x)      (((x) & GENMASK(17, 12)) >> 12)

#define ANA_FLOODING_IPMC_FLD_MC6_CTRL(x)        (((x) << 6) & GENMASK(11, 6))
#define ANA_FLOODING_IPMC_FLD_MC6_CTRL_M         GENMASK(11, 6)
#define ANA_FLOODING_IPMC_FLD_MC6_CTRL_X(x)      (((x) & GENMASK(11, 6)) >> 6)

#define ANA_FLOODING_IPMC_FLD_MC6_DATA(x)        ((x) & GENMASK(5, 0))
#define ANA_FLOODING_IPMC_FLD_MC6_DATA_M         GENMASK(5, 0)
#define ANA_FLOODING_IPMC_FLD_MC6_DATA_X(x)      ((x) & GENMASK(5, 0))

/*      ANA:ANA:PORT_MODE */
#define ANA_PORT_MODE(r)          __REG(TARGET_ANA,\
					0, 1, 29824, 0, 1, 244, 144, r, 10, 4)

#define ANA_PORT_MODE_REDTAG_PARSE_CFG(x)        (((x) << 3) & GENMASK(3, 3))
#define ANA_PORT_MODE_REDTAG_PARSE_CFG_M         GENMASK(3, 3)
#define ANA_PORT_MODE_REDTAG_PARSE_CFG_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define ANA_PORT_MODE_VLAN_PARSE_CFG(x)          (((x) << 1) & GENMASK(2, 1))
#define ANA_PORT_MODE_VLAN_PARSE_CFG_M           GENMASK(2, 1)
#define ANA_PORT_MODE_VLAN_PARSE_CFG_X(x)        (((x) & GENMASK(2, 1)) >> 1)

#define ANA_PORT_MODE_L3_PARSE_CFG(x)            ((x) & GENMASK(0, 0))
#define ANA_PORT_MODE_L3_PARSE_CFG_M             GENMASK(0, 0)
#define ANA_PORT_MODE_L3_PARSE_CFG_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:PGID:PGID */
#define ANA_PGID(g)               __REG(TARGET_ANA,\
					0, 1, 27648, g, 89, 8, 0, 0, 1, 4)

#define ANA_PGID_PGID(x)                         ((x) & GENMASK(8, 0))
#define ANA_PGID_PGID_M                          GENMASK(8, 0)
#define ANA_PGID_PGID_X(x)                       ((x) & GENMASK(8, 0))

/*      ANA:PGID:PGID_CFG */
#define ANA_PGID_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 27648, g, 89, 8, 4, 0, 1, 4)

#define ANA_PGID_CFG_CPUQ_DST_PGID(x)            (((x) << 1) & GENMASK(3, 1))
#define ANA_PGID_CFG_CPUQ_DST_PGID_M             GENMASK(3, 1)
#define ANA_PGID_CFG_CPUQ_DST_PGID_X(x)          (((x) & GENMASK(3, 1)) >> 1)

#define ANA_PGID_CFG_OBEY_VLAN(x)                ((x) & GENMASK(0, 0))
#define ANA_PGID_CFG_OBEY_VLAN_M                 GENMASK(0, 0)
#define ANA_PGID_CFG_OBEY_VLAN_X(x)              ((x) & GENMASK(0, 0))

/*      ANA:ANA_TABLES:MACHDATA */
#define ANA_MACHDATA              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 40, 0, 1, 4)

#define ANA_MACHDATA_VID(x)                      (((x) << 16) & GENMASK(28, 16))
#define ANA_MACHDATA_VID_M                       GENMASK(28, 16)
#define ANA_MACHDATA_VID_X(x)                    (((x) & GENMASK(28, 16)) >> 16)

#define ANA_MACHDATA_MACHDATA(x)                 ((x) & GENMASK(15, 0))
#define ANA_MACHDATA_MACHDATA_M                  GENMASK(15, 0)
#define ANA_MACHDATA_MACHDATA_X(x)               ((x) & GENMASK(15, 0))

/*      ANA:ANA_TABLES:MACLDATA */
#define ANA_MACLDATA              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 44, 0, 1, 4)

/*      ANA:ANA_TABLES:MACACCESS */
#define ANA_MACACCESS             __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 48, 0, 1, 4)

#define ANA_MACACCESS_CHANGE2SW(x)               (((x) << 17) & GENMASK(17, 17))
#define ANA_MACACCESS_CHANGE2SW_M                GENMASK(17, 17)
#define ANA_MACACCESS_CHANGE2SW_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define ANA_MACACCESS_MAC_CPU_COPY(x)            (((x) << 16) & GENMASK(16, 16))
#define ANA_MACACCESS_MAC_CPU_COPY_M             GENMASK(16, 16)
#define ANA_MACACCESS_MAC_CPU_COPY_X(x)          (((x) & GENMASK(16, 16)) >> 16)

#define ANA_MACACCESS_SRC_KILL(x)                (((x) << 15) & GENMASK(15, 15))
#define ANA_MACACCESS_SRC_KILL_M                 GENMASK(15, 15)
#define ANA_MACACCESS_SRC_KILL_X(x)              (((x) & GENMASK(15, 15)) >> 15)

#define ANA_MACACCESS_IGNORE_VLAN(x)             (((x) << 14) & GENMASK(14, 14))
#define ANA_MACACCESS_IGNORE_VLAN_M              GENMASK(14, 14)
#define ANA_MACACCESS_IGNORE_VLAN_X(x)           (((x) & GENMASK(14, 14)) >> 14)

#define ANA_MACACCESS_AGED_FLAG(x)               (((x) << 13) & GENMASK(13, 13))
#define ANA_MACACCESS_AGED_FLAG_M                GENMASK(13, 13)
#define ANA_MACACCESS_AGED_FLAG_X(x)             (((x) & GENMASK(13, 13)) >> 13)

#define ANA_MACACCESS_VALID(x)                   (((x) << 12) & GENMASK(12, 12))
#define ANA_MACACCESS_VALID_M                    GENMASK(12, 12)
#define ANA_MACACCESS_VALID_X(x)                 (((x) & GENMASK(12, 12)) >> 12)

#define ANA_MACACCESS_ENTRYTYPE(x)               (((x) << 10) & GENMASK(11, 10))
#define ANA_MACACCESS_ENTRYTYPE_M                GENMASK(11, 10)
#define ANA_MACACCESS_ENTRYTYPE_X(x)             (((x) & GENMASK(11, 10)) >> 10)

#define ANA_MACACCESS_DEST_IDX(x)                (((x) << 4) & GENMASK(9, 4))
#define ANA_MACACCESS_DEST_IDX_M                 GENMASK(9, 4)
#define ANA_MACACCESS_DEST_IDX_X(x)              (((x) & GENMASK(9, 4)) >> 4)

#define ANA_MACACCESS_MAC_TABLE_CMD(x)           ((x) & GENMASK(3, 0))
#define ANA_MACACCESS_MAC_TABLE_CMD_M            GENMASK(3, 0)
#define ANA_MACACCESS_MAC_TABLE_CMD_X(x)         ((x) & GENMASK(3, 0))

/*      ANA:ANA_TABLES:MACTINDX */
#define ANA_MACTINDX              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 52, 0, 1, 4)

#define ANA_MACTINDX_BUCKET(x)                   (((x) << 11) & GENMASK(12, 11))
#define ANA_MACTINDX_BUCKET_M                    GENMASK(12, 11)
#define ANA_MACTINDX_BUCKET_X(x)                 (((x) & GENMASK(12, 11)) >> 11)

#define ANA_MACTINDX_M_INDEX(x)                  ((x) & GENMASK(10, 0))
#define ANA_MACTINDX_M_INDEX_M                   GENMASK(10, 0)
#define ANA_MACTINDX_M_INDEX_X(x)                ((x) & GENMASK(10, 0))

/*      ANA:ANA_TABLES:VLAN_PORT_MASK */
#define ANA_VLAN_PORT_MASK        __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 56, 0, 1, 4)

#define ANA_VLAN_PORT_MASK_VLAN_PORT_MASK(x)     ((x) & GENMASK(8, 0))
#define ANA_VLAN_PORT_MASK_VLAN_PORT_MASK_M      GENMASK(8, 0)
#define ANA_VLAN_PORT_MASK_VLAN_PORT_MASK_X(x)   ((x) & GENMASK(8, 0))

/*      ANA:ANA_TABLES:VLANACCESS */
#define ANA_VLANACCESS            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 60, 0, 1, 4)

#define ANA_VLANACCESS_VLAN_TBL_CMD(x)           ((x) & GENMASK(1, 0))
#define ANA_VLANACCESS_VLAN_TBL_CMD_M            GENMASK(1, 0)
#define ANA_VLANACCESS_VLAN_TBL_CMD_X(x)         ((x) & GENMASK(1, 0))

/*      ANA:ANA_TABLES:VLANTIDX */
#define ANA_VLANTIDX              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 64, 0, 1, 4)

#define ANA_VLANTIDX_VLAN_PGID_CPU_DIS(x)        (((x) << 18) & GENMASK(18, 18))
#define ANA_VLANTIDX_VLAN_PGID_CPU_DIS_M         GENMASK(18, 18)
#define ANA_VLANTIDX_VLAN_PGID_CPU_DIS_X(x)      (((x) & GENMASK(18, 18)) >> 18)

#define ANA_VLANTIDX_VLAN_SEC_FWD_ENA(x)         (((x) << 17) & GENMASK(17, 17))
#define ANA_VLANTIDX_VLAN_SEC_FWD_ENA_M          GENMASK(17, 17)
#define ANA_VLANTIDX_VLAN_SEC_FWD_ENA_X(x)       (((x) & GENMASK(17, 17)) >> 17)

#define ANA_VLANTIDX_VLAN_FLOOD_DIS(x)           (((x) << 16) & GENMASK(16, 16))
#define ANA_VLANTIDX_VLAN_FLOOD_DIS_M            GENMASK(16, 16)
#define ANA_VLANTIDX_VLAN_FLOOD_DIS_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define ANA_VLANTIDX_VLAN_PRIV_VLAN(x)           (((x) << 15) & GENMASK(15, 15))
#define ANA_VLANTIDX_VLAN_PRIV_VLAN_M            GENMASK(15, 15)
#define ANA_VLANTIDX_VLAN_PRIV_VLAN_X(x)         (((x) & GENMASK(15, 15)) >> 15)

#define ANA_VLANTIDX_VLAN_LEARN_DISABLED(x)      (((x) << 14) & GENMASK(14, 14))
#define ANA_VLANTIDX_VLAN_LEARN_DISABLED_M       GENMASK(14, 14)
#define ANA_VLANTIDX_VLAN_LEARN_DISABLED_X(x)    (((x) & GENMASK(14, 14)) >> 14)

#define ANA_VLANTIDX_VLAN_MIRROR(x)              (((x) << 13) & GENMASK(13, 13))
#define ANA_VLANTIDX_VLAN_MIRROR_M               GENMASK(13, 13)
#define ANA_VLANTIDX_VLAN_MIRROR_X(x)            (((x) & GENMASK(13, 13)) >> 13)

#define ANA_VLANTIDX_VLAN_SRC_CHK(x)             (((x) << 12) & GENMASK(12, 12))
#define ANA_VLANTIDX_VLAN_SRC_CHK_M              GENMASK(12, 12)
#define ANA_VLANTIDX_VLAN_SRC_CHK_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define ANA_VLANTIDX_V_INDEX(x)                  ((x) & GENMASK(11, 0))
#define ANA_VLANTIDX_V_INDEX_M                   GENMASK(11, 0)
#define ANA_VLANTIDX_V_INDEX_X(x)                ((x) & GENMASK(11, 0))

/*      ANA:ANA_TABLES:STREAMACCESS */
#define ANA_STREAMACCESS          __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 68, 0, 1, 4)

#define ANA_STREAMACCESS_GEN_SEQ_NUM(x)          (((x) << 4) & GENMASK(19, 4))
#define ANA_STREAMACCESS_GEN_SEQ_NUM_M           GENMASK(19, 4)
#define ANA_STREAMACCESS_GEN_SEQ_NUM_X(x)        (((x) & GENMASK(19, 4)) >> 4)

#define ANA_STREAMACCESS_RTAG_POP_ENA(x)         (((x) << 3) & GENMASK(3, 3))
#define ANA_STREAMACCESS_RTAG_POP_ENA_M          GENMASK(3, 3)
#define ANA_STREAMACCESS_RTAG_POP_ENA_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define ANA_STREAMACCESS_SEQ_GEN_ENA(x)          (((x) << 2) & GENMASK(2, 2))
#define ANA_STREAMACCESS_SEQ_GEN_ENA_M           GENMASK(2, 2)
#define ANA_STREAMACCESS_SEQ_GEN_ENA_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define ANA_STREAMACCESS_STREAM_TBL_CMD(x)       ((x) & GENMASK(1, 0))
#define ANA_STREAMACCESS_STREAM_TBL_CMD_M        GENMASK(1, 0)
#define ANA_STREAMACCESS_STREAM_TBL_CMD_X(x)     ((x) & GENMASK(1, 0))

/*      ANA:ANA_TABLES:STREAMTIDX */
#define ANA_STREAMTIDX            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 72, 0, 1, 4)

#define ANA_STREAMTIDX_SEQ_GEN_ERR_STATUS(x)     (((x) << 30) & GENMASK(31, 30))
#define ANA_STREAMTIDX_SEQ_GEN_ERR_STATUS_M      GENMASK(31, 30)
#define ANA_STREAMTIDX_SEQ_GEN_ERR_STATUS_X(x)   (((x) & GENMASK(31, 30)) >> 30)

#define ANA_STREAMTIDX_S_INDEX(x)                (((x) << 16) & GENMASK(23, 16))
#define ANA_STREAMTIDX_S_INDEX_M                 GENMASK(23, 16)
#define ANA_STREAMTIDX_S_INDEX_X(x)              (((x) & GENMASK(23, 16)) >> 16)

#define ANA_STREAMTIDX_STREAM_SPLIT(x)           ((x) & GENMASK(0, 0))
#define ANA_STREAMTIDX_STREAM_SPLIT_M            GENMASK(0, 0)
#define ANA_STREAMTIDX_STREAM_SPLIT_X(x)         ((x) & GENMASK(0, 0))

/*      ANA:ANA_TABLES:SPLIT_MASK */
#define ANA_SPLIT_MASK            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 76, 0, 1, 4)

#define ANA_SPLIT_MASK_SPLIT_MASK(x)             ((x) & GENMASK(8, 0))
#define ANA_SPLIT_MASK_SPLIT_MASK_M              GENMASK(8, 0)
#define ANA_SPLIT_MASK_SPLIT_MASK_X(x)           ((x) & GENMASK(8, 0))

/*      ANA:ANA_TABLES:INPUT_PORT_MASK */
#define ANA_INPUT_PORT_MASK       __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 80, 0, 1, 4)

#define ANA_INPUT_PORT_MASK_INPUT_PORT_MASK(x)   ((x) & GENMASK(8, 0))
#define ANA_INPUT_PORT_MASK_INPUT_PORT_MASK_M    GENMASK(8, 0)
#define ANA_INPUT_PORT_MASK_INPUT_PORT_MASK_X(x) ((x) & GENMASK(8, 0))

/*      ANA:ANA_TABLES:SFIDACCESS */
#define ANA_SFIDACCESS            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 84, 0, 1, 4)

#define ANA_SFIDACCESS_B_O_FRM(x)                (((x) << 24) & GENMASK(24, 24))
#define ANA_SFIDACCESS_B_O_FRM_M                 GENMASK(24, 24)
#define ANA_SFIDACCESS_B_O_FRM_X(x)              (((x) & GENMASK(24, 24)) >> 24)

#define ANA_SFIDACCESS_B_O_FRM_ENA(x)            (((x) << 23) & GENMASK(23, 23))
#define ANA_SFIDACCESS_B_O_FRM_ENA_M             GENMASK(23, 23)
#define ANA_SFIDACCESS_B_O_FRM_ENA_X(x)          (((x) & GENMASK(23, 23)) >> 23)

#define ANA_SFIDACCESS_FORCE_BLOCK(x)            (((x) << 18) & GENMASK(18, 18))
#define ANA_SFIDACCESS_FORCE_BLOCK_M             GENMASK(18, 18)
#define ANA_SFIDACCESS_FORCE_BLOCK_X(x)          (((x) & GENMASK(18, 18)) >> 18)

#define ANA_SFIDACCESS_MAX_SDU_LEN(x)            (((x) << 2) & GENMASK(17, 2))
#define ANA_SFIDACCESS_MAX_SDU_LEN_M             GENMASK(17, 2)
#define ANA_SFIDACCESS_MAX_SDU_LEN_X(x)          (((x) & GENMASK(17, 2)) >> 2)

#define ANA_SFIDACCESS_SFID_TBL_CMD(x)           ((x) & GENMASK(1, 0))
#define ANA_SFIDACCESS_SFID_TBL_CMD_M            GENMASK(1, 0)
#define ANA_SFIDACCESS_SFID_TBL_CMD_X(x)         ((x) & GENMASK(1, 0))

/*      ANA:ANA_TABLES:SFIDTIDX */
#define ANA_SFIDTIDX              __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 88, 0, 1, 4)

#define ANA_SFIDTIDX_SFID_INDEX(x)               ((x) & GENMASK(7, 0))
#define ANA_SFIDTIDX_SFID_INDEX_M                GENMASK(7, 0)
#define ANA_SFIDTIDX_SFID_INDEX_X(x)             ((x) & GENMASK(7, 0))

/*      ANA:ANA_TABLES:PMACACCESS */
#define ANA_PMACACCESS            __REG(TARGET_ANA,\
					0, 1, 27520, 0, 1, 128, 92, 0, 1, 4)

#define ANA_PMACACCESS_PMAC_CPU_COPY(x)          (((x) << 16) & GENMASK(16, 16))
#define ANA_PMACACCESS_PMAC_CPU_COPY_M           GENMASK(16, 16)
#define ANA_PMACACCESS_PMAC_CPU_COPY_X(x)        (((x) & GENMASK(16, 16)) >> 16)

#define ANA_PMACACCESS_PMAC_IGNORE_VLAN(x)       (((x) << 14) & GENMASK(14, 14))
#define ANA_PMACACCESS_PMAC_IGNORE_VLAN_M        GENMASK(14, 14)
#define ANA_PMACACCESS_PMAC_IGNORE_VLAN_X(x)     (((x) & GENMASK(14, 14)) >> 14)

#define ANA_PMACACCESS_PMAC_VALID(x)             (((x) << 12) & GENMASK(12, 12))
#define ANA_PMACACCESS_PMAC_VALID_M              GENMASK(12, 12)
#define ANA_PMACACCESS_PMAC_VALID_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define ANA_PMACACCESS_PMAC_DEST_IDX(x)          (((x) << 4) & GENMASK(9, 4))
#define ANA_PMACACCESS_PMAC_DEST_IDX_M           GENMASK(9, 4)
#define ANA_PMACACCESS_PMAC_DEST_IDX_X(x)        (((x) & GENMASK(9, 4)) >> 4)

#define ANA_PMACACCESS_PMAC_TBL_CMD(x)           ((x) & GENMASK(1, 0))
#define ANA_PMACACCESS_PMAC_TBL_CMD_M            GENMASK(1, 0)
#define ANA_PMACACCESS_PMAC_TBL_CMD_X(x)         ((x) & GENMASK(1, 0))

/*      ANA:SG_ACCESS:SG_ACCESS_CTRL */
#define ANA_SG_ACCESS_CTRL        __REG(TARGET_ANA,\
					0, 1, 27440, 0, 1, 8, 0, 0, 1, 4)

#define ANA_SG_ACCESS_CTRL_CONFIG_CHANGE(x)      (((x) << 28) & GENMASK(28, 28))
#define ANA_SG_ACCESS_CTRL_CONFIG_CHANGE_M       GENMASK(28, 28)
#define ANA_SG_ACCESS_CTRL_CONFIG_CHANGE_X(x)    (((x) & GENMASK(28, 28)) >> 28)

#define ANA_SG_ACCESS_CTRL_SGID(x)               ((x) & GENMASK(7, 0))
#define ANA_SG_ACCESS_CTRL_SGID_M                GENMASK(7, 0)
#define ANA_SG_ACCESS_CTRL_SGID_X(x)             ((x) & GENMASK(7, 0))

/*      ANA:SG_ACCESS:SG_PTP_DOMAIN_CFG */
#define ANA_SG_PTP_DOMAIN_CFG     __REG(TARGET_ANA,\
					0, 1, 27440, 0, 1, 8, 4, 0, 1, 4)

#define ANA_SG_PTP_DOMAIN_CFG_PTP_DOMAIN(x)      ((x) & GENMASK(1, 0))
#define ANA_SG_PTP_DOMAIN_CFG_PTP_DOMAIN_M       GENMASK(1, 0)
#define ANA_SG_PTP_DOMAIN_CFG_PTP_DOMAIN_X(x)    ((x) & GENMASK(1, 0))

/*      ANA:SG_CONFIG:SG_CFG_1 */
#define ANA_SG_CFG_1              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 48, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_CFG_2 */
#define ANA_SG_CFG_2              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 52, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_CFG_3 */
#define ANA_SG_CFG_3              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 56, 0, 1, 4)

#define ANA_SG_CFG_3_OCTETS_EXCEEDED(x)          (((x) << 29) & GENMASK(29, 29))
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_M           GENMASK(29, 29)
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_X(x)        (((x) & GENMASK(29, 29)) >> 29)

#define ANA_SG_CFG_3_OCTETS_EXCEEDED_ENA(x)      (((x) << 28) & GENMASK(28, 28))
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_ENA_M       GENMASK(28, 28)
#define ANA_SG_CFG_3_OCTETS_EXCEEDED_ENA_X(x)    (((x) & GENMASK(28, 28)) >> 28)

#define ANA_SG_CFG_3_INVALID_RX(x)               (((x) << 27) & GENMASK(27, 27))
#define ANA_SG_CFG_3_INVALID_RX_M                GENMASK(27, 27)
#define ANA_SG_CFG_3_INVALID_RX_X(x)             (((x) & GENMASK(27, 27)) >> 27)

#define ANA_SG_CFG_3_INVALID_RX_ENA(x)           (((x) << 26) & GENMASK(26, 26))
#define ANA_SG_CFG_3_INVALID_RX_ENA_M            GENMASK(26, 26)
#define ANA_SG_CFG_3_INVALID_RX_ENA_X(x)         (((x) & GENMASK(26, 26)) >> 26)

#define ANA_SG_CFG_3_INIT_GATE_STATE(x)          (((x) << 25) & GENMASK(25, 25))
#define ANA_SG_CFG_3_INIT_GATE_STATE_M           GENMASK(25, 25)
#define ANA_SG_CFG_3_INIT_GATE_STATE_X(x)        (((x) & GENMASK(25, 25)) >> 25)

#define ANA_SG_CFG_3_INIT_IPS(x)                 (((x) << 21) & GENMASK(24, 21))
#define ANA_SG_CFG_3_INIT_IPS_M                  GENMASK(24, 21)
#define ANA_SG_CFG_3_INIT_IPS_X(x)               (((x) & GENMASK(24, 21)) >> 21)

#define ANA_SG_CFG_3_GATE_ENABLE(x)              (((x) << 20) & GENMASK(20, 20))
#define ANA_SG_CFG_3_GATE_ENABLE_M               GENMASK(20, 20)
#define ANA_SG_CFG_3_GATE_ENABLE_X(x)            (((x) & GENMASK(20, 20)) >> 20)

#define ANA_SG_CFG_3_LIST_LENGTH(x)              (((x) << 16) & GENMASK(18, 16))
#define ANA_SG_CFG_3_LIST_LENGTH_M               GENMASK(18, 16)
#define ANA_SG_CFG_3_LIST_LENGTH_X(x)            (((x) & GENMASK(18, 16)) >> 16)

#define ANA_SG_CFG_3_BASE_TIME_SEC_MSB(x)        ((x) & GENMASK(15, 0))
#define ANA_SG_CFG_3_BASE_TIME_SEC_MSB_M         GENMASK(15, 0)
#define ANA_SG_CFG_3_BASE_TIME_SEC_MSB_X(x)      ((x) & GENMASK(15, 0))

/*      ANA:SG_CONFIG:SG_CFG_4 */
#define ANA_SG_CFG_4              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 60, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_CFG_5 */
#define ANA_SG_CFG_5              __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 64, 0, 1, 4)

/*      ANA:SG_CONFIG:SG_GCL_GS_CFG */
#define ANA_SG_GCL_GS_CFG(r)      __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 0, r, 4, 4)

#define ANA_SG_GCL_GS_CFG_GATE_STATE(x)          (((x) << 4) & GENMASK(4, 4))
#define ANA_SG_GCL_GS_CFG_GATE_STATE_M           GENMASK(4, 4)
#define ANA_SG_GCL_GS_CFG_GATE_STATE_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define ANA_SG_GCL_GS_CFG_IPS(x)                 ((x) & GENMASK(3, 0))
#define ANA_SG_GCL_GS_CFG_IPS_M                  GENMASK(3, 0)
#define ANA_SG_GCL_GS_CFG_IPS_X(x)               ((x) & GENMASK(3, 0))

/*      ANA:SG_CONFIG:SG_GCL_TI_CFG */
#define ANA_SG_GCL_TI_CFG(r)      __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 16, r, 4, 4)

/*      ANA:SG_CONFIG:SG_GCL_OCT_CFG */
#define ANA_SG_GCL_OCT_CFG(r)     __REG(TARGET_ANA,\
					0, 1, 28416, 0, 1, 128, 32, r, 4, 4)

/*      ANA:SG_STATUS:SG_STS_1 */
#define ANA_SG_STS_1              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 0, 0, 1, 4)

/*      ANA:SG_STATUS:SG_STS_2 */
#define ANA_SG_STS_2              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 4, 0, 1, 4)

/*      ANA:SG_STATUS:SG_STS_3 */
#define ANA_SG_STS_3              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 8, 0, 1, 4)

#define ANA_SG_STS_3_GCL_OCTET_INDEX(x)          (((x) << 25) & GENMASK(27, 25))
#define ANA_SG_STS_3_GCL_OCTET_INDEX_M           GENMASK(27, 25)
#define ANA_SG_STS_3_GCL_OCTET_INDEX_X(x)        (((x) & GENMASK(27, 25)) >> 25)

#define ANA_SG_STS_3_CONFIG_PENDING(x)           (((x) << 24) & GENMASK(24, 24))
#define ANA_SG_STS_3_CONFIG_PENDING_M            GENMASK(24, 24)
#define ANA_SG_STS_3_CONFIG_PENDING_X(x)         (((x) & GENMASK(24, 24)) >> 24)

#define ANA_SG_STS_3_IPS(x)                      (((x) << 20) & GENMASK(23, 20))
#define ANA_SG_STS_3_IPS_M                       GENMASK(23, 20)
#define ANA_SG_STS_3_IPS_X(x)                    (((x) & GENMASK(23, 20)) >> 20)

#define ANA_SG_STS_3_GATE_STATE(x)               (((x) << 16) & GENMASK(16, 16))
#define ANA_SG_STS_3_GATE_STATE_M                GENMASK(16, 16)
#define ANA_SG_STS_3_GATE_STATE_X(x)             (((x) & GENMASK(16, 16)) >> 16)

#define ANA_SG_STS_3_CFG_CHG_TIME_SEC_MSB(x)     ((x) & GENMASK(15, 0))
#define ANA_SG_STS_3_CFG_CHG_TIME_SEC_MSB_M      GENMASK(15, 0)
#define ANA_SG_STS_3_CFG_CHG_TIME_SEC_MSB_X(x)   ((x) & GENMASK(15, 0))

/*      ANA:SG_STATUS:SG_STS_4 */
#define ANA_SG_STS_4              __REG(TARGET_ANA,\
					0, 1, 27424, 0, 1, 16, 12, 0, 1, 4)

/*      ANA:PORT:VLAN_CFG */
#define ANA_VLAN_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 0, 0, 1, 4)

#define ANA_VLAN_CFG_VLAN_PFC_ENA(x)             (((x) << 21) & GENMASK(21, 21))
#define ANA_VLAN_CFG_VLAN_PFC_ENA_M              GENMASK(21, 21)
#define ANA_VLAN_CFG_VLAN_PFC_ENA_X(x)           (((x) & GENMASK(21, 21)) >> 21)

#define ANA_VLAN_CFG_VLAN_AWARE_ENA(x)           (((x) << 20) & GENMASK(20, 20))
#define ANA_VLAN_CFG_VLAN_AWARE_ENA_M            GENMASK(20, 20)
#define ANA_VLAN_CFG_VLAN_AWARE_ENA_X(x)         (((x) & GENMASK(20, 20)) >> 20)

#define ANA_VLAN_CFG_VLAN_POP_CNT(x)             (((x) << 18) & GENMASK(19, 18))
#define ANA_VLAN_CFG_VLAN_POP_CNT_M              GENMASK(19, 18)
#define ANA_VLAN_CFG_VLAN_POP_CNT_X(x)           (((x) & GENMASK(19, 18)) >> 18)

#define ANA_VLAN_CFG_VLAN_INNER_TAG_ENA(x)       (((x) << 17) & GENMASK(17, 17))
#define ANA_VLAN_CFG_VLAN_INNER_TAG_ENA_M        GENMASK(17, 17)
#define ANA_VLAN_CFG_VLAN_INNER_TAG_ENA_X(x)     (((x) & GENMASK(17, 17)) >> 17)

#define ANA_VLAN_CFG_VLAN_TAG_TYPE(x)            (((x) << 16) & GENMASK(16, 16))
#define ANA_VLAN_CFG_VLAN_TAG_TYPE_M             GENMASK(16, 16)
#define ANA_VLAN_CFG_VLAN_TAG_TYPE_X(x)          (((x) & GENMASK(16, 16)) >> 16)

#define ANA_VLAN_CFG_VLAN_PCP(x)                 (((x) << 13) & GENMASK(15, 13))
#define ANA_VLAN_CFG_VLAN_PCP_M                  GENMASK(15, 13)
#define ANA_VLAN_CFG_VLAN_PCP_X(x)               (((x) & GENMASK(15, 13)) >> 13)

#define ANA_VLAN_CFG_VLAN_DEI(x)                 (((x) << 12) & GENMASK(12, 12))
#define ANA_VLAN_CFG_VLAN_DEI_M                  GENMASK(12, 12)
#define ANA_VLAN_CFG_VLAN_DEI_X(x)               (((x) & GENMASK(12, 12)) >> 12)

#define ANA_VLAN_CFG_VLAN_VID(x)                 ((x) & GENMASK(11, 0))
#define ANA_VLAN_CFG_VLAN_VID_M                  GENMASK(11, 0)
#define ANA_VLAN_CFG_VLAN_VID_X(x)               ((x) & GENMASK(11, 0))

/*      ANA:PORT:DROP_CFG */
#define ANA_DROP_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 4, 0, 1, 4)

#define ANA_DROP_CFG_DROP_UNTAGGED_ENA(x)        (((x) << 6) & GENMASK(6, 6))
#define ANA_DROP_CFG_DROP_UNTAGGED_ENA_M         GENMASK(6, 6)
#define ANA_DROP_CFG_DROP_UNTAGGED_ENA_X(x)      (((x) & GENMASK(6, 6)) >> 6)

#define ANA_DROP_CFG_DROP_S_TAGGED_ENA(x)        (((x) << 5) & GENMASK(5, 5))
#define ANA_DROP_CFG_DROP_S_TAGGED_ENA_M         GENMASK(5, 5)
#define ANA_DROP_CFG_DROP_S_TAGGED_ENA_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define ANA_DROP_CFG_DROP_C_TAGGED_ENA(x)        (((x) << 4) & GENMASK(4, 4))
#define ANA_DROP_CFG_DROP_C_TAGGED_ENA_M         GENMASK(4, 4)
#define ANA_DROP_CFG_DROP_C_TAGGED_ENA_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define ANA_DROP_CFG_DROP_PRIO_S_TAGGED_ENA(x)   (((x) << 3) & GENMASK(3, 3))
#define ANA_DROP_CFG_DROP_PRIO_S_TAGGED_ENA_M    GENMASK(3, 3)
#define ANA_DROP_CFG_DROP_PRIO_S_TAGGED_ENA_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define ANA_DROP_CFG_DROP_PRIO_C_TAGGED_ENA(x)   (((x) << 2) & GENMASK(2, 2))
#define ANA_DROP_CFG_DROP_PRIO_C_TAGGED_ENA_M    GENMASK(2, 2)
#define ANA_DROP_CFG_DROP_PRIO_C_TAGGED_ENA_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define ANA_DROP_CFG_DROP_NULL_MAC_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_DROP_CFG_DROP_NULL_MAC_ENA_M         GENMASK(1, 1)
#define ANA_DROP_CFG_DROP_NULL_MAC_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_DROP_CFG_DROP_MC_SMAC_ENA(x)         ((x) & GENMASK(0, 0))
#define ANA_DROP_CFG_DROP_MC_SMAC_ENA_M          GENMASK(0, 0)
#define ANA_DROP_CFG_DROP_MC_SMAC_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      ANA:PORT:QOS_CFG */
#define ANA_QOS_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 8, 0, 1, 4)

#define ANA_QOS_CFG_DEI_STAG_ONLY_ENA(x)         (((x) << 9) & GENMASK(9, 9))
#define ANA_QOS_CFG_DEI_STAG_ONLY_ENA_M          GENMASK(9, 9)
#define ANA_QOS_CFG_DEI_STAG_ONLY_ENA_X(x)       (((x) & GENMASK(9, 9)) >> 9)

#define ANA_QOS_CFG_DP_DEFAULT_VAL(x)            (((x) << 8) & GENMASK(8, 8))
#define ANA_QOS_CFG_DP_DEFAULT_VAL_M             GENMASK(8, 8)
#define ANA_QOS_CFG_DP_DEFAULT_VAL_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define ANA_QOS_CFG_QOS_DEFAULT_VAL(x)           (((x) << 5) & GENMASK(7, 5))
#define ANA_QOS_CFG_QOS_DEFAULT_VAL_M            GENMASK(7, 5)
#define ANA_QOS_CFG_QOS_DEFAULT_VAL_X(x)         (((x) & GENMASK(7, 5)) >> 5)

#define ANA_QOS_CFG_QOS_DSCP_ENA(x)              (((x) << 4) & GENMASK(4, 4))
#define ANA_QOS_CFG_QOS_DSCP_ENA_M               GENMASK(4, 4)
#define ANA_QOS_CFG_QOS_DSCP_ENA_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define ANA_QOS_CFG_QOS_PCP_ENA(x)               (((x) << 3) & GENMASK(3, 3))
#define ANA_QOS_CFG_QOS_PCP_ENA_M                GENMASK(3, 3)
#define ANA_QOS_CFG_QOS_PCP_ENA_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define ANA_QOS_CFG_DSCP_TRANSLATE_ENA(x)        (((x) << 2) & GENMASK(2, 2))
#define ANA_QOS_CFG_DSCP_TRANSLATE_ENA_M         GENMASK(2, 2)
#define ANA_QOS_CFG_DSCP_TRANSLATE_ENA_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define ANA_QOS_CFG_DSCP_REWR_CFG(x)             ((x) & GENMASK(1, 0))
#define ANA_QOS_CFG_DSCP_REWR_CFG_M              GENMASK(1, 0)
#define ANA_QOS_CFG_DSCP_REWR_CFG_X(x)           ((x) & GENMASK(1, 0))

/*      ANA:PORT:VCAP_CFG */
#define ANA_VCAP_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 12, 0, 1, 4)

#define ANA_VCAP_CFG_S1_SMAC_ENA(x)              (((x) << 15) & GENMASK(17, 15))
#define ANA_VCAP_CFG_S1_SMAC_ENA_M               GENMASK(17, 15)
#define ANA_VCAP_CFG_S1_SMAC_ENA_X(x)            (((x) & GENMASK(17, 15)) >> 15)

#define ANA_VCAP_CFG_S1_ENA(x)                   (((x) << 14) & GENMASK(14, 14))
#define ANA_VCAP_CFG_S1_ENA_M                    GENMASK(14, 14)
#define ANA_VCAP_CFG_S1_ENA_X(x)                 (((x) & GENMASK(14, 14)) >> 14)

#define ANA_VCAP_CFG_S1_DMAC_DIP_ENA(x)          (((x) << 11) & GENMASK(13, 11))
#define ANA_VCAP_CFG_S1_DMAC_DIP_ENA_M           GENMASK(13, 11)
#define ANA_VCAP_CFG_S1_DMAC_DIP_ENA_X(x)        (((x) & GENMASK(13, 11)) >> 11)

#define ANA_VCAP_CFG_S1_VLAN_INNER_TAG_ENA(x)    (((x) << 8) & GENMASK(10, 8))
#define ANA_VCAP_CFG_S1_VLAN_INNER_TAG_ENA_M     GENMASK(10, 8)
#define ANA_VCAP_CFG_S1_VLAN_INNER_TAG_ENA_X(x)  (((x) & GENMASK(10, 8)) >> 8)

#define ANA_VCAP_CFG_PAG_VAL(x)                  ((x) & GENMASK(7, 0))
#define ANA_VCAP_CFG_PAG_VAL_M                   GENMASK(7, 0)
#define ANA_VCAP_CFG_PAG_VAL_X(x)                ((x) & GENMASK(7, 0))

/*      ANA:PORT:VCAP_S1_CFG */
#define ANA_VCAP_S1_CFG(g, r)     __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 16, r, 3, 4)

#define ANA_VCAP_S1_CFG_KEY_RT_CFG(x)            (((x) << 9) & GENMASK(11, 9))
#define ANA_VCAP_S1_CFG_KEY_RT_CFG_M             GENMASK(11, 9)
#define ANA_VCAP_S1_CFG_KEY_RT_CFG_X(x)          (((x) & GENMASK(11, 9)) >> 9)

#define ANA_VCAP_S1_CFG_KEY_IP6_CFG(x)           (((x) << 6) & GENMASK(8, 6))
#define ANA_VCAP_S1_CFG_KEY_IP6_CFG_M            GENMASK(8, 6)
#define ANA_VCAP_S1_CFG_KEY_IP6_CFG_X(x)         (((x) & GENMASK(8, 6)) >> 6)

#define ANA_VCAP_S1_CFG_KEY_IP4_CFG(x)           (((x) << 3) & GENMASK(5, 3))
#define ANA_VCAP_S1_CFG_KEY_IP4_CFG_M            GENMASK(5, 3)
#define ANA_VCAP_S1_CFG_KEY_IP4_CFG_X(x)         (((x) & GENMASK(5, 3)) >> 3)

#define ANA_VCAP_S1_CFG_KEY_OTHER_CFG(x)         ((x) & GENMASK(2, 0))
#define ANA_VCAP_S1_CFG_KEY_OTHER_CFG_M          GENMASK(2, 0)
#define ANA_VCAP_S1_CFG_KEY_OTHER_CFG_X(x)       ((x) & GENMASK(2, 0))

/*      ANA:PORT:VCAP_S2_CFG */
#define ANA_VCAP_S2_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 28, 0, 1, 4)

#define ANA_VCAP_S2_CFG_ISDX_ENA(x)              (((x) << 19) & GENMASK(20, 19))
#define ANA_VCAP_S2_CFG_ISDX_ENA_M               GENMASK(20, 19)
#define ANA_VCAP_S2_CFG_ISDX_ENA_X(x)            (((x) & GENMASK(20, 19)) >> 19)

#define ANA_VCAP_S2_CFG_UDP_PAYLOAD_ENA(x)       (((x) << 17) & GENMASK(18, 17))
#define ANA_VCAP_S2_CFG_UDP_PAYLOAD_ENA_M        GENMASK(18, 17)
#define ANA_VCAP_S2_CFG_UDP_PAYLOAD_ENA_X(x)     (((x) & GENMASK(18, 17)) >> 17)

#define ANA_VCAP_S2_CFG_ETYPE_PAYLOAD_ENA(x)     (((x) << 15) & GENMASK(16, 15))
#define ANA_VCAP_S2_CFG_ETYPE_PAYLOAD_ENA_M      GENMASK(16, 15)
#define ANA_VCAP_S2_CFG_ETYPE_PAYLOAD_ENA_X(x)   (((x) & GENMASK(16, 15)) >> 15)

#define ANA_VCAP_S2_CFG_ENA(x)                   (((x) << 14) & GENMASK(14, 14))
#define ANA_VCAP_S2_CFG_ENA_M                    GENMASK(14, 14)
#define ANA_VCAP_S2_CFG_ENA_X(x)                 (((x) & GENMASK(14, 14)) >> 14)

#define ANA_VCAP_S2_CFG_SNAP_DIS(x)              (((x) << 12) & GENMASK(13, 12))
#define ANA_VCAP_S2_CFG_SNAP_DIS_M               GENMASK(13, 12)
#define ANA_VCAP_S2_CFG_SNAP_DIS_X(x)            (((x) & GENMASK(13, 12)) >> 12)

#define ANA_VCAP_S2_CFG_ARP_DIS(x)               (((x) << 10) & GENMASK(11, 10))
#define ANA_VCAP_S2_CFG_ARP_DIS_M                GENMASK(11, 10)
#define ANA_VCAP_S2_CFG_ARP_DIS_X(x)             (((x) & GENMASK(11, 10)) >> 10)

#define ANA_VCAP_S2_CFG_IP_TCPUDP_DIS(x)         (((x) << 8) & GENMASK(9, 8))
#define ANA_VCAP_S2_CFG_IP_TCPUDP_DIS_M          GENMASK(9, 8)
#define ANA_VCAP_S2_CFG_IP_TCPUDP_DIS_X(x)       (((x) & GENMASK(9, 8)) >> 8)

#define ANA_VCAP_S2_CFG_IP_OTHER_DIS(x)          (((x) << 6) & GENMASK(7, 6))
#define ANA_VCAP_S2_CFG_IP_OTHER_DIS_M           GENMASK(7, 6)
#define ANA_VCAP_S2_CFG_IP_OTHER_DIS_X(x)        (((x) & GENMASK(7, 6)) >> 6)

#define ANA_VCAP_S2_CFG_IP6_CFG(x)               (((x) << 2) & GENMASK(5, 2))
#define ANA_VCAP_S2_CFG_IP6_CFG_M                GENMASK(5, 2)
#define ANA_VCAP_S2_CFG_IP6_CFG_X(x)             (((x) & GENMASK(5, 2)) >> 2)

#define ANA_VCAP_S2_CFG_OAM_DIS(x)               ((x) & GENMASK(1, 0))
#define ANA_VCAP_S2_CFG_OAM_DIS_M                GENMASK(1, 0)
#define ANA_VCAP_S2_CFG_OAM_DIS_X(x)             ((x) & GENMASK(1, 0))

/*      ANA:PORT:PCP_DEI_CFG */
#define ANA_PCP_DEI_CFG(g, r)     __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 32, r, 16, 4)

#define ANA_PCP_DEI_CFG_DP_PCP_DEI_VAL(x)        (((x) << 3) & GENMASK(3, 3))
#define ANA_PCP_DEI_CFG_DP_PCP_DEI_VAL_M         GENMASK(3, 3)
#define ANA_PCP_DEI_CFG_DP_PCP_DEI_VAL_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define ANA_PCP_DEI_CFG_QOS_PCP_DEI_VAL(x)       ((x) & GENMASK(2, 0))
#define ANA_PCP_DEI_CFG_QOS_PCP_DEI_VAL_M        GENMASK(2, 0)
#define ANA_PCP_DEI_CFG_QOS_PCP_DEI_VAL_X(x)     ((x) & GENMASK(2, 0))

/*      ANA:PORT:CPU_FWD_CFG */
#define ANA_CPU_FWD_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 96, 0, 1, 4)

#define ANA_CPU_FWD_CFG_VRAP_REDIR_ENA(x)        (((x) << 7) & GENMASK(7, 7))
#define ANA_CPU_FWD_CFG_VRAP_REDIR_ENA_M         GENMASK(7, 7)
#define ANA_CPU_FWD_CFG_VRAP_REDIR_ENA_X(x)      (((x) & GENMASK(7, 7)) >> 7)

#define ANA_CPU_FWD_CFG_MLD_REDIR_ENA(x)         (((x) << 6) & GENMASK(6, 6))
#define ANA_CPU_FWD_CFG_MLD_REDIR_ENA_M          GENMASK(6, 6)
#define ANA_CPU_FWD_CFG_MLD_REDIR_ENA_X(x)       (((x) & GENMASK(6, 6)) >> 6)

#define ANA_CPU_FWD_CFG_IGMP_REDIR_ENA(x)        (((x) << 5) & GENMASK(5, 5))
#define ANA_CPU_FWD_CFG_IGMP_REDIR_ENA_M         GENMASK(5, 5)
#define ANA_CPU_FWD_CFG_IGMP_REDIR_ENA_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define ANA_CPU_FWD_CFG_IPMC_CTRL_COPY_ENA(x)    (((x) << 4) & GENMASK(4, 4))
#define ANA_CPU_FWD_CFG_IPMC_CTRL_COPY_ENA_M     GENMASK(4, 4)
#define ANA_CPU_FWD_CFG_IPMC_CTRL_COPY_ENA_X(x)  (((x) & GENMASK(4, 4)) >> 4)

#define ANA_CPU_FWD_CFG_SRC_COPY_ENA(x)          (((x) << 3) & GENMASK(3, 3))
#define ANA_CPU_FWD_CFG_SRC_COPY_ENA_M           GENMASK(3, 3)
#define ANA_CPU_FWD_CFG_SRC_COPY_ENA_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define ANA_CPU_FWD_CFG_ALLBRIDGE_DROP_ENA(x)    (((x) << 2) & GENMASK(2, 2))
#define ANA_CPU_FWD_CFG_ALLBRIDGE_DROP_ENA_M     GENMASK(2, 2)
#define ANA_CPU_FWD_CFG_ALLBRIDGE_DROP_ENA_X(x)  (((x) & GENMASK(2, 2)) >> 2)

#define ANA_CPU_FWD_CFG_ALLBRIDGE_REDIR_ENA(x)   (((x) << 1) & GENMASK(1, 1))
#define ANA_CPU_FWD_CFG_ALLBRIDGE_REDIR_ENA_M    GENMASK(1, 1)
#define ANA_CPU_FWD_CFG_ALLBRIDGE_REDIR_ENA_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define ANA_CPU_FWD_CFG_OAM_ENA(x)               ((x) & GENMASK(0, 0))
#define ANA_CPU_FWD_CFG_OAM_ENA_M                GENMASK(0, 0)
#define ANA_CPU_FWD_CFG_OAM_ENA_X(x)             ((x) & GENMASK(0, 0))

/*      ANA:PORT:CPU_FWD_BPDU_CFG */
#define ANA_CPU_FWD_BPDU_CFG(g)   __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 100, 0, 1, 4)

#define ANA_CPU_FWD_BPDU_CFG_BPDU_DROP_ENA(x)    (((x) << 16) & GENMASK(31, 16))
#define ANA_CPU_FWD_BPDU_CFG_BPDU_DROP_ENA_M     GENMASK(31, 16)
#define ANA_CPU_FWD_BPDU_CFG_BPDU_DROP_ENA_X(x)  (((x) & GENMASK(31, 16)) >> 16)

#define ANA_CPU_FWD_BPDU_CFG_BPDU_REDIR_ENA(x)   ((x) & GENMASK(15, 0))
#define ANA_CPU_FWD_BPDU_CFG_BPDU_REDIR_ENA_M    GENMASK(15, 0)
#define ANA_CPU_FWD_BPDU_CFG_BPDU_REDIR_ENA_X(x) ((x) & GENMASK(15, 0))

/*      ANA:PORT:PORT_CFG */
#define ANA_PORT_CFG(g)           __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 112, 0, 1, 4)

#define ANA_PORT_CFG_SRC_MIRROR_ENA(x)           (((x) << 13) & GENMASK(13, 13))
#define ANA_PORT_CFG_SRC_MIRROR_ENA_M            GENMASK(13, 13)
#define ANA_PORT_CFG_SRC_MIRROR_ENA_X(x)         (((x) & GENMASK(13, 13)) >> 13)

#define ANA_PORT_CFG_LIMIT_DROP(x)               (((x) << 12) & GENMASK(12, 12))
#define ANA_PORT_CFG_LIMIT_DROP_M                GENMASK(12, 12)
#define ANA_PORT_CFG_LIMIT_DROP_X(x)             (((x) & GENMASK(12, 12)) >> 12)

#define ANA_PORT_CFG_LIMIT_CPU(x)                (((x) << 11) & GENMASK(11, 11))
#define ANA_PORT_CFG_LIMIT_CPU_M                 GENMASK(11, 11)
#define ANA_PORT_CFG_LIMIT_CPU_X(x)              (((x) & GENMASK(11, 11)) >> 11)

#define ANA_PORT_CFG_LOCKED_PORTMOVE_DROP(x)     (((x) << 10) & GENMASK(10, 10))
#define ANA_PORT_CFG_LOCKED_PORTMOVE_DROP_M      GENMASK(10, 10)
#define ANA_PORT_CFG_LOCKED_PORTMOVE_DROP_X(x)   (((x) & GENMASK(10, 10)) >> 10)

#define ANA_PORT_CFG_LOCKED_PORTMOVE_CPU(x)      (((x) << 9) & GENMASK(9, 9))
#define ANA_PORT_CFG_LOCKED_PORTMOVE_CPU_M       GENMASK(9, 9)
#define ANA_PORT_CFG_LOCKED_PORTMOVE_CPU_X(x)    (((x) & GENMASK(9, 9)) >> 9)

#define ANA_PORT_CFG_LEARNDROP(x)                (((x) << 8) & GENMASK(8, 8))
#define ANA_PORT_CFG_LEARNDROP_M                 GENMASK(8, 8)
#define ANA_PORT_CFG_LEARNDROP_X(x)              (((x) & GENMASK(8, 8)) >> 8)

#define ANA_PORT_CFG_LEARNCPU(x)                 (((x) << 7) & GENMASK(7, 7))
#define ANA_PORT_CFG_LEARNCPU_M                  GENMASK(7, 7)
#define ANA_PORT_CFG_LEARNCPU_X(x)               (((x) & GENMASK(7, 7)) >> 7)

#define ANA_PORT_CFG_LEARNAUTO(x)                (((x) << 6) & GENMASK(6, 6))
#define ANA_PORT_CFG_LEARNAUTO_M                 GENMASK(6, 6)
#define ANA_PORT_CFG_LEARNAUTO_X(x)              (((x) & GENMASK(6, 6)) >> 6)

#define ANA_PORT_CFG_LEARN_ENA(x)                (((x) << 5) & GENMASK(5, 5))
#define ANA_PORT_CFG_LEARN_ENA_M                 GENMASK(5, 5)
#define ANA_PORT_CFG_LEARN_ENA_X(x)              (((x) & GENMASK(5, 5)) >> 5)

#define ANA_PORT_CFG_RECV_ENA(x)                 (((x) << 4) & GENMASK(4, 4))
#define ANA_PORT_CFG_RECV_ENA_M                  GENMASK(4, 4)
#define ANA_PORT_CFG_RECV_ENA_X(x)               (((x) & GENMASK(4, 4)) >> 4)

#define ANA_PORT_CFG_PORTID_VAL(x)               ((x) & GENMASK(3, 0))
#define ANA_PORT_CFG_PORTID_VAL_M                GENMASK(3, 0)
#define ANA_PORT_CFG_PORTID_VAL_X(x)             ((x) & GENMASK(3, 0))

/*      ANA:PORT:POL_CFG */
#define ANA_POL_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 116, 0, 1, 4)

#define ANA_POL_CFG_POL_CPU_REDIR_8021(x)        (((x) << 19) & GENMASK(19, 19))
#define ANA_POL_CFG_POL_CPU_REDIR_8021_M         GENMASK(19, 19)
#define ANA_POL_CFG_POL_CPU_REDIR_8021_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define ANA_POL_CFG_POL_CPU_REDIR_IP(x)          (((x) << 18) & GENMASK(18, 18))
#define ANA_POL_CFG_POL_CPU_REDIR_IP_M           GENMASK(18, 18)
#define ANA_POL_CFG_POL_CPU_REDIR_IP_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define ANA_POL_CFG_PORT_POL_ENA(x)              (((x) << 17) & GENMASK(17, 17))
#define ANA_POL_CFG_PORT_POL_ENA_M               GENMASK(17, 17)
#define ANA_POL_CFG_PORT_POL_ENA_X(x)            (((x) & GENMASK(17, 17)) >> 17)

#define ANA_POL_CFG_QUEUE_POL_ENA(x)             (((x) << 9) & GENMASK(16, 9))
#define ANA_POL_CFG_QUEUE_POL_ENA_M              GENMASK(16, 9)
#define ANA_POL_CFG_QUEUE_POL_ENA_X(x)           (((x) & GENMASK(16, 9)) >> 9)

#define ANA_POL_CFG_POL_ORDER(x)                 ((x) & GENMASK(8, 0))
#define ANA_POL_CFG_POL_ORDER_M                  GENMASK(8, 0)
#define ANA_POL_CFG_POL_ORDER_X(x)               ((x) & GENMASK(8, 0))

/*      ANA:PORT:OAM_CFG */
#define ANA_OAM_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 28672, g, 9, 128, 124, 0, 1, 4)

#define ANA_OAM_CFG_DLR_ENA(x)                   (((x) << 3) & GENMASK(3, 3))
#define ANA_OAM_CFG_DLR_ENA_M                    GENMASK(3, 3)
#define ANA_OAM_CFG_DLR_ENA_X(x)                 (((x) & GENMASK(3, 3)) >> 3)

#define ANA_OAM_CFG_MRP_ENA(x)                   (((x) << 2) & GENMASK(2, 2))
#define ANA_OAM_CFG_MRP_ENA_M                    GENMASK(2, 2)
#define ANA_OAM_CFG_MRP_ENA_X(x)                 (((x) & GENMASK(2, 2)) >> 2)

#define ANA_OAM_CFG_OAM_CFG(x)                   ((x) & GENMASK(1, 0))
#define ANA_OAM_CFG_OAM_CFG_M                    GENMASK(1, 0)
#define ANA_OAM_CFG_OAM_CFG_X(x)                 ((x) & GENMASK(1, 0))

/*      ANA:PFC:PFC_CFG */
#define ANA_PFC_CFG(g)            __REG(TARGET_ANA,\
					0, 1, 30720, g, 8, 64, 0, 0, 1, 4)

#define ANA_PFC_CFG_RX_PFC_ENA(x)                (((x) << 2) & GENMASK(9, 2))
#define ANA_PFC_CFG_RX_PFC_ENA_M                 GENMASK(9, 2)
#define ANA_PFC_CFG_RX_PFC_ENA_X(x)              (((x) & GENMASK(9, 2)) >> 2)

#define ANA_PFC_CFG_FC_LINK_SPEED(x)             ((x) & GENMASK(1, 0))
#define ANA_PFC_CFG_FC_LINK_SPEED_M              GENMASK(1, 0)
#define ANA_PFC_CFG_FC_LINK_SPEED_X(x)           ((x) & GENMASK(1, 0))

/*      ANA:COMMON:AGGR_CFG */
#define ANA_AGGR_CFG              __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 0, 0, 1, 4)

#define ANA_AGGR_CFG_AC_RND_ENA(x)               (((x) << 6) & GENMASK(6, 6))
#define ANA_AGGR_CFG_AC_RND_ENA_M                GENMASK(6, 6)
#define ANA_AGGR_CFG_AC_RND_ENA_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define ANA_AGGR_CFG_AC_DMAC_ENA(x)              (((x) << 5) & GENMASK(5, 5))
#define ANA_AGGR_CFG_AC_DMAC_ENA_M               GENMASK(5, 5)
#define ANA_AGGR_CFG_AC_DMAC_ENA_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define ANA_AGGR_CFG_AC_SMAC_ENA(x)              (((x) << 4) & GENMASK(4, 4))
#define ANA_AGGR_CFG_AC_SMAC_ENA_M               GENMASK(4, 4)
#define ANA_AGGR_CFG_AC_SMAC_ENA_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define ANA_AGGR_CFG_AC_IP6_FLOW_LBL_ENA(x)      (((x) << 3) & GENMASK(3, 3))
#define ANA_AGGR_CFG_AC_IP6_FLOW_LBL_ENA_M       GENMASK(3, 3)
#define ANA_AGGR_CFG_AC_IP6_FLOW_LBL_ENA_X(x)    (((x) & GENMASK(3, 3)) >> 3)

#define ANA_AGGR_CFG_AC_IP6_TCPUDP_ENA(x)        (((x) << 2) & GENMASK(2, 2))
#define ANA_AGGR_CFG_AC_IP6_TCPUDP_ENA_M         GENMASK(2, 2)
#define ANA_AGGR_CFG_AC_IP6_TCPUDP_ENA_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define ANA_AGGR_CFG_AC_IP4_SIPDIP_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_AGGR_CFG_AC_IP4_SIPDIP_ENA_M         GENMASK(1, 1)
#define ANA_AGGR_CFG_AC_IP4_SIPDIP_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_AGGR_CFG_AC_IP4_TCPUDP_ENA(x)        ((x) & GENMASK(0, 0))
#define ANA_AGGR_CFG_AC_IP4_TCPUDP_ENA_M         GENMASK(0, 0)
#define ANA_AGGR_CFG_AC_IP4_TCPUDP_ENA_X(x)      ((x) & GENMASK(0, 0))

/*      ANA:COMMON:DSCP_CFG */
#define ANA_DSCP_CFG(r)           __REG(TARGET_ANA,\
					0, 1, 31232, 0, 1, 552, 76, r, 64, 4)

#define ANA_DSCP_CFG_DP_DSCP_VAL(x)              (((x) << 11) & GENMASK(11, 11))
#define ANA_DSCP_CFG_DP_DSCP_VAL_M               GENMASK(11, 11)
#define ANA_DSCP_CFG_DP_DSCP_VAL_X(x)            (((x) & GENMASK(11, 11)) >> 11)

#define ANA_DSCP_CFG_QOS_DSCP_VAL(x)             (((x) << 8) & GENMASK(10, 8))
#define ANA_DSCP_CFG_QOS_DSCP_VAL_M              GENMASK(10, 8)
#define ANA_DSCP_CFG_QOS_DSCP_VAL_X(x)           (((x) & GENMASK(10, 8)) >> 8)

#define ANA_DSCP_CFG_DSCP_TRANSLATE_VAL(x)       (((x) << 2) & GENMASK(7, 2))
#define ANA_DSCP_CFG_DSCP_TRANSLATE_VAL_M        GENMASK(7, 2)
#define ANA_DSCP_CFG_DSCP_TRANSLATE_VAL_X(x)     (((x) & GENMASK(7, 2)) >> 2)

#define ANA_DSCP_CFG_DSCP_TRUST_ENA(x)           (((x) << 1) & GENMASK(1, 1))
#define ANA_DSCP_CFG_DSCP_TRUST_ENA_M            GENMASK(1, 1)
#define ANA_DSCP_CFG_DSCP_TRUST_ENA_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define ANA_DSCP_CFG_DSCP_REWR_ENA(x)            ((x) & GENMASK(0, 0))
#define ANA_DSCP_CFG_DSCP_REWR_ENA_M             GENMASK(0, 0)
#define ANA_DSCP_CFG_DSCP_REWR_ENA_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:POL:POL_PIR_CFG */
#define ANA_POL_PIR_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 0, 0, 1, 4)

#define ANA_POL_PIR_CFG_PIR_RATE(x)              (((x) << 6) & GENMASK(20, 6))
#define ANA_POL_PIR_CFG_PIR_RATE_M               GENMASK(20, 6)
#define ANA_POL_PIR_CFG_PIR_RATE_X(x)            (((x) & GENMASK(20, 6)) >> 6)

#define ANA_POL_PIR_CFG_PIR_BURST(x)             ((x) & GENMASK(5, 0))
#define ANA_POL_PIR_CFG_PIR_BURST_M              GENMASK(5, 0)
#define ANA_POL_PIR_CFG_PIR_BURST_X(x)           ((x) & GENMASK(5, 0))

/*      ANA:POL:POL_CIR_CFG */
#define ANA_POL_CIR_CFG(g)        __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 4, 0, 1, 4)

#define ANA_POL_CIR_CFG_CIR_RATE(x)              (((x) << 6) & GENMASK(20, 6))
#define ANA_POL_CIR_CFG_CIR_RATE_M               GENMASK(20, 6)
#define ANA_POL_CIR_CFG_CIR_RATE_X(x)            (((x) & GENMASK(20, 6)) >> 6)

#define ANA_POL_CIR_CFG_CIR_BURST(x)             ((x) & GENMASK(5, 0))
#define ANA_POL_CIR_CFG_CIR_BURST_M              GENMASK(5, 0)
#define ANA_POL_CIR_CFG_CIR_BURST_X(x)           ((x) & GENMASK(5, 0))

/*      ANA:POL:POL_MODE */
#define ANA_POL_MODE(g)           __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 8, 0, 1, 4)

#define ANA_POL_MODE_DROP_ON_YELLOW_ENA(x)       (((x) << 11) & GENMASK(11, 11))
#define ANA_POL_MODE_DROP_ON_YELLOW_ENA_M        GENMASK(11, 11)
#define ANA_POL_MODE_DROP_ON_YELLOW_ENA_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define ANA_POL_MODE_MARK_ALL_FRMS_RED_ENA(x)    (((x) << 10) & GENMASK(10, 10))
#define ANA_POL_MODE_MARK_ALL_FRMS_RED_ENA_M     GENMASK(10, 10)
#define ANA_POL_MODE_MARK_ALL_FRMS_RED_ENA_X(x)  (((x) & GENMASK(10, 10)) >> 10)

#define ANA_POL_MODE_IPG_SIZE(x)                 (((x) << 5) & GENMASK(9, 5))
#define ANA_POL_MODE_IPG_SIZE_M                  GENMASK(9, 5)
#define ANA_POL_MODE_IPG_SIZE_X(x)               (((x) & GENMASK(9, 5)) >> 5)

#define ANA_POL_MODE_FRM_MODE(x)                 (((x) << 3) & GENMASK(4, 3))
#define ANA_POL_MODE_FRM_MODE_M                  GENMASK(4, 3)
#define ANA_POL_MODE_FRM_MODE_X(x)               (((x) & GENMASK(4, 3)) >> 3)

#define ANA_POL_MODE_DLB_COUPLED(x)              (((x) << 2) & GENMASK(2, 2))
#define ANA_POL_MODE_DLB_COUPLED_M               GENMASK(2, 2)
#define ANA_POL_MODE_DLB_COUPLED_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define ANA_POL_MODE_CIR_ENA(x)                  (((x) << 1) & GENMASK(1, 1))
#define ANA_POL_MODE_CIR_ENA_M                   GENMASK(1, 1)
#define ANA_POL_MODE_CIR_ENA_X(x)                (((x) & GENMASK(1, 1)) >> 1)

#define ANA_POL_MODE_OVERSHOOT_ENA(x)            ((x) & GENMASK(0, 0))
#define ANA_POL_MODE_OVERSHOOT_ENA_M             GENMASK(0, 0)
#define ANA_POL_MODE_OVERSHOOT_ENA_X(x)          ((x) & GENMASK(0, 0))

/*      ANA:POL:POL_PIR_STATE */
#define ANA_POL_PIR_STATE(g)      __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 12, 0, 1, 4)

#define ANA_POL_PIR_STATE_PIR_LVL(x)             ((x) & GENMASK(21, 0))
#define ANA_POL_PIR_STATE_PIR_LVL_M              GENMASK(21, 0)
#define ANA_POL_PIR_STATE_PIR_LVL_X(x)           ((x) & GENMASK(21, 0))

/*      ANA:POL:POL_CIR_STATE */
#define ANA_POL_CIR_STATE(g)      __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 16, 0, 1, 4)

#define ANA_POL_CIR_STATE_CIR_LVL(x)             ((x) & GENMASK(21, 0))
#define ANA_POL_CIR_STATE_CIR_LVL_M              GENMASK(21, 0)
#define ANA_POL_CIR_STATE_CIR_LVL_X(x)           ((x) & GENMASK(21, 0))

/*      ANA:POL:POL_STATE */
#define ANA_POL_STATE(g)          __REG(TARGET_ANA,\
					0, 1, 16384, g, 345, 32, 20, 0, 1, 4)

#define ANA_POL_STATE_MARK_ALL_FRMS_RED_SET(x)   (((x) << 4) & GENMASK(4, 4))
#define ANA_POL_STATE_MARK_ALL_FRMS_RED_SET_M    GENMASK(4, 4)
#define ANA_POL_STATE_MARK_ALL_FRMS_RED_SET_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define ANA_POL_STATE_LEAK_TIME(x)               ((x) & GENMASK(3, 0))
#define ANA_POL_STATE_LEAK_TIME_M                GENMASK(3, 0)
#define ANA_POL_STATE_LEAK_TIME_X(x)             ((x) & GENMASK(3, 0))

/*      ANA:POL_MISC:POL_FLOWC */
#define ANA_POL_FLOWC(r)          __REG(TARGET_ANA,\
					0, 1, 28544, 0, 1, 116, 0, r, 9, 4)

#define ANA_POL_FLOWC_POL_FLOWC(x)               ((x) & GENMASK(0, 0))
#define ANA_POL_FLOWC_POL_FLOWC_M                GENMASK(0, 0)
#define ANA_POL_FLOWC_POL_FLOWC_X(x)             ((x) & GENMASK(0, 0))

/*      ANA:POL_MISC:POL_HYST */
#define ANA_POL_HYST              __REG(TARGET_ANA,\
					0, 1, 28544, 0, 1, 116, 108, 0, 1, 4)

#define ANA_POL_HYST_POL_FC_HYST(x)              (((x) << 4) & GENMASK(9, 4))
#define ANA_POL_HYST_POL_FC_HYST_M               GENMASK(9, 4)
#define ANA_POL_HYST_POL_FC_HYST_X(x)            (((x) & GENMASK(9, 4)) >> 4)

#define ANA_POL_HYST_POL_STOP_HYST(x)            ((x) & GENMASK(3, 0))
#define ANA_POL_HYST_POL_STOP_HYST_M             GENMASK(3, 0)
#define ANA_POL_HYST_POL_STOP_HYST_X(x)          ((x) & GENMASK(3, 0))

/*      ANA:POL_MISC:POL_MISC_CFG */
#define ANA_POL_MISC_CFG          __REG(TARGET_ANA,\
					0, 1, 28544, 0, 1, 116, 112, 0, 1, 4)

#define ANA_POL_MISC_CFG_POL_CLOSE_ALL(x)        (((x) << 1) & GENMASK(1, 1))
#define ANA_POL_MISC_CFG_POL_CLOSE_ALL_M         GENMASK(1, 1)
#define ANA_POL_MISC_CFG_POL_CLOSE_ALL_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define ANA_POL_MISC_CFG_POL_LEAK_DIS(x)         ((x) & GENMASK(0, 0))
#define ANA_POL_MISC_CFG_POL_LEAK_DIS_M          GENMASK(0, 0)
#define ANA_POL_MISC_CFG_POL_LEAK_DIS_X(x)       ((x) & GENMASK(0, 0))

/*      CHIP_TOP:CUPHY_CFG:CUPHY_PORT_CFG */
#define CHIP_TOP_CUPHY_PORT_CFG(r) __REG(TARGET_CHIP_TOP,\
					0, 1, 16, 0, 1, 20, 8, r, 2, 4)

#define CHIP_TOP_CUPHY_PORT_CFG_AUTO_SQUELCH_ENA(x) (((x) << 7) & GENMASK(7, 7))
#define CHIP_TOP_CUPHY_PORT_CFG_AUTO_SQUELCH_ENA_M GENMASK(7, 7)
#define CHIP_TOP_CUPHY_PORT_CFG_AUTO_SQUELCH_ENA_X(x)\
	(((x) & GENMASK(7, 7)) >> 7)

#define CHIP_TOP_CUPHY_PORT_CFG_COMA_MODE(x)     (((x) << 6) & GENMASK(6, 6))
#define CHIP_TOP_CUPHY_PORT_CFG_COMA_MODE_M      GENMASK(6, 6)
#define CHIP_TOP_CUPHY_PORT_CFG_COMA_MODE_X(x)   (((x) & GENMASK(6, 6)) >> 6)

#define CHIP_TOP_CUPHY_PORT_CFG_MODE(x)          (((x) << 1) & GENMASK(5, 1))
#define CHIP_TOP_CUPHY_PORT_CFG_MODE_M           GENMASK(5, 1)
#define CHIP_TOP_CUPHY_PORT_CFG_MODE_X(x)        (((x) & GENMASK(5, 1)) >> 1)

#define CHIP_TOP_CUPHY_PORT_CFG_GTX_CLK_ENA(x)   ((x) & GENMASK(0, 0))
#define CHIP_TOP_CUPHY_PORT_CFG_GTX_CLK_ENA_M    GENMASK(0, 0)
#define CHIP_TOP_CUPHY_PORT_CFG_GTX_CLK_ENA_X(x) ((x) & GENMASK(0, 0))

/*      CHIP_TOP:CUPHY_CFG:CUPHY_COMMON_CFG */
#define CHIP_TOP_CUPHY_COMMON_CFG __REG(TARGET_CHIP_TOP,\
					0, 1, 16, 0, 1, 20, 16, 0, 1, 4)

#define CHIP_TOP_CUPHY_COMMON_CFG_DEBUG_BUS_ENA(x) (((x) << 3) & GENMASK(3, 3))
#define CHIP_TOP_CUPHY_COMMON_CFG_DEBUG_BUS_ENA_M GENMASK(3, 3)
#define CHIP_TOP_CUPHY_COMMON_CFG_DEBUG_BUS_ENA_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

#define CHIP_TOP_CUPHY_COMMON_CFG_XPHYAD0(x)     (((x) << 2) & GENMASK(2, 2))
#define CHIP_TOP_CUPHY_COMMON_CFG_XPHYAD0_M      GENMASK(2, 2)
#define CHIP_TOP_CUPHY_COMMON_CFG_XPHYAD0_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define CHIP_TOP_CUPHY_COMMON_CFG_MDC_SEL(x)     (((x) << 1) & GENMASK(1, 1))
#define CHIP_TOP_CUPHY_COMMON_CFG_MDC_SEL_M      GENMASK(1, 1)
#define CHIP_TOP_CUPHY_COMMON_CFG_MDC_SEL_X(x)   (((x) & GENMASK(1, 1)) >> 1)

#define CHIP_TOP_CUPHY_COMMON_CFG_RESET_N(x)     ((x) & GENMASK(0, 0))
#define CHIP_TOP_CUPHY_COMMON_CFG_RESET_N_M      GENMASK(0, 0)
#define CHIP_TOP_CUPHY_COMMON_CFG_RESET_N_X(x)   ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:BUILDID */
#define CPU_BUILDID               __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 128, 0, 1, 4)

/*      CPU:CPU_REGS:RESET_PROT_STAT */
#define CPU_RESET_PROT_STAT       __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 136, 0, 1, 4)

#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE(x) (((x) << 5) & GENMASK(5, 5))
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_M GENMASK(5, 5)
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA(x) (((x) << 4) & GENMASK(4, 4))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_M GENMASK(4, 4)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_X(x)\
	(((x) & GENMASK(4, 4)) >> 4)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT(x) (((x) << 3) & GENMASK(3, 3))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_M GENMASK(3, 3)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_M GENMASK(2, 2)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT(x) (((x) << 1) & GENMASK(1, 1))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_M GENMASK(1, 1)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE(x) ((x) & GENMASK(0, 0))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE_M GENMASK(0, 0)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE_X(x) ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:CLK_GATING */
#define CPU_CLK_GATING            __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 0, 0, 1, 4)

#define CPU_CLK_GATING_UHPHS_CLK_GATING(x)       (((x) << 11) & GENMASK(11, 11))
#define CPU_CLK_GATING_UHPHS_CLK_GATING_M        GENMASK(11, 11)
#define CPU_CLK_GATING_UHPHS_CLK_GATING_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define CPU_CLK_GATING_UDPHS_CLK_GATING(x)       (((x) << 10) & GENMASK(10, 10))
#define CPU_CLK_GATING_UDPHS_CLK_GATING_M        GENMASK(10, 10)
#define CPU_CLK_GATING_UDPHS_CLK_GATING_X(x)     (((x) & GENMASK(10, 10)) >> 10)

#define CPU_CLK_GATING_MCRAMC_CLK_GATING(x)      (((x) << 9) & GENMASK(9, 9))
#define CPU_CLK_GATING_MCRAMC_CLK_GATING_M       GENMASK(9, 9)
#define CPU_CLK_GATING_MCRAMC_CLK_GATING_X(x)    (((x) & GENMASK(9, 9)) >> 9)

#define CPU_CLK_GATING_HMATRIX_CLK_GATING(x)     (((x) << 8) & GENMASK(8, 8))
#define CPU_CLK_GATING_HMATRIX_CLK_GATING_M      GENMASK(8, 8)
#define CPU_CLK_GATING_HMATRIX_CLK_GATING_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define CPU_CLK_GATING_HBRIDGE_CLK_GATING(x)     ((x) & GENMASK(3, 0))
#define CPU_CLK_GATING_HBRIDGE_CLK_GATING_M      GENMASK(3, 0)
#define CPU_CLK_GATING_HBRIDGE_CLK_GATING_X(x)   ((x) & GENMASK(3, 0))

/*      CPU:ULPI_BRIDGE_REGS:ULPI_RST */
#define CPU_ULPI_RST              __REG(TARGET_CPU,\
					0, 1, 824, 0, 1, 4, 0, 0, 1, 4)

#define CPU_ULPI_RST_ULPI_RST(x)                 ((x) & GENMASK(0, 0))
#define CPU_ULPI_RST_ULPI_RST_M                  GENMASK(0, 0)
#define CPU_ULPI_RST_ULPI_RST_X(x)               ((x) & GENMASK(0, 0))

/*      DEV:PORT_MODE:CLOCK_CFG */
#define DEV_CLOCK_CFG(t)          __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 0, 0, 1, 4)

#define DEV_CLOCK_CFG_MAC_TX_RST(x)              (((x) << 7) & GENMASK(7, 7))
#define DEV_CLOCK_CFG_MAC_TX_RST_M               GENMASK(7, 7)
#define DEV_CLOCK_CFG_MAC_TX_RST_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define DEV_CLOCK_CFG_MAC_RX_RST(x)              (((x) << 6) & GENMASK(6, 6))
#define DEV_CLOCK_CFG_MAC_RX_RST_M               GENMASK(6, 6)
#define DEV_CLOCK_CFG_MAC_RX_RST_X(x)            (((x) & GENMASK(6, 6)) >> 6)

#define DEV_CLOCK_CFG_PCS_TX_RST(x)              (((x) << 5) & GENMASK(5, 5))
#define DEV_CLOCK_CFG_PCS_TX_RST_M               GENMASK(5, 5)
#define DEV_CLOCK_CFG_PCS_TX_RST_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define DEV_CLOCK_CFG_PCS_RX_RST(x)              (((x) << 4) & GENMASK(4, 4))
#define DEV_CLOCK_CFG_PCS_RX_RST_M               GENMASK(4, 4)
#define DEV_CLOCK_CFG_PCS_RX_RST_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define DEV_CLOCK_CFG_PORT_RST(x)                (((x) << 3) & GENMASK(3, 3))
#define DEV_CLOCK_CFG_PORT_RST_M                 GENMASK(3, 3)
#define DEV_CLOCK_CFG_PORT_RST_X(x)              (((x) & GENMASK(3, 3)) >> 3)

#define DEV_CLOCK_CFG_PHY_RST(x)                 (((x) << 2) & GENMASK(2, 2))
#define DEV_CLOCK_CFG_PHY_RST_M                  GENMASK(2, 2)
#define DEV_CLOCK_CFG_PHY_RST_X(x)               (((x) & GENMASK(2, 2)) >> 2)

#define DEV_CLOCK_CFG_LINK_SPEED(x)              ((x) & GENMASK(1, 0))
#define DEV_CLOCK_CFG_LINK_SPEED_M               GENMASK(1, 0)
#define DEV_CLOCK_CFG_LINK_SPEED_X(x)            ((x) & GENMASK(1, 0))

/*      DEV:PORT_MODE:PORT_MISC */
#define DEV_PORT_MISC(t)          __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 4, 0, 1, 4)

#define DEV_PORT_MISC_FWD_ERROR_ENA(x)           (((x) << 8) & GENMASK(8, 8))
#define DEV_PORT_MISC_FWD_ERROR_ENA_M            GENMASK(8, 8)
#define DEV_PORT_MISC_FWD_ERROR_ENA_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PORT_MISC_FWD_PAUSE_ENA(x)           (((x) << 7) & GENMASK(7, 7))
#define DEV_PORT_MISC_FWD_PAUSE_ENA_M            GENMASK(7, 7)
#define DEV_PORT_MISC_FWD_PAUSE_ENA_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define DEV_PORT_MISC_FWD_CTRL_ENA(x)            (((x) << 6) & GENMASK(6, 6))
#define DEV_PORT_MISC_FWD_CTRL_ENA_M             GENMASK(6, 6)
#define DEV_PORT_MISC_FWD_CTRL_ENA_X(x)          (((x) & GENMASK(6, 6)) >> 6)

#define DEV_PORT_MISC_DEV_LOOP_ENA(x)            (((x) << 3) & GENMASK(5, 3))
#define DEV_PORT_MISC_DEV_LOOP_ENA_M             GENMASK(5, 3)
#define DEV_PORT_MISC_DEV_LOOP_ENA_X(x)          (((x) & GENMASK(5, 3)) >> 3)

#define DEV_PORT_MISC_HDX_FAST_DIS(x)            (((x) << 2) & GENMASK(2, 2))
#define DEV_PORT_MISC_HDX_FAST_DIS_M             GENMASK(2, 2)
#define DEV_PORT_MISC_HDX_FAST_DIS_X(x)          (((x) & GENMASK(2, 2)) >> 2)

#define DEV_PORT_MISC_RTAG48_ENA(x)              (((x) << 1) & GENMASK(1, 1))
#define DEV_PORT_MISC_RTAG48_ENA_M               GENMASK(1, 1)
#define DEV_PORT_MISC_RTAG48_ENA_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PORT_MISC_RX_RAW_ENA(x)              ((x) & GENMASK(0, 0))
#define DEV_PORT_MISC_RX_RAW_ENA_M               GENMASK(0, 0)
#define DEV_PORT_MISC_RX_RAW_ENA_X(x)            ((x) & GENMASK(0, 0))

/*      DEV:PORT_MODE:EEE_CFG */
#define DEV_EEE_CFG(t)            __REG(TARGET_DEV,\
					t, 8, 0, 0, 1, 28, 12, 0, 1, 4)

#define DEV_EEE_CFG_EEE_ENA(x)                   (((x) << 22) & GENMASK(22, 22))
#define DEV_EEE_CFG_EEE_ENA_M                    GENMASK(22, 22)
#define DEV_EEE_CFG_EEE_ENA_X(x)                 (((x) & GENMASK(22, 22)) >> 22)

#define DEV_EEE_CFG_EEE_TIMER_AGE(x)             (((x) << 15) & GENMASK(21, 15))
#define DEV_EEE_CFG_EEE_TIMER_AGE_M              GENMASK(21, 15)
#define DEV_EEE_CFG_EEE_TIMER_AGE_X(x)           (((x) & GENMASK(21, 15)) >> 15)

#define DEV_EEE_CFG_EEE_TIMER_WAKEUP(x)          (((x) << 8) & GENMASK(14, 8))
#define DEV_EEE_CFG_EEE_TIMER_WAKEUP_M           GENMASK(14, 8)
#define DEV_EEE_CFG_EEE_TIMER_WAKEUP_X(x)        (((x) & GENMASK(14, 8)) >> 8)

#define DEV_EEE_CFG_EEE_TIMER_HOLDOFF(x)         (((x) << 1) & GENMASK(7, 1))
#define DEV_EEE_CFG_EEE_TIMER_HOLDOFF_M          GENMASK(7, 1)
#define DEV_EEE_CFG_EEE_TIMER_HOLDOFF_X(x)       (((x) & GENMASK(7, 1)) >> 1)

#define DEV_EEE_CFG_PORT_LPI(x)                  ((x) & GENMASK(0, 0))
#define DEV_EEE_CFG_PORT_LPI_M                   GENMASK(0, 0)
#define DEV_EEE_CFG_PORT_LPI_X(x)                ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:MAC_ENA_CFG */
#define DEV_MAC_ENA_CFG(t)        __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 0, 0, 1, 4)

#define DEV_MAC_ENA_CFG_RX_ENA(x)                (((x) << 4) & GENMASK(4, 4))
#define DEV_MAC_ENA_CFG_RX_ENA_M                 GENMASK(4, 4)
#define DEV_MAC_ENA_CFG_RX_ENA_X(x)              (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MAC_ENA_CFG_TX_ENA(x)                ((x) & GENMASK(0, 0))
#define DEV_MAC_ENA_CFG_TX_ENA_M                 GENMASK(0, 0)
#define DEV_MAC_ENA_CFG_TX_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:MAC_MODE_CFG */
#define DEV_MAC_MODE_CFG(t)       __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 4, 0, 1, 4)

#define DEV_MAC_MODE_CFG_FC_WORD_SYNC_ENA(x)     (((x) << 8) & GENMASK(8, 8))
#define DEV_MAC_MODE_CFG_FC_WORD_SYNC_ENA_M      GENMASK(8, 8)
#define DEV_MAC_MODE_CFG_FC_WORD_SYNC_ENA_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define DEV_MAC_MODE_CFG_GIGA_MODE_ENA(x)        (((x) << 4) & GENMASK(4, 4))
#define DEV_MAC_MODE_CFG_GIGA_MODE_ENA_M         GENMASK(4, 4)
#define DEV_MAC_MODE_CFG_GIGA_MODE_ENA_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MAC_MODE_CFG_FDX_ENA(x)              ((x) & GENMASK(0, 0))
#define DEV_MAC_MODE_CFG_FDX_ENA_M               GENMASK(0, 0)
#define DEV_MAC_MODE_CFG_FDX_ENA_X(x)            ((x) & GENMASK(0, 0))

/*      DEV:MAC_CFG_STATUS:MAC_MAXLEN_CFG */
#define DEV_MAC_MAXLEN_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 8, 0, 1, 4)

#define DEV_MAC_MAXLEN_CFG_MAX_LEN(x)            ((x) & GENMASK(15, 0))
#define DEV_MAC_MAXLEN_CFG_MAX_LEN_M             GENMASK(15, 0)
#define DEV_MAC_MAXLEN_CFG_MAX_LEN_X(x)          ((x) & GENMASK(15, 0))

/*      DEV:MAC_CFG_STATUS:MAC_IFG_CFG */
#define DEV_MAC_IFG_CFG(t)        __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 20, 0, 1, 4)

#define DEV_MAC_IFG_CFG_OLD_IPG_CHECK(x)         (((x) << 17) & GENMASK(17, 17))
#define DEV_MAC_IFG_CFG_OLD_IPG_CHECK_M          GENMASK(17, 17)
#define DEV_MAC_IFG_CFG_OLD_IPG_CHECK_X(x)       (((x) & GENMASK(17, 17)) >> 17)

#define DEV_MAC_IFG_CFG_REDUCED_TX_IFG(x)        (((x) << 16) & GENMASK(16, 16))
#define DEV_MAC_IFG_CFG_REDUCED_TX_IFG_M         GENMASK(16, 16)
#define DEV_MAC_IFG_CFG_REDUCED_TX_IFG_X(x)      (((x) & GENMASK(16, 16)) >> 16)

#define DEV_MAC_IFG_CFG_TX_IFG(x)                (((x) << 8) & GENMASK(12, 8))
#define DEV_MAC_IFG_CFG_TX_IFG_M                 GENMASK(12, 8)
#define DEV_MAC_IFG_CFG_TX_IFG_X(x)              (((x) & GENMASK(12, 8)) >> 8)

#define DEV_MAC_IFG_CFG_RX_IFG2(x)               (((x) << 4) & GENMASK(7, 4))
#define DEV_MAC_IFG_CFG_RX_IFG2_M                GENMASK(7, 4)
#define DEV_MAC_IFG_CFG_RX_IFG2_X(x)             (((x) & GENMASK(7, 4)) >> 4)

#define DEV_MAC_IFG_CFG_RX_IFG1(x)               ((x) & GENMASK(3, 0))
#define DEV_MAC_IFG_CFG_RX_IFG1_M                GENMASK(3, 0)
#define DEV_MAC_IFG_CFG_RX_IFG1_X(x)             ((x) & GENMASK(3, 0))

/*      DEV:MAC_CFG_STATUS:MAC_HDX_CFG */
#define DEV_MAC_HDX_CFG(t)        __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 24, 0, 1, 4)

#define DEV_MAC_HDX_CFG_BYPASS_COL_SYNC(x)       (((x) << 26) & GENMASK(26, 26))
#define DEV_MAC_HDX_CFG_BYPASS_COL_SYNC_M        GENMASK(26, 26)
#define DEV_MAC_HDX_CFG_BYPASS_COL_SYNC_X(x)     (((x) & GENMASK(26, 26)) >> 26)

#define DEV_MAC_HDX_CFG_OB_ENA(x)                (((x) << 25) & GENMASK(25, 25))
#define DEV_MAC_HDX_CFG_OB_ENA_M                 GENMASK(25, 25)
#define DEV_MAC_HDX_CFG_OB_ENA_X(x)              (((x) & GENMASK(25, 25)) >> 25)

#define DEV_MAC_HDX_CFG_WEXC_DIS(x)              (((x) << 24) & GENMASK(24, 24))
#define DEV_MAC_HDX_CFG_WEXC_DIS_M               GENMASK(24, 24)
#define DEV_MAC_HDX_CFG_WEXC_DIS_X(x)            (((x) & GENMASK(24, 24)) >> 24)

#define DEV_MAC_HDX_CFG_SEED(x)                  (((x) << 16) & GENMASK(23, 16))
#define DEV_MAC_HDX_CFG_SEED_M                   GENMASK(23, 16)
#define DEV_MAC_HDX_CFG_SEED_X(x)                (((x) & GENMASK(23, 16)) >> 16)

#define DEV_MAC_HDX_CFG_SEED_LOAD(x)             (((x) << 12) & GENMASK(12, 12))
#define DEV_MAC_HDX_CFG_SEED_LOAD_M              GENMASK(12, 12)
#define DEV_MAC_HDX_CFG_SEED_LOAD_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define DEV_MAC_HDX_CFG_RETRY_EXC_COL_ENA(x)     (((x) << 8) & GENMASK(8, 8))
#define DEV_MAC_HDX_CFG_RETRY_EXC_COL_ENA_M      GENMASK(8, 8)
#define DEV_MAC_HDX_CFG_RETRY_EXC_COL_ENA_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define DEV_MAC_HDX_CFG_LATE_COL_POS(x)          ((x) & GENMASK(6, 0))
#define DEV_MAC_HDX_CFG_LATE_COL_POS_M           GENMASK(6, 0)
#define DEV_MAC_HDX_CFG_LATE_COL_POS_X(x)        ((x) & GENMASK(6, 0))

/*      DEV:MAC_CFG_STATUS:FC_MAC_LOW_CFG */
#define DEV_FC_MAC_LOW_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 32, 0, 1, 4)

#define DEV_FC_MAC_LOW_CFG_MAC_LOW(x)            ((x) & GENMASK(23, 0))
#define DEV_FC_MAC_LOW_CFG_MAC_LOW_M             GENMASK(23, 0)
#define DEV_FC_MAC_LOW_CFG_MAC_LOW_X(x)          ((x) & GENMASK(23, 0))

/*      DEV:MAC_CFG_STATUS:FC_MAC_HIGH_CFG */
#define DEV_FC_MAC_HIGH_CFG(t)    __REG(TARGET_DEV,\
					t, 8, 28, 0, 1, 44, 36, 0, 1, 4)

#define DEV_FC_MAC_HIGH_CFG_MAC_HIGH(x)          ((x) & GENMASK(23, 0))
#define DEV_FC_MAC_HIGH_CFG_MAC_HIGH_M           GENMASK(23, 0)
#define DEV_FC_MAC_HIGH_CFG_MAC_HIGH_X(x)        ((x) & GENMASK(23, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_CFG */
#define DEV_PCS1G_CFG(t)          __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 0, 0, 1, 4)

#define DEV_PCS1G_CFG_LINK_STATUS_TYPE(x)        (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_CFG_LINK_STATUS_TYPE_M         GENMASK(4, 4)
#define DEV_PCS1G_CFG_LINK_STATUS_TYPE_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_CFG_AN_LINK_CTRL_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define DEV_PCS1G_CFG_AN_LINK_CTRL_ENA_M         GENMASK(1, 1)
#define DEV_PCS1G_CFG_AN_LINK_CTRL_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PCS1G_CFG_PCS_ENA(x)                 ((x) & GENMASK(0, 0))
#define DEV_PCS1G_CFG_PCS_ENA_M                  GENMASK(0, 0)
#define DEV_PCS1G_CFG_PCS_ENA_X(x)               ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_SD_CFG */
#define DEV_PCS1G_SD_CFG(t)       __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 8, 0, 1, 4)

#define DEV_PCS1G_SD_CFG_SD_SEL(x)               (((x) << 8) & GENMASK(8, 8))
#define DEV_PCS1G_SD_CFG_SD_SEL_M                GENMASK(8, 8)
#define DEV_PCS1G_SD_CFG_SD_SEL_X(x)             (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PCS1G_SD_CFG_SD_POL(x)               (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_SD_CFG_SD_POL_M                GENMASK(4, 4)
#define DEV_PCS1G_SD_CFG_SD_POL_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_SD_CFG_SD_ENA(x)               ((x) & GENMASK(0, 0))
#define DEV_PCS1G_SD_CFG_SD_ENA_M                GENMASK(0, 0)
#define DEV_PCS1G_SD_CFG_SD_ENA_X(x)             ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_ANEG_CFG */
#define DEV_PCS1G_ANEG_CFG(t)     __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 12, 0, 1, 4)

#define DEV_PCS1G_ANEG_CFG_ADV_ABILITY(x)        (((x) << 16) & GENMASK(31, 16))
#define DEV_PCS1G_ANEG_CFG_ADV_ABILITY_M         GENMASK(31, 16)
#define DEV_PCS1G_ANEG_CFG_ADV_ABILITY_X(x)      (((x) & GENMASK(31, 16)) >> 16)

#define DEV_PCS1G_ANEG_CFG_SW_RESOLVE_ENA(x)     (((x) << 8) & GENMASK(8, 8))
#define DEV_PCS1G_ANEG_CFG_SW_RESOLVE_ENA_M      GENMASK(8, 8)
#define DEV_PCS1G_ANEG_CFG_SW_RESOLVE_ENA_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PCS1G_ANEG_CFG_RESTART_ONE_SHOT(x)   (((x) << 1) & GENMASK(1, 1))
#define DEV_PCS1G_ANEG_CFG_RESTART_ONE_SHOT_M    GENMASK(1, 1)
#define DEV_PCS1G_ANEG_CFG_RESTART_ONE_SHOT_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define DEV_PCS1G_ANEG_CFG_ENA(x)                ((x) & GENMASK(0, 0))
#define DEV_PCS1G_ANEG_CFG_ENA_M                 GENMASK(0, 0)
#define DEV_PCS1G_ANEG_CFG_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      DEV:PCS1G_CFG_STATUS:PCS1G_LINK_STATUS */
#define DEV_PCS1G_LINK_STATUS(t)  __REG(TARGET_DEV,\
					t, 8, 72, 0, 1, 68, 40, 0, 1, 4)

#define DEV_PCS1G_LINK_STATUS_DELAY_VAR(x)       (((x) << 12) & GENMASK(15, 12))
#define DEV_PCS1G_LINK_STATUS_DELAY_VAR_M        GENMASK(15, 12)
#define DEV_PCS1G_LINK_STATUS_DELAY_VAR_X(x)     (((x) & GENMASK(15, 12)) >> 12)

#define DEV_PCS1G_LINK_STATUS_SIGNAL_DETECT(x)   (((x) << 8) & GENMASK(8, 8))
#define DEV_PCS1G_LINK_STATUS_SIGNAL_DETECT_M    GENMASK(8, 8)
#define DEV_PCS1G_LINK_STATUS_SIGNAL_DETECT_X(x) (((x) & GENMASK(8, 8)) >> 8)

#define DEV_PCS1G_LINK_STATUS_LINK_STATUS(x)     (((x) << 4) & GENMASK(4, 4))
#define DEV_PCS1G_LINK_STATUS_LINK_STATUS_M      GENMASK(4, 4)
#define DEV_PCS1G_LINK_STATUS_LINK_STATUS_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define DEV_PCS1G_LINK_STATUS_SYNC_STATUS(x)     ((x) & GENMASK(0, 0))
#define DEV_PCS1G_LINK_STATUS_SYNC_STATUS_M      GENMASK(0, 0)
#define DEV_PCS1G_LINK_STATUS_SYNC_STATUS_X(x)   ((x) & GENMASK(0, 0))

/*      DEV:MM_CONFIG:ENABLE_CONFIG */
#define DEV_ENABLE_CONFIG(t)      __REG(TARGET_DEV,\
					t, 8, 156, 0, 1, 8, 0, 0, 1, 4)

#define DEV_ENABLE_CONFIG_KEEP_S_AFTER_D(x)      (((x) << 8) & GENMASK(8, 8))
#define DEV_ENABLE_CONFIG_KEEP_S_AFTER_D_M       GENMASK(8, 8)
#define DEV_ENABLE_CONFIG_KEEP_S_AFTER_D_X(x)    (((x) & GENMASK(8, 8)) >> 8)

#define DEV_ENABLE_CONFIG_MM_TX_ENA(x)           (((x) << 4) & GENMASK(4, 4))
#define DEV_ENABLE_CONFIG_MM_TX_ENA_M            GENMASK(4, 4)
#define DEV_ENABLE_CONFIG_MM_TX_ENA_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define DEV_ENABLE_CONFIG_MM_RX_ENA(x)           ((x) & GENMASK(0, 0))
#define DEV_ENABLE_CONFIG_MM_RX_ENA_M            GENMASK(0, 0)
#define DEV_ENABLE_CONFIG_MM_RX_ENA_X(x)         ((x) & GENMASK(0, 0))

/*      DEV:MM_CONFIG:VERIF_CONFIG */
#define DEV_VERIF_CONFIG(t)       __REG(TARGET_DEV,\
					t, 8, 156, 0, 1, 8, 4, 0, 1, 4)

#define DEV_VERIF_CONFIG_VERIF_TIMER_UNITS(x)    (((x) << 12) & GENMASK(13, 12))
#define DEV_VERIF_CONFIG_VERIF_TIMER_UNITS_M     GENMASK(13, 12)
#define DEV_VERIF_CONFIG_VERIF_TIMER_UNITS_X(x)  (((x) & GENMASK(13, 12)) >> 12)

#define DEV_VERIF_CONFIG_PRM_VERIFY_TIME(x)      (((x) << 4) & GENMASK(11, 4))
#define DEV_VERIF_CONFIG_PRM_VERIFY_TIME_M       GENMASK(11, 4)
#define DEV_VERIF_CONFIG_PRM_VERIFY_TIME_X(x)    (((x) & GENMASK(11, 4)) >> 4)

#define DEV_VERIF_CONFIG_PRM_VERIFY_DIS(x)       ((x) & GENMASK(0, 0))
#define DEV_VERIF_CONFIG_PRM_VERIFY_DIS_M        GENMASK(0, 0)
#define DEV_VERIF_CONFIG_PRM_VERIFY_DIS_X(x)     ((x) & GENMASK(0, 0))

/*      DEV:MM_STATISTICS:MM_STATUS */
#define DEV_MM_STATUS(t)          __REG(TARGET_DEV,\
					t, 8, 164, 0, 1, 4, 0, 0, 1, 4)

#define DEV_MM_STATUS_MM_TX_PRMPT_STATUS(x)      (((x) << 28) & GENMASK(28, 28))
#define DEV_MM_STATUS_MM_TX_PRMPT_STATUS_M       GENMASK(28, 28)
#define DEV_MM_STATUS_MM_TX_PRMPT_STATUS_X(x)    (((x) & GENMASK(28, 28)) >> 28)

#define DEV_MM_STATUS_MM_TX_FRAME_STATUS(x)      (((x) << 24) & GENMASK(24, 24))
#define DEV_MM_STATUS_MM_TX_FRAME_STATUS_M       GENMASK(24, 24)
#define DEV_MM_STATUS_MM_TX_FRAME_STATUS_X(x)    (((x) & GENMASK(24, 24)) >> 24)

#define DEV_MM_STATUS_MM_RX_FRAME_STATUS(x)      (((x) << 20) & GENMASK(20, 20))
#define DEV_MM_STATUS_MM_RX_FRAME_STATUS_M       GENMASK(20, 20)
#define DEV_MM_STATUS_MM_RX_FRAME_STATUS_X(x)    (((x) & GENMASK(20, 20)) >> 20)

#define DEV_MM_STATUS_UNEXP_TX_PFRM_STICKY(x)    (((x) << 16) & GENMASK(16, 16))
#define DEV_MM_STATUS_UNEXP_TX_PFRM_STICKY_M     GENMASK(16, 16)
#define DEV_MM_STATUS_UNEXP_TX_PFRM_STICKY_X(x)  (((x) & GENMASK(16, 16)) >> 16)

#define DEV_MM_STATUS_UNEXP_RX_PFRM_STICKY(x)    (((x) << 12) & GENMASK(12, 12))
#define DEV_MM_STATUS_UNEXP_RX_PFRM_STICKY_M     GENMASK(12, 12)
#define DEV_MM_STATUS_UNEXP_RX_PFRM_STICKY_X(x)  (((x) & GENMASK(12, 12)) >> 12)

#define DEV_MM_STATUS_PRMPT_VERIFY_STATE(x)      (((x) << 8) & GENMASK(10, 8))
#define DEV_MM_STATUS_PRMPT_VERIFY_STATE_M       GENMASK(10, 8)
#define DEV_MM_STATUS_PRMPT_VERIFY_STATE_X(x)    (((x) & GENMASK(10, 8)) >> 8)

#define DEV_MM_STATUS_PRMPT_ACTIVE_STICKY(x)     (((x) << 4) & GENMASK(4, 4))
#define DEV_MM_STATUS_PRMPT_ACTIVE_STICKY_M      GENMASK(4, 4)
#define DEV_MM_STATUS_PRMPT_ACTIVE_STICKY_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define DEV_MM_STATUS_PRMPT_ACTIVE_STATUS(x)     ((x) & GENMASK(0, 0))
#define DEV_MM_STATUS_PRMPT_ACTIVE_STATUS_M      GENMASK(0, 0)
#define DEV_MM_STATUS_PRMPT_ACTIVE_STATUS_X(x)   ((x) & GENMASK(0, 0))

/*      DEV:PHASE_DETECTOR_CTRL:PHAD_CTRL */
#define DEV_PHAD_CTRL(t, g)       __REG(TARGET_DEV,\
					t, 8, 168, g, 2, 12, 0, 0, 1, 4)

#define DEV_PHAD_CTRL_PHAD_LOCK(x)               (((x) << 17) & GENMASK(17, 17))
#define DEV_PHAD_CTRL_PHAD_LOCK_M                GENMASK(17, 17)
#define DEV_PHAD_CTRL_PHAD_LOCK_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define DEV_PHAD_CTRL_DIV4_ACT(x)                (((x) << 16) & GENMASK(16, 16))
#define DEV_PHAD_CTRL_DIV4_ACT_M                 GENMASK(16, 16)
#define DEV_PHAD_CTRL_DIV4_ACT_X(x)              (((x) & GENMASK(16, 16)) >> 16)

#define DEV_PHAD_CTRL_PHAD_ENA(x)                (((x) << 15) & GENMASK(15, 15))
#define DEV_PHAD_CTRL_PHAD_ENA_M                 GENMASK(15, 15)
#define DEV_PHAD_CTRL_PHAD_ENA_X(x)              (((x) & GENMASK(15, 15)) >> 15)

#define DEV_PHAD_CTRL_PHAD_FAILED(x)             (((x) << 14) & GENMASK(14, 14))
#define DEV_PHAD_CTRL_PHAD_FAILED_M              GENMASK(14, 14)
#define DEV_PHAD_CTRL_PHAD_FAILED_X(x)           (((x) & GENMASK(14, 14)) >> 14)

#define DEV_PHAD_CTRL_PHAD_ADJ(x)                (((x) << 12) & GENMASK(13, 12))
#define DEV_PHAD_CTRL_PHAD_ADJ_M                 GENMASK(13, 12)
#define DEV_PHAD_CTRL_PHAD_ADJ_X(x)              (((x) & GENMASK(13, 12)) >> 12)

#define DEV_PHAD_CTRL_ERR_MAX_ENA(x)             (((x) << 11) & GENMASK(11, 11))
#define DEV_PHAD_CTRL_ERR_MAX_ENA_M              GENMASK(11, 11)
#define DEV_PHAD_CTRL_ERR_MAX_ENA_X(x)           (((x) & GENMASK(11, 11)) >> 11)

#define DEV_PHAD_CTRL_LOCK_ACC(x)                (((x) << 8) & GENMASK(10, 8))
#define DEV_PHAD_CTRL_LOCK_ACC_M                 GENMASK(10, 8)
#define DEV_PHAD_CTRL_LOCK_ACC_X(x)              (((x) & GENMASK(10, 8)) >> 8)

#define DEV_PHAD_CTRL_REALIGN_OFS(x)             (((x) << 5) & GENMASK(7, 5))
#define DEV_PHAD_CTRL_REALIGN_OFS_M              GENMASK(7, 5)
#define DEV_PHAD_CTRL_REALIGN_OFS_X(x)           (((x) & GENMASK(7, 5)) >> 5)

#define DEV_PHAD_CTRL_TWEAKS(x)                  (((x) << 2) & GENMASK(4, 2))
#define DEV_PHAD_CTRL_TWEAKS_M                   GENMASK(4, 2)
#define DEV_PHAD_CTRL_TWEAKS_X(x)                (((x) & GENMASK(4, 2)) >> 2)

#define DEV_PHAD_CTRL_DIV_CFG(x)                 ((x) & GENMASK(1, 0))
#define DEV_PHAD_CTRL_DIV_CFG_M                  GENMASK(1, 0)
#define DEV_PHAD_CTRL_DIV_CFG_X(x)               ((x) & GENMASK(1, 0))

/*      FDMA:FDMA:CH_ACTIVATE */
#define FDMA_CH_ACTIVATE          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 0, 0, 1, 4)

#define FDMA_CH_ACTIVATE_CH_ACTIVATE(x)          ((x) & GENMASK(7, 0))
#define FDMA_CH_ACTIVATE_CH_ACTIVATE_M           GENMASK(7, 0)
#define FDMA_CH_ACTIVATE_CH_ACTIVATE_X(x)        ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_RELOAD */
#define FDMA_CH_RELOAD            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 4, 0, 1, 4)

#define FDMA_CH_RELOAD_CH_RELOAD(x)              ((x) & GENMASK(7, 0))
#define FDMA_CH_RELOAD_CH_RELOAD_M               GENMASK(7, 0)
#define FDMA_CH_RELOAD_CH_RELOAD_X(x)            ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_DISABLE */
#define FDMA_CH_DISABLE           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 8, 0, 1, 4)

#define FDMA_CH_DISABLE_CH_DISABLE(x)            ((x) & GENMASK(7, 0))
#define FDMA_CH_DISABLE_CH_DISABLE_M             GENMASK(7, 0)
#define FDMA_CH_DISABLE_CH_DISABLE_X(x)          ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_FORCEDIS */
#define FDMA_CH_FORCEDIS          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 12, 0, 1, 4)

#define FDMA_CH_FORCEDIS_CH_FORCEDIS(x)          ((x) & GENMASK(7, 0))
#define FDMA_CH_FORCEDIS_CH_FORCEDIS_M           GENMASK(7, 0)
#define FDMA_CH_FORCEDIS_CH_FORCEDIS_X(x)        ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_DB_DISCARD */
#define FDMA_CH_DB_DISCARD        __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 16, 0, 1, 4)

#define FDMA_CH_DB_DISCARD_DB_DISCARD(x)         ((x) & GENMASK(7, 0))
#define FDMA_CH_DB_DISCARD_DB_DISCARD_M          GENMASK(7, 0)
#define FDMA_CH_DB_DISCARD_DB_DISCARD_X(x)       ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_CNT */
#define FDMA_CH_CNT(r)            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 20, r, 8, 4)

#define FDMA_CH_CNT_CH_CNT_FRM(x)                (((x) << 16) & GENMASK(31, 16))
#define FDMA_CH_CNT_CH_CNT_FRM_M                 GENMASK(31, 16)
#define FDMA_CH_CNT_CH_CNT_FRM_X(x)              (((x) & GENMASK(31, 16)) >> 16)

#define FDMA_CH_CNT_CH_CNT_DB_INTR(x)            (((x) << 8) & GENMASK(15, 8))
#define FDMA_CH_CNT_CH_CNT_DB_INTR_M             GENMASK(15, 8)
#define FDMA_CH_CNT_CH_CNT_DB_INTR_X(x)          (((x) & GENMASK(15, 8)) >> 8)

#define FDMA_CH_CNT_CH_CNT_DCB(x)                ((x) & GENMASK(7, 0))
#define FDMA_CH_CNT_CH_CNT_DCB_M                 GENMASK(7, 0)
#define FDMA_CH_CNT_CH_CNT_DCB_X(x)              ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:DCB_LLP */
#define FDMA_DCB_LLP(r)           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 52, r, 8, 4)

/*      FDMA:FDMA:DCB_LLP1 */
#define FDMA_DCB_LLP1(r)          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 84, r, 8, 4)

/*      FDMA:FDMA:DCB_LLP_PREV */
#define FDMA_DCB_LLP_PREV(r)      __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 116, r, 8, 4)

/*      FDMA:FDMA:DCB_LLP_PREV1 */
#define FDMA_DCB_LLP_PREV1(r)     __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 148, r, 8, 4)

/*      FDMA:FDMA:CH_ACTIVE */
#define FDMA_CH_ACTIVE            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 180, 0, 1, 4)

#define FDMA_CH_ACTIVE_CH_ACTIVE(x)              ((x) & GENMASK(7, 0))
#define FDMA_CH_ACTIVE_CH_ACTIVE_M               GENMASK(7, 0)
#define FDMA_CH_ACTIVE_CH_ACTIVE_X(x)            ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_PENDING */
#define FDMA_CH_PENDING           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 184, 0, 1, 4)

#define FDMA_CH_PENDING_CH_PENDING(x)            ((x) & GENMASK(7, 0))
#define FDMA_CH_PENDING_CH_PENDING_M             GENMASK(7, 0)
#define FDMA_CH_PENDING_CH_PENDING_X(x)          ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_IDLE */
#define FDMA_CH_IDLE              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 188, 0, 1, 4)

#define FDMA_CH_IDLE_CH_IDLE(x)                  ((x) & GENMASK(7, 0))
#define FDMA_CH_IDLE_CH_IDLE_M                   GENMASK(7, 0)
#define FDMA_CH_IDLE_CH_IDLE_X(x)                ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_STATUS */
#define FDMA_CH_STATUS(r)         __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 192, r, 8, 4)

#define FDMA_CH_STATUS_CH_FILL_LVL(x)            (((x) << 2) & GENMASK(5, 2))
#define FDMA_CH_STATUS_CH_FILL_LVL_M             GENMASK(5, 2)
#define FDMA_CH_STATUS_CH_FILL_LVL_X(x)          (((x) & GENMASK(5, 2)) >> 2)

#define FDMA_CH_STATUS_CH_ERR_DCB_WRD128_IDX(x)  ((x) & GENMASK(1, 0))
#define FDMA_CH_STATUS_CH_ERR_DCB_WRD128_IDX_M   GENMASK(1, 0)
#define FDMA_CH_STATUS_CH_ERR_DCB_WRD128_IDX_X(x) ((x) & GENMASK(1, 0))

/*      FDMA:FDMA:CH_CFG */
#define FDMA_CH_CFG(r)            __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 224, r, 8, 4)

#define FDMA_CH_CFG_CH_XTR_STATUS_MODE(x)        (((x) << 5) & GENMASK(5, 5))
#define FDMA_CH_CFG_CH_XTR_STATUS_MODE_M         GENMASK(5, 5)
#define FDMA_CH_CFG_CH_XTR_STATUS_MODE_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define FDMA_CH_CFG_CH_INTR_DB_EOF_ONLY(x)       (((x) << 4) & GENMASK(4, 4))
#define FDMA_CH_CFG_CH_INTR_DB_EOF_ONLY_M        GENMASK(4, 4)
#define FDMA_CH_CFG_CH_INTR_DB_EOF_ONLY_X(x)     (((x) & GENMASK(4, 4)) >> 4)

#define FDMA_CH_CFG_CH_INJ_PORT(x)               (((x) << 3) & GENMASK(3, 3))
#define FDMA_CH_CFG_CH_INJ_PORT_M                GENMASK(3, 3)
#define FDMA_CH_CFG_CH_INJ_PORT_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define FDMA_CH_CFG_CH_DCB_DB_CNT(x)             (((x) << 1) & GENMASK(2, 1))
#define FDMA_CH_CFG_CH_DCB_DB_CNT_M              GENMASK(2, 1)
#define FDMA_CH_CFG_CH_DCB_DB_CNT_X(x)           (((x) & GENMASK(2, 1)) >> 1)

#define FDMA_CH_CFG_CH_MEM(x)                    ((x) & GENMASK(0, 0))
#define FDMA_CH_CFG_CH_MEM_M                     GENMASK(0, 0)
#define FDMA_CH_CFG_CH_MEM_X(x)                  ((x) & GENMASK(0, 0))

/*      FDMA:FDMA:CH_TRANSLATE */
#define FDMA_CH_TRANSLATE(r)      __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 256, r, 8, 4)

#define FDMA_CH_TRANSLATE_OFFSET(x)              ((x) & GENMASK(15, 0))
#define FDMA_CH_TRANSLATE_OFFSET_M               GENMASK(15, 0)
#define FDMA_CH_TRANSLATE_OFFSET_X(x)            ((x) & GENMASK(15, 0))

/*      FDMA:FDMA:CH_INJ_TOKEN_CNT */
#define FDMA_CH_INJ_TOKEN_CNT(r)  __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 288, r, 6, 4)

#define FDMA_CH_INJ_TOKEN_CNT_CH_INJ_TOKEN_CNT(x) ((x) & GENMASK(7, 0))
#define FDMA_CH_INJ_TOKEN_CNT_CH_INJ_TOKEN_CNT_M GENMASK(7, 0)
#define FDMA_CH_INJ_TOKEN_CNT_CH_INJ_TOKEN_CNT_X(x) ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:CH_INJ_TOKEN_TICK_RLD */
#define FDMA_CH_INJ_TOKEN_TICK_RLD(r) __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 312, r, 6, 4)

/*      FDMA:FDMA:CH_INJ_TOKEN_TICK_CNT */
#define FDMA_CH_INJ_TOKEN_TICK_CNT(r) __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 336, r, 6, 4)

/*      FDMA:FDMA:INJ_CFG */
#define FDMA_INJ_CFG              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 360, 0, 1, 4)

#define FDMA_INJ_CFG_TAXI_EOF_SOF_MIN_WRD(x)     (((x) << 11) & GENMASK(14, 11))
#define FDMA_INJ_CFG_TAXI_EOF_SOF_MIN_WRD_M      GENMASK(14, 11)
#define FDMA_INJ_CFG_TAXI_EOF_SOF_MIN_WRD_X(x)   (((x) & GENMASK(14, 11)) >> 11)

#define FDMA_INJ_CFG_INJ_ARB_SAT(x)              ((x) & GENMASK(10, 0))
#define FDMA_INJ_CFG_INJ_ARB_SAT_M               GENMASK(10, 0)
#define FDMA_INJ_CFG_INJ_ARB_SAT_X(x)            ((x) & GENMASK(10, 0))

/*      FDMA:FDMA:XTR_CFG */
#define FDMA_XTR_CFG              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 364, 0, 1, 4)

#define FDMA_XTR_CFG_XTR_FIFO_WM(x)              (((x) << 11) & GENMASK(15, 11))
#define FDMA_XTR_CFG_XTR_FIFO_WM_M               GENMASK(15, 11)
#define FDMA_XTR_CFG_XTR_FIFO_WM_X(x)            (((x) & GENMASK(15, 11)) >> 11)

#define FDMA_XTR_CFG_XTR_ARB_SAT(x)              ((x) & GENMASK(10, 0))
#define FDMA_XTR_CFG_XTR_ARB_SAT_M               GENMASK(10, 0)
#define FDMA_XTR_CFG_XTR_ARB_SAT_X(x)            ((x) & GENMASK(10, 0))

/*      FDMA:FDMA:PORT_CFG */
#define FDMA_PORT_CFG(r)          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 368, r, 2, 4)

#define FDMA_PORT_CFG_INJ_FCS_PAD_EN(x)          (((x) << 8) & GENMASK(8, 8))
#define FDMA_PORT_CFG_INJ_FCS_PAD_EN_M           GENMASK(8, 8)
#define FDMA_PORT_CFG_INJ_FCS_PAD_EN_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FDMA_PORT_CFG_INJ_FRM_MIN_LEN(x)         ((x) & GENMASK(7, 0))
#define FDMA_PORT_CFG_INJ_FRM_MIN_LEN_M          GENMASK(7, 0)
#define FDMA_PORT_CFG_INJ_FRM_MIN_LEN_X(x)       ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:PORT_CTRL */
#define FDMA_PORT_CTRL(r)         __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 376, r, 2, 4)

#define FDMA_PORT_CTRL_INJ_STOP(x)               (((x) << 4) & GENMASK(4, 4))
#define FDMA_PORT_CTRL_INJ_STOP_M                GENMASK(4, 4)
#define FDMA_PORT_CTRL_INJ_STOP_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define FDMA_PORT_CTRL_INJ_STOP_FORCE(x)         (((x) << 3) & GENMASK(3, 3))
#define FDMA_PORT_CTRL_INJ_STOP_FORCE_M          GENMASK(3, 3)
#define FDMA_PORT_CTRL_INJ_STOP_FORCE_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FDMA_PORT_CTRL_XTR_STOP(x)               (((x) << 2) & GENMASK(2, 2))
#define FDMA_PORT_CTRL_XTR_STOP_M                GENMASK(2, 2)
#define FDMA_PORT_CTRL_XTR_STOP_X(x)             (((x) & GENMASK(2, 2)) >> 2)

#define FDMA_PORT_CTRL_XTR_BUF_IS_EMPTY(x)       (((x) << 1) & GENMASK(1, 1))
#define FDMA_PORT_CTRL_XTR_BUF_IS_EMPTY_M        GENMASK(1, 1)
#define FDMA_PORT_CTRL_XTR_BUF_IS_EMPTY_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define FDMA_PORT_CTRL_XTR_BUF_RST(x)            ((x) & GENMASK(0, 0))
#define FDMA_PORT_CTRL_XTR_BUF_RST_M             GENMASK(0, 0)
#define FDMA_PORT_CTRL_XTR_BUF_RST_X(x)          ((x) & GENMASK(0, 0))

/*      FDMA:FDMA:INTR_DCB */
#define FDMA_INTR_DCB             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 384, 0, 1, 4)

#define FDMA_INTR_DCB_INTR_DCB(x)                ((x) & GENMASK(7, 0))
#define FDMA_INTR_DCB_INTR_DCB_M                 GENMASK(7, 0)
#define FDMA_INTR_DCB_INTR_DCB_X(x)              ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_DCB_ENA */
#define FDMA_INTR_DCB_ENA         __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 388, 0, 1, 4)

#define FDMA_INTR_DCB_ENA_INTR_DCB_ENA(x)        ((x) & GENMASK(7, 0))
#define FDMA_INTR_DCB_ENA_INTR_DCB_ENA_M         GENMASK(7, 0)
#define FDMA_INTR_DCB_ENA_INTR_DCB_ENA_X(x)      ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_DB */
#define FDMA_INTR_DB              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 392, 0, 1, 4)

#define FDMA_INTR_DB_INTR_DB(x)                  ((x) & GENMASK(7, 0))
#define FDMA_INTR_DB_INTR_DB_M                   GENMASK(7, 0)
#define FDMA_INTR_DB_INTR_DB_X(x)                ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_DB_ENA */
#define FDMA_INTR_DB_ENA          __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 396, 0, 1, 4)

#define FDMA_INTR_DB_ENA_INTR_DB_ENA(x)          ((x) & GENMASK(7, 0))
#define FDMA_INTR_DB_ENA_INTR_DB_ENA_M           GENMASK(7, 0)
#define FDMA_INTR_DB_ENA_INTR_DB_ENA_X(x)        ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_ERR */
#define FDMA_INTR_ERR             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 400, 0, 1, 4)

#define FDMA_INTR_ERR_INTR_PORT_ERR(x)           (((x) << 8) & GENMASK(9, 8))
#define FDMA_INTR_ERR_INTR_PORT_ERR_M            GENMASK(9, 8)
#define FDMA_INTR_ERR_INTR_PORT_ERR_X(x)         (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_INTR_ERR_INTR_CH_ERR(x)             ((x) & GENMASK(7, 0))
#define FDMA_INTR_ERR_INTR_CH_ERR_M              GENMASK(7, 0)
#define FDMA_INTR_ERR_INTR_CH_ERR_X(x)           ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_ENA */
#define FDMA_INTR_ENA             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 404, 0, 1, 4)

#define FDMA_INTR_ENA_INTR_PORT_ENA(x)           (((x) << 8) & GENMASK(9, 8))
#define FDMA_INTR_ENA_INTR_PORT_ENA_M            GENMASK(9, 8)
#define FDMA_INTR_ENA_INTR_PORT_ENA_X(x)         (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_INTR_ENA_INTR_CH_ENA(x)             ((x) & GENMASK(7, 0))
#define FDMA_INTR_ENA_INTR_CH_ENA_M              GENMASK(7, 0)
#define FDMA_INTR_ENA_INTR_CH_ENA_X(x)           ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:INTR_IDENT */
#define FDMA_INTR_IDENT           __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 408, 0, 1, 4)

#define FDMA_INTR_IDENT_INTR_PORT_IDENT(x)       (((x) << 8) & GENMASK(9, 8))
#define FDMA_INTR_IDENT_INTR_PORT_IDENT_M        GENMASK(9, 8)
#define FDMA_INTR_IDENT_INTR_PORT_IDENT_X(x)     (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_INTR_IDENT_INTR_CH_IDENT(x)         ((x) & GENMASK(7, 0))
#define FDMA_INTR_IDENT_INTR_CH_IDENT_M          GENMASK(7, 0)
#define FDMA_INTR_IDENT_INTR_CH_IDENT_X(x)       ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:ERRORS */
#define FDMA_ERRORS               __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 412, 0, 1, 4)

#define FDMA_ERRORS_ERR_XTR_WR(x)                (((x) << 30) & GENMASK(31, 30))
#define FDMA_ERRORS_ERR_XTR_WR_M                 GENMASK(31, 30)
#define FDMA_ERRORS_ERR_XTR_WR_X(x)              (((x) & GENMASK(31, 30)) >> 30)

#define FDMA_ERRORS_ERR_XTR_OVF(x)               (((x) << 28) & GENMASK(29, 28))
#define FDMA_ERRORS_ERR_XTR_OVF_M                GENMASK(29, 28)
#define FDMA_ERRORS_ERR_XTR_OVF_X(x)             (((x) & GENMASK(29, 28)) >> 28)

#define FDMA_ERRORS_ERR_XTR_TAXI32_OVF(x)        (((x) << 26) & GENMASK(27, 26))
#define FDMA_ERRORS_ERR_XTR_TAXI32_OVF_M         GENMASK(27, 26)
#define FDMA_ERRORS_ERR_XTR_TAXI32_OVF_X(x)      (((x) & GENMASK(27, 26)) >> 26)

#define FDMA_ERRORS_ERR_DCB_XTR_DATAL(x)         (((x) << 24) & GENMASK(25, 24))
#define FDMA_ERRORS_ERR_DCB_XTR_DATAL_M          GENMASK(25, 24)
#define FDMA_ERRORS_ERR_DCB_XTR_DATAL_X(x)       (((x) & GENMASK(25, 24)) >> 24)

#define FDMA_ERRORS_ERR_DCB_RD(x)                (((x) << 16) & GENMASK(23, 16))
#define FDMA_ERRORS_ERR_DCB_RD_M                 GENMASK(23, 16)
#define FDMA_ERRORS_ERR_DCB_RD_X(x)              (((x) & GENMASK(23, 16)) >> 16)

#define FDMA_ERRORS_ERR_INJ_RD(x)                (((x) << 10) & GENMASK(15, 10))
#define FDMA_ERRORS_ERR_INJ_RD_M                 GENMASK(15, 10)
#define FDMA_ERRORS_ERR_INJ_RD_X(x)              (((x) & GENMASK(15, 10)) >> 10)

#define FDMA_ERRORS_ERR_INJ_OUT_OF_SYNC(x)       (((x) << 8) & GENMASK(9, 8))
#define FDMA_ERRORS_ERR_INJ_OUT_OF_SYNC_M        GENMASK(9, 8)
#define FDMA_ERRORS_ERR_INJ_OUT_OF_SYNC_X(x)     (((x) & GENMASK(9, 8)) >> 8)

#define FDMA_ERRORS_ERR_CH_WR(x)                 ((x) & GENMASK(7, 0))
#define FDMA_ERRORS_ERR_CH_WR_M                  GENMASK(7, 0)
#define FDMA_ERRORS_ERR_CH_WR_X(x)               ((x) & GENMASK(7, 0))

/*      FDMA:FDMA:ERRORS_2 */
#define FDMA_ERRORS_2             __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 416, 0, 1, 4)

#define FDMA_ERRORS_2_ERR_XTR_FRAG(x)            ((x) & GENMASK(1, 0))
#define FDMA_ERRORS_2_ERR_XTR_FRAG_M             GENMASK(1, 0)
#define FDMA_ERRORS_2_ERR_XTR_FRAG_X(x)          ((x) & GENMASK(1, 0))

/*      FDMA:FDMA:IDLECNT */
#define FDMA_IDLECNT              __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 420, 0, 1, 4)

#define FDMA_IDLECNT_IDLECNT(x)                  ((x) & GENMASK(23, 0))
#define FDMA_IDLECNT_IDLECNT_M                   GENMASK(23, 0)
#define FDMA_IDLECNT_IDLECNT_X(x)                ((x) & GENMASK(23, 0))

/*      FDMA:FDMA:CTRL */
#define FDMA_CTRL                 __REG(TARGET_FDMA,\
					0, 1, 8, 0, 1, 428, 424, 0, 1, 4)

#define FDMA_CTRL_NRESET(x)                      ((x) & GENMASK(0, 0))
#define FDMA_CTRL_NRESET_M                       GENMASK(0, 0)
#define FDMA_CTRL_NRESET_X(x)                    ((x) & GENMASK(0, 0))

/*      FDMA:FDMA_HA:PORT_STAT */
#define FDMA_PORT_STAT(r)         __REG(TARGET_FDMA,\
					0, 1, 0, 0, 1, 8, 0, r, 2, 4)

#define FDMA_PORT_STAT_PORT_INJ_FRM_CNT(x)       ((x) & GENMASK(15, 0))
#define FDMA_PORT_STAT_PORT_INJ_FRM_CNT_M        GENMASK(15, 0)
#define FDMA_PORT_STAT_PORT_INJ_FRM_CNT_X(x)     ((x) & GENMASK(15, 0))

/*      GCB:CHIP_REGS:SOFT_RST */
#define GCB_SOFT_RST              __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 12, 0, 1, 4)

#define GCB_SOFT_RST_SOFT_SWC_RST(x)             (((x) << 1) & GENMASK(1, 1))
#define GCB_SOFT_RST_SOFT_SWC_RST_M              GENMASK(1, 1)
#define GCB_SOFT_RST_SOFT_SWC_RST_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SOFT_RST_SOFT_CHIP_RST(x)            ((x) & GENMASK(0, 0))
#define GCB_SOFT_RST_SOFT_CHIP_RST_M             GENMASK(0, 0)
#define GCB_SOFT_RST_SOFT_CHIP_RST_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:CHIP_REGS:HW_STAT */
#define GCB_HW_STAT               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 16, 0, 1, 4)

#define GCB_HW_STAT_PLL_CONF(x)                  (((x) << 3) & GENMASK(4, 3))
#define GCB_HW_STAT_PLL_CONF_M                   GENMASK(4, 3)
#define GCB_HW_STAT_PLL_CONF_X(x)                (((x) & GENMASK(4, 3)) >> 3)

#define GCB_HW_STAT_SJTAG_MUX(x)                 ((x) & GENMASK(2, 0))
#define GCB_HW_STAT_SJTAG_MUX_M                  GENMASK(2, 0)
#define GCB_HW_STAT_SJTAG_MUX_X(x)               ((x) & GENMASK(2, 0))

/*      GCB:CHIP_REGS:BUILDID */
#define GCB_BUILDID               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 64, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET */
#define GCB_GPIO_OUT_SET          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 0, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET1 */
#define GCB_GPIO_OUT_SET1         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 4, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET2 */
#define GCB_GPIO_OUT_SET2         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 8, 0, 1, 4)

#define GCB_GPIO_OUT_SET2_G_OUT_SET2(x)          ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT_SET2_G_OUT_SET2_M           GENMASK(13, 0)
#define GCB_GPIO_OUT_SET2_G_OUT_SET2_X(x)        ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OUT_CLR */
#define GCB_GPIO_OUT_CLR          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 12, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_CLR1 */
#define GCB_GPIO_OUT_CLR1         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 16, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_CLR2 */
#define GCB_GPIO_OUT_CLR2         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 20, 0, 1, 4)

#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2(x)          ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2_M           GENMASK(13, 0)
#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2_X(x)        ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OUT */
#define GCB_GPIO_OUT              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 24, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT1 */
#define GCB_GPIO_OUT1             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 28, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT2 */
#define GCB_GPIO_OUT2             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 32, 0, 1, 4)

#define GCB_GPIO_OUT2_G_OUT2(x)                  ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT2_G_OUT2_M                   GENMASK(13, 0)
#define GCB_GPIO_OUT2_G_OUT2_X(x)                ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_ALT */
#define GCB_GPIO_ALT(r)           __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 96, r, 3, 4)

/*      GCB:GPIO:GPIO_ALT1 */
#define GCB_GPIO_ALT1(r)          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 108, r, 3, 4)

/*      GCB:GPIO:GPIO_ALT2 */
#define GCB_GPIO_ALT2(r)          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 120, r, 3, 4)

#define GCB_GPIO_ALT2_G_ALT2(x)                  ((x) & GENMASK(13, 0))
#define GCB_GPIO_ALT2_G_ALT2_M                   GENMASK(13, 0)
#define GCB_GPIO_ALT2_G_ALT2_X(x)                ((x) & GENMASK(13, 0))

/*      HSIO:SYNC_ETH_CFG:SYNC_ETH_CFG */
#define HSIO_SYNC_ETH_CFG(r)      __REG(TARGET_HSIO,\
					0, 1, 0, 0, 1, 8, 0, r, 2, 4)

#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_SRC(x)    (((x) << 4) & GENMASK(6, 4))
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_SRC_M     GENMASK(6, 4)
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_SRC_X(x)  (((x) & GENMASK(6, 4)) >> 4)

#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_DIV(x)    (((x) << 1) & GENMASK(3, 1))
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_DIV_M     GENMASK(3, 1)
#define HSIO_SYNC_ETH_CFG_SEL_RECO_CLK_DIV_X(x)  (((x) & GENMASK(3, 1)) >> 1)

#define HSIO_SYNC_ETH_CFG_RECO_CLK_ENA(x)        ((x) & GENMASK(0, 0))
#define HSIO_SYNC_ETH_CFG_RECO_CLK_ENA_M         GENMASK(0, 0)
#define HSIO_SYNC_ETH_CFG_RECO_CLK_ENA_X(x)      ((x) & GENMASK(0, 0))

/*      HSIO:SD:SD_CFG */
#define HSIO_SD_CFG(g)            __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 0, 0, 1, 4)

#define HSIO_SD_CFG_TEST_POWERDOWN(x)            (((x) << 28) & GENMASK(28, 28))
#define HSIO_SD_CFG_TEST_POWERDOWN_M             GENMASK(28, 28)
#define HSIO_SD_CFG_TEST_POWERDOWN_X(x)          (((x) & GENMASK(28, 28)) >> 28)

#define HSIO_SD_CFG_PHY_RESET(x)                 (((x) << 27) & GENMASK(27, 27))
#define HSIO_SD_CFG_PHY_RESET_M                  GENMASK(27, 27)
#define HSIO_SD_CFG_PHY_RESET_X(x)               (((x) & GENMASK(27, 27)) >> 27)

#define HSIO_SD_CFG_RX_LOS_FILT_CNT(x)           (((x) << 20) & GENMASK(26, 20))
#define HSIO_SD_CFG_RX_LOS_FILT_CNT_M            GENMASK(26, 20)
#define HSIO_SD_CFG_RX_LOS_FILT_CNT_X(x)         (((x) & GENMASK(26, 20)) >> 20)

#define HSIO_SD_CFG_TX_VBOOST_EN(x)              (((x) << 19) & GENMASK(19, 19))
#define HSIO_SD_CFG_TX_VBOOST_EN_M               GENMASK(19, 19)
#define HSIO_SD_CFG_TX_VBOOST_EN_X(x)            (((x) & GENMASK(19, 19)) >> 19)

#define HSIO_SD_CFG_TX_RESET(x)                  (((x) << 18) & GENMASK(18, 18))
#define HSIO_SD_CFG_TX_RESET_M                   GENMASK(18, 18)
#define HSIO_SD_CFG_TX_RESET_X(x)                (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_SD_CFG_TX_RATE(x)                   (((x) << 16) & GENMASK(17, 16))
#define HSIO_SD_CFG_TX_RATE_M                    GENMASK(17, 16)
#define HSIO_SD_CFG_TX_RATE_X(x)                 (((x) & GENMASK(17, 16)) >> 16)

#define HSIO_SD_CFG_TX_INVERT(x)                 (((x) << 15) & GENMASK(15, 15))
#define HSIO_SD_CFG_TX_INVERT_M                  GENMASK(15, 15)
#define HSIO_SD_CFG_TX_INVERT_X(x)               (((x) & GENMASK(15, 15)) >> 15)

#define HSIO_SD_CFG_TX_EN(x)                     (((x) << 14) & GENMASK(14, 14))
#define HSIO_SD_CFG_TX_EN_M                      GENMASK(14, 14)
#define HSIO_SD_CFG_TX_EN_X(x)                   (((x) & GENMASK(14, 14)) >> 14)

#define HSIO_SD_CFG_TX_DETECT_RX_REQ(x)          (((x) << 13) & GENMASK(13, 13))
#define HSIO_SD_CFG_TX_DETECT_RX_REQ_M           GENMASK(13, 13)
#define HSIO_SD_CFG_TX_DETECT_RX_REQ_X(x)        (((x) & GENMASK(13, 13)) >> 13)

#define HSIO_SD_CFG_TX_DATA_EN(x)                (((x) << 12) & GENMASK(12, 12))
#define HSIO_SD_CFG_TX_DATA_EN_M                 GENMASK(12, 12)
#define HSIO_SD_CFG_TX_DATA_EN_X(x)              (((x) & GENMASK(12, 12)) >> 12)

#define HSIO_SD_CFG_TX_CM_EN(x)                  (((x) << 11) & GENMASK(11, 11))
#define HSIO_SD_CFG_TX_CM_EN_M                   GENMASK(11, 11)
#define HSIO_SD_CFG_TX_CM_EN_X(x)                (((x) & GENMASK(11, 11)) >> 11)

#define HSIO_SD_CFG_LANE_10BIT_SEL(x)            (((x) << 10) & GENMASK(10, 10))
#define HSIO_SD_CFG_LANE_10BIT_SEL_M             GENMASK(10, 10)
#define HSIO_SD_CFG_LANE_10BIT_SEL_X(x)          (((x) & GENMASK(10, 10)) >> 10)

#define HSIO_SD_CFG_RX_TERM_EN(x)                (((x) << 9) & GENMASK(9, 9))
#define HSIO_SD_CFG_RX_TERM_EN_M                 GENMASK(9, 9)
#define HSIO_SD_CFG_RX_TERM_EN_X(x)              (((x) & GENMASK(9, 9)) >> 9)

#define HSIO_SD_CFG_RX_RESET(x)                  (((x) << 8) & GENMASK(8, 8))
#define HSIO_SD_CFG_RX_RESET_M                   GENMASK(8, 8)
#define HSIO_SD_CFG_RX_RESET_X(x)                (((x) & GENMASK(8, 8)) >> 8)

#define HSIO_SD_CFG_RX_RATE(x)                   (((x) << 6) & GENMASK(7, 6))
#define HSIO_SD_CFG_RX_RATE_M                    GENMASK(7, 6)
#define HSIO_SD_CFG_RX_RATE_X(x)                 (((x) & GENMASK(7, 6)) >> 6)

#define HSIO_SD_CFG_RX_PLL_EN(x)                 (((x) << 5) & GENMASK(5, 5))
#define HSIO_SD_CFG_RX_PLL_EN_M                  GENMASK(5, 5)
#define HSIO_SD_CFG_RX_PLL_EN_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_SD_CFG_RX_LOS_EN(x)                 (((x) << 4) & GENMASK(4, 4))
#define HSIO_SD_CFG_RX_LOS_EN_M                  GENMASK(4, 4)
#define HSIO_SD_CFG_RX_LOS_EN_X(x)               (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_SD_CFG_RX_INVERT(x)                 (((x) << 3) & GENMASK(3, 3))
#define HSIO_SD_CFG_RX_INVERT_M                  GENMASK(3, 3)
#define HSIO_SD_CFG_RX_INVERT_X(x)               (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_SD_CFG_RX_DATA_EN(x)                (((x) << 2) & GENMASK(2, 2))
#define HSIO_SD_CFG_RX_DATA_EN_M                 GENMASK(2, 2)
#define HSIO_SD_CFG_RX_DATA_EN_X(x)              (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_SD_CFG_RX_ALIGN_EN(x)               (((x) << 1) & GENMASK(1, 1))
#define HSIO_SD_CFG_RX_ALIGN_EN_M                GENMASK(1, 1)
#define HSIO_SD_CFG_RX_ALIGN_EN_X(x)             (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SD_CFG_LANE_LOOPBK_EN(x)            ((x) & GENMASK(0, 0))
#define HSIO_SD_CFG_LANE_LOOPBK_EN_M             GENMASK(0, 0)
#define HSIO_SD_CFG_LANE_LOOPBK_EN_X(x)          ((x) & GENMASK(0, 0))

/*      HSIO:SD:SD_CFG2 */
#define HSIO_SD_CFG2(g)           __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 4, 0, 1, 4)

#define HSIO_SD_CFG2_RX_EQ(x)                    (((x) << 25) & GENMASK(27, 25))
#define HSIO_SD_CFG2_RX_EQ_M                     GENMASK(27, 25)
#define HSIO_SD_CFG2_RX_EQ_X(x)                  (((x) & GENMASK(27, 25)) >> 25)

#define HSIO_SD_CFG2_TX_TERM_OFFSET(x)           (((x) << 20) & GENMASK(24, 20))
#define HSIO_SD_CFG2_TX_TERM_OFFSET_M            GENMASK(24, 20)
#define HSIO_SD_CFG2_TX_TERM_OFFSET_X(x)         (((x) & GENMASK(24, 20)) >> 20)

#define HSIO_SD_CFG2_TX_VBOOST_LVL(x)            (((x) << 17) & GENMASK(19, 17))
#define HSIO_SD_CFG2_TX_VBOOST_LVL_M             GENMASK(19, 17)
#define HSIO_SD_CFG2_TX_VBOOST_LVL_X(x)          (((x) & GENMASK(19, 17)) >> 17)

#define HSIO_SD_CFG2_LOS_BIAS(x)                 (((x) << 14) & GENMASK(16, 14))
#define HSIO_SD_CFG2_LOS_BIAS_M                  GENMASK(16, 14)
#define HSIO_SD_CFG2_LOS_BIAS_X(x)               (((x) & GENMASK(16, 14)) >> 14)

#define HSIO_SD_CFG2_TX_AMPLITUDE(x)             (((x) << 7) & GENMASK(13, 7))
#define HSIO_SD_CFG2_TX_AMPLITUDE_M              GENMASK(13, 7)
#define HSIO_SD_CFG2_TX_AMPLITUDE_X(x)           (((x) & GENMASK(13, 7)) >> 7)

#define HSIO_SD_CFG2_TX_PREEMPH(x)               ((x) & GENMASK(6, 0))
#define HSIO_SD_CFG2_TX_PREEMPH_M                GENMASK(6, 0)
#define HSIO_SD_CFG2_TX_PREEMPH_X(x)             ((x) & GENMASK(6, 0))

/*      HSIO:SD:MPLL_CFG */
#define HSIO_MPLL_CFG(g)          __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 8, 0, 1, 4)

#define HSIO_MPLL_CFG_REF_SSP_EN(x)              (((x) << 18) & GENMASK(18, 18))
#define HSIO_MPLL_CFG_REF_SSP_EN_M               GENMASK(18, 18)
#define HSIO_MPLL_CFG_REF_SSP_EN_X(x)            (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_MPLL_CFG_REF_CLKDIV2(x)             (((x) << 17) & GENMASK(17, 17))
#define HSIO_MPLL_CFG_REF_CLKDIV2_M              GENMASK(17, 17)
#define HSIO_MPLL_CFG_REF_CLKDIV2_X(x)           (((x) & GENMASK(17, 17)) >> 17)

#define HSIO_MPLL_CFG_MPLL_EN(x)                 (((x) << 16) & GENMASK(16, 16))
#define HSIO_MPLL_CFG_MPLL_EN_M                  GENMASK(16, 16)
#define HSIO_MPLL_CFG_MPLL_EN_X(x)               (((x) & GENMASK(16, 16)) >> 16)

#define HSIO_MPLL_CFG_SSC_REF_CLK_SEL(x)         (((x) << 7) & GENMASK(15, 7))
#define HSIO_MPLL_CFG_SSC_REF_CLK_SEL_M          GENMASK(15, 7)
#define HSIO_MPLL_CFG_SSC_REF_CLK_SEL_X(x)       (((x) & GENMASK(15, 7)) >> 7)

#define HSIO_MPLL_CFG_MPLL_MULTIPLIER(x)         ((x) & GENMASK(6, 0))
#define HSIO_MPLL_CFG_MPLL_MULTIPLIER_M          GENMASK(6, 0)
#define HSIO_MPLL_CFG_MPLL_MULTIPLIER_X(x)       ((x) & GENMASK(6, 0))

/*      HSIO:SD:SD_STAT */
#define HSIO_SD_STAT(g)           __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 12, 0, 1, 4)

#define HSIO_SD_STAT_MPLL_STATE(x)               (((x) << 6) & GENMASK(6, 6))
#define HSIO_SD_STAT_MPLL_STATE_M                GENMASK(6, 6)
#define HSIO_SD_STAT_MPLL_STATE_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define HSIO_SD_STAT_TX_STATE(x)                 (((x) << 5) & GENMASK(5, 5))
#define HSIO_SD_STAT_TX_STATE_M                  GENMASK(5, 5)
#define HSIO_SD_STAT_TX_STATE_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_SD_STAT_TX_DETECT_RX_RESULT(x)      (((x) << 4) & GENMASK(4, 4))
#define HSIO_SD_STAT_TX_DETECT_RX_RESULT_M       GENMASK(4, 4)
#define HSIO_SD_STAT_TX_DETECT_RX_RESULT_X(x)    (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_SD_STAT_TX_DETECT_RX_ACK(x)         (((x) << 3) & GENMASK(3, 3))
#define HSIO_SD_STAT_TX_DETECT_RX_ACK_M          GENMASK(3, 3)
#define HSIO_SD_STAT_TX_DETECT_RX_ACK_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_SD_STAT_TX_CM_STATE(x)              (((x) << 2) & GENMASK(2, 2))
#define HSIO_SD_STAT_TX_CM_STATE_M               GENMASK(2, 2)
#define HSIO_SD_STAT_TX_CM_STATE_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_SD_STAT_RX_VALID(x)                 (((x) << 1) & GENMASK(1, 1))
#define HSIO_SD_STAT_RX_VALID_M                  GENMASK(1, 1)
#define HSIO_SD_STAT_RX_VALID_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SD_STAT_RX_PLL_STATE(x)             ((x) & GENMASK(0, 0))
#define HSIO_SD_STAT_RX_PLL_STATE_M              GENMASK(0, 0)
#define HSIO_SD_STAT_RX_PLL_STATE_X(x)           ((x) & GENMASK(0, 0))

/*      HSIO:SD:CR_ACCESS */
#define HSIO_CR_ACCESS(g)         __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 16, 0, 1, 4)

#define HSIO_CR_ACCESS_WRITE(x)                  (((x) << 19) & GENMASK(19, 19))
#define HSIO_CR_ACCESS_WRITE_M                   GENMASK(19, 19)
#define HSIO_CR_ACCESS_WRITE_X(x)                (((x) & GENMASK(19, 19)) >> 19)

#define HSIO_CR_ACCESS_READ(x)                   (((x) << 18) & GENMASK(18, 18))
#define HSIO_CR_ACCESS_READ_M                    GENMASK(18, 18)
#define HSIO_CR_ACCESS_READ_X(x)                 (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_CR_ACCESS_CAP_DATA(x)               (((x) << 17) & GENMASK(17, 17))
#define HSIO_CR_ACCESS_CAP_DATA_M                GENMASK(17, 17)
#define HSIO_CR_ACCESS_CAP_DATA_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define HSIO_CR_ACCESS_CAP_ADDR(x)               (((x) << 16) & GENMASK(16, 16))
#define HSIO_CR_ACCESS_CAP_ADDR_M                GENMASK(16, 16)
#define HSIO_CR_ACCESS_CAP_ADDR_X(x)             (((x) & GENMASK(16, 16)) >> 16)

#define HSIO_CR_ACCESS_DATA_IN(x)                ((x) & GENMASK(15, 0))
#define HSIO_CR_ACCESS_DATA_IN_M                 GENMASK(15, 0)
#define HSIO_CR_ACCESS_DATA_IN_X(x)              ((x) & GENMASK(15, 0))

/*      HSIO:SD:CR_OUTPUT */
#define HSIO_CR_OUTPUT(g)         __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 20, 0, 1, 4)

#define HSIO_CR_OUTPUT_ACK(x)                    (((x) << 16) & GENMASK(16, 16))
#define HSIO_CR_OUTPUT_ACK_M                     GENMASK(16, 16)
#define HSIO_CR_OUTPUT_ACK_X(x)                  (((x) & GENMASK(16, 16)) >> 16)

#define HSIO_CR_OUTPUT_DATA_OUT(x)               ((x) & GENMASK(15, 0))
#define HSIO_CR_OUTPUT_DATA_OUT_M                GENMASK(15, 0)
#define HSIO_CR_OUTPUT_DATA_OUT_X(x)             ((x) & GENMASK(15, 0))

/*      HSIO:SD:SYNC_ETH_SD_CFG */
#define HSIO_SYNC_ETH_SD_CFG(g)   __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 24, 0, 1, 4)

#define HSIO_SYNC_ETH_SD_CFG_SD_RECO_CLK_DIV(x)  (((x) << 4) & GENMASK(5, 4))
#define HSIO_SYNC_ETH_SD_CFG_SD_RECO_CLK_DIV_M   GENMASK(5, 4)
#define HSIO_SYNC_ETH_SD_CFG_SD_RECO_CLK_DIV_X(x) (((x) & GENMASK(5, 4)) >> 4)

#define HSIO_SYNC_ETH_SD_CFG_SD_LINK_STAT_ENA(x) (((x) << 1) & GENMASK(1, 1))
#define HSIO_SYNC_ETH_SD_CFG_SD_LINK_STAT_ENA_M  GENMASK(1, 1)
#define HSIO_SYNC_ETH_SD_CFG_SD_LINK_STAT_ENA_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SYNC_ETH_SD_CFG_SD_AUTO_SQUELCH_ENA(x) ((x) & GENMASK(0, 0))
#define HSIO_SYNC_ETH_SD_CFG_SD_AUTO_SQUELCH_ENA_M GENMASK(0, 0)
#define HSIO_SYNC_ETH_SD_CFG_SD_AUTO_SQUELCH_ENA_X(x) ((x) & GENMASK(0, 0))

/*      HSIO:SD:SIGDET_CFG */
#define HSIO_SIGDET_CFG(g)        __REG(TARGET_HSIO,\
					0, 1, 8, g, 3, 32, 28, 0, 1, 4)

#define HSIO_SIGDET_CFG_SD_SEL(x)                (((x) << 2) & GENMASK(2, 2))
#define HSIO_SIGDET_CFG_SD_SEL_M                 GENMASK(2, 2)
#define HSIO_SIGDET_CFG_SD_SEL_X(x)              (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_SIGDET_CFG_SD_POL(x)                (((x) << 1) & GENMASK(1, 1))
#define HSIO_SIGDET_CFG_SD_POL_M                 GENMASK(1, 1)
#define HSIO_SIGDET_CFG_SD_POL_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_SIGDET_CFG_SD_ENA(x)                ((x) & GENMASK(0, 0))
#define HSIO_SIGDET_CFG_SD_ENA_M                 GENMASK(0, 0)
#define HSIO_SIGDET_CFG_SD_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      HSIO:HW_CFGSTAT:HW_CFG */
#define HSIO_HW_CFG               __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 0, 0, 1, 4)

#define HSIO_HW_CFG_RGMII_1_CFG(x)               (((x) << 15) & GENMASK(15, 15))
#define HSIO_HW_CFG_RGMII_1_CFG_M                GENMASK(15, 15)
#define HSIO_HW_CFG_RGMII_1_CFG_X(x)             (((x) & GENMASK(15, 15)) >> 15)

#define HSIO_HW_CFG_RGMII_0_CFG(x)               (((x) << 14) & GENMASK(14, 14))
#define HSIO_HW_CFG_RGMII_0_CFG_M                GENMASK(14, 14)
#define HSIO_HW_CFG_RGMII_0_CFG_X(x)             (((x) & GENMASK(14, 14)) >> 14)

#define HSIO_HW_CFG_RGMII_ENA(x)                 (((x) << 12) & GENMASK(13, 12))
#define HSIO_HW_CFG_RGMII_ENA_M                  GENMASK(13, 12)
#define HSIO_HW_CFG_RGMII_ENA_X(x)               (((x) & GENMASK(13, 12)) >> 12)

#define HSIO_HW_CFG_SD6G_0_CFG(x)                (((x) << 11) & GENMASK(11, 11))
#define HSIO_HW_CFG_SD6G_0_CFG_M                 GENMASK(11, 11)
#define HSIO_HW_CFG_SD6G_0_CFG_X(x)              (((x) & GENMASK(11, 11)) >> 11)

#define HSIO_HW_CFG_SD6G_1_CFG(x)                (((x) << 10) & GENMASK(10, 10))
#define HSIO_HW_CFG_SD6G_1_CFG_M                 GENMASK(10, 10)
#define HSIO_HW_CFG_SD6G_1_CFG_X(x)              (((x) & GENMASK(10, 10)) >> 10)

#define HSIO_HW_CFG_GMII_ENA(x)                  (((x) << 2) & GENMASK(9, 2))
#define HSIO_HW_CFG_GMII_ENA_M                   GENMASK(9, 2)
#define HSIO_HW_CFG_GMII_ENA_X(x)                (((x) & GENMASK(9, 2)) >> 2)

#define HSIO_HW_CFG_QSGMII_ENA(x)                ((x) & GENMASK(1, 0))
#define HSIO_HW_CFG_QSGMII_ENA_M                 GENMASK(1, 0)
#define HSIO_HW_CFG_QSGMII_ENA_X(x)              ((x) & GENMASK(1, 0))

/*      HSIO:HW_CFGSTAT:GPIO_PI_CFG */
#define HSIO_GPIO_PI_CFG          __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 4, 0, 1, 4)

#define HSIO_GPIO_PI_CFG_PI_MUX_ENA(x)           ((x) & GENMASK(26, 0))
#define HSIO_GPIO_PI_CFG_PI_MUX_ENA_M            GENMASK(26, 0)
#define HSIO_GPIO_PI_CFG_PI_MUX_ENA_X(x)         ((x) & GENMASK(26, 0))

/*      HSIO:HW_CFGSTAT:QSGMII_CFG */
#define HSIO_QSGMII_CFG           __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 8, 0, 1, 4)

#define HSIO_QSGMII_CFG_SHYST_DIS(x)             (((x) << 4) & GENMASK(4, 4))
#define HSIO_QSGMII_CFG_SHYST_DIS_M              GENMASK(4, 4)
#define HSIO_QSGMII_CFG_SHYST_DIS_X(x)           (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_QSGMII_CFG_E_DET_ENA(x)             (((x) << 3) & GENMASK(3, 3))
#define HSIO_QSGMII_CFG_E_DET_ENA_M              GENMASK(3, 3)
#define HSIO_QSGMII_CFG_E_DET_ENA_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_QSGMII_CFG_USE_I1_ENA(x)            (((x) << 2) & GENMASK(2, 2))
#define HSIO_QSGMII_CFG_USE_I1_ENA_M             GENMASK(2, 2)
#define HSIO_QSGMII_CFG_USE_I1_ENA_X(x)          (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_QSGMII_CFG_FLIP_LANES(x)            ((x) & GENMASK(1, 0))
#define HSIO_QSGMII_CFG_FLIP_LANES_M             GENMASK(1, 0)
#define HSIO_QSGMII_CFG_FLIP_LANES_X(x)          ((x) & GENMASK(1, 0))

/*      HSIO:HW_CFGSTAT:QSGMII_STAT */
#define HSIO_QSGMII_STAT(r)       __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 12, r, 2, 4)

#define HSIO_QSGMII_STAT_DELAY_VAR_X200PS(x)     (((x) << 2) & GENMASK(7, 2))
#define HSIO_QSGMII_STAT_DELAY_VAR_X200PS_M      GENMASK(7, 2)
#define HSIO_QSGMII_STAT_DELAY_VAR_X200PS_X(x)   (((x) & GENMASK(7, 2)) >> 2)

#define HSIO_QSGMII_STAT_SYNC(x)                 ((x) & GENMASK(1, 0))
#define HSIO_QSGMII_STAT_SYNC_M                  GENMASK(1, 0)
#define HSIO_QSGMII_STAT_SYNC_X(x)               ((x) & GENMASK(1, 0))

/*      HSIO:HW_CFGSTAT:RGMII_CFG */
#define HSIO_RGMII_CFG(r)         __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 20, r, 2, 4)

#define HSIO_RGMII_CFG_IB_RX_LINK_STATUS(x)      (((x) << 15) & GENMASK(15, 15))
#define HSIO_RGMII_CFG_IB_RX_LINK_STATUS_M       GENMASK(15, 15)
#define HSIO_RGMII_CFG_IB_RX_LINK_STATUS_X(x)    (((x) & GENMASK(15, 15)) >> 15)

#define HSIO_RGMII_CFG_IB_RX_DUPLEX(x)           (((x) << 14) & GENMASK(14, 14))
#define HSIO_RGMII_CFG_IB_RX_DUPLEX_M            GENMASK(14, 14)
#define HSIO_RGMII_CFG_IB_RX_DUPLEX_X(x)         (((x) & GENMASK(14, 14)) >> 14)

#define HSIO_RGMII_CFG_IB_RX_SPEED(x)            (((x) << 12) & GENMASK(13, 12))
#define HSIO_RGMII_CFG_IB_RX_SPEED_M             GENMASK(13, 12)
#define HSIO_RGMII_CFG_IB_RX_SPEED_X(x)          (((x) & GENMASK(13, 12)) >> 12)

#define HSIO_RGMII_CFG_IB_TX_LINK_STATUS(x)      (((x) << 11) & GENMASK(11, 11))
#define HSIO_RGMII_CFG_IB_TX_LINK_STATUS_M       GENMASK(11, 11)
#define HSIO_RGMII_CFG_IB_TX_LINK_STATUS_X(x)    (((x) & GENMASK(11, 11)) >> 11)

#define HSIO_RGMII_CFG_IB_TX_FDX(x)              (((x) << 10) & GENMASK(10, 10))
#define HSIO_RGMII_CFG_IB_TX_FDX_M               GENMASK(10, 10)
#define HSIO_RGMII_CFG_IB_TX_FDX_X(x)            (((x) & GENMASK(10, 10)) >> 10)

#define HSIO_RGMII_CFG_IB_TX_MII_SPD(x)          (((x) << 9) & GENMASK(9, 9))
#define HSIO_RGMII_CFG_IB_TX_MII_SPD_M           GENMASK(9, 9)
#define HSIO_RGMII_CFG_IB_TX_MII_SPD_X(x)        (((x) & GENMASK(9, 9)) >> 9)

#define HSIO_RGMII_CFG_IB_TX_SPD_1G(x)           (((x) << 8) & GENMASK(8, 8))
#define HSIO_RGMII_CFG_IB_TX_SPD_1G_M            GENMASK(8, 8)
#define HSIO_RGMII_CFG_IB_TX_SPD_1G_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define HSIO_RGMII_CFG_IB_TX_ENA(x)              (((x) << 7) & GENMASK(7, 7))
#define HSIO_RGMII_CFG_IB_TX_ENA_M               GENMASK(7, 7)
#define HSIO_RGMII_CFG_IB_TX_ENA_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define HSIO_RGMII_CFG_IB_RX_ENA(x)              (((x) << 6) & GENMASK(6, 6))
#define HSIO_RGMII_CFG_IB_RX_ENA_M               GENMASK(6, 6)
#define HSIO_RGMII_CFG_IB_RX_ENA_X(x)            (((x) & GENMASK(6, 6)) >> 6)

#define HSIO_RGMII_CFG_IB_ENA(x)                 (((x) << 5) & GENMASK(5, 5))
#define HSIO_RGMII_CFG_IB_ENA_M                  GENMASK(5, 5)
#define HSIO_RGMII_CFG_IB_ENA_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_RGMII_CFG_TX_CLK_CFG(x)             (((x) << 2) & GENMASK(4, 2))
#define HSIO_RGMII_CFG_TX_CLK_CFG_M              GENMASK(4, 2)
#define HSIO_RGMII_CFG_TX_CLK_CFG_X(x)           (((x) & GENMASK(4, 2)) >> 2)

#define HSIO_RGMII_CFG_RGMII_TX_RST(x)           (((x) << 1) & GENMASK(1, 1))
#define HSIO_RGMII_CFG_RGMII_TX_RST_M            GENMASK(1, 1)
#define HSIO_RGMII_CFG_RGMII_TX_RST_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_RGMII_CFG_RGMII_RX_RST(x)           ((x) & GENMASK(0, 0))
#define HSIO_RGMII_CFG_RGMII_RX_RST_M            GENMASK(0, 0)
#define HSIO_RGMII_CFG_RGMII_RX_RST_X(x)         ((x) & GENMASK(0, 0))

/*      HSIO:HW_CFGSTAT:RMII_CFG */
#define HSIO_RMII_CFG(r)          __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 28, r, 2, 4)

#define HSIO_RMII_CFG_REF_CLK_SEL(x)             (((x) << 6) & GENMASK(6, 6))
#define HSIO_RMII_CFG_REF_CLK_SEL_M              GENMASK(6, 6)
#define HSIO_RMII_CFG_REF_CLK_SEL_X(x)           (((x) & GENMASK(6, 6)) >> 6)

#define HSIO_RMII_CFG_CFG_TX_EDGE(x)             (((x) << 5) & GENMASK(5, 5))
#define HSIO_RMII_CFG_CFG_TX_EDGE_M              GENMASK(5, 5)
#define HSIO_RMII_CFG_CFG_TX_EDGE_X(x)           (((x) & GENMASK(5, 5)) >> 5)

#define HSIO_RMII_CFG_FDX_CFG(x)                 (((x) << 4) & GENMASK(4, 4))
#define HSIO_RMII_CFG_FDX_CFG_M                  GENMASK(4, 4)
#define HSIO_RMII_CFG_FDX_CFG_X(x)               (((x) & GENMASK(4, 4)) >> 4)

#define HSIO_RMII_CFG_SPEED_CFG(x)               (((x) << 3) & GENMASK(3, 3))
#define HSIO_RMII_CFG_SPEED_CFG_M                GENMASK(3, 3)
#define HSIO_RMII_CFG_SPEED_CFG_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_RMII_CFG_RMII_TX_RST(x)             (((x) << 2) & GENMASK(2, 2))
#define HSIO_RMII_CFG_RMII_TX_RST_M              GENMASK(2, 2)
#define HSIO_RMII_CFG_RMII_TX_RST_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_RMII_CFG_RMII_RX_RST(x)             (((x) << 1) & GENMASK(1, 1))
#define HSIO_RMII_CFG_RMII_RX_RST_M              GENMASK(1, 1)
#define HSIO_RMII_CFG_RMII_RX_RST_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_RMII_CFG_RMII_ENA(x)                ((x) & GENMASK(0, 0))
#define HSIO_RMII_CFG_RMII_ENA_M                 GENMASK(0, 0)
#define HSIO_RMII_CFG_RMII_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      HSIO:HW_CFGSTAT:DLL_CFG */
#define HSIO_DLL_CFG(r)           __REG(TARGET_HSIO,\
					0, 1, 104, 0, 1, 52, 36, r, 4, 4)

#define HSIO_DLL_CFG_DLL_CLK_ENA(x)              (((x) << 20) & GENMASK(20, 20))
#define HSIO_DLL_CFG_DLL_CLK_ENA_M               GENMASK(20, 20)
#define HSIO_DLL_CFG_DLL_CLK_ENA_X(x)            (((x) & GENMASK(20, 20)) >> 20)

#define HSIO_DLL_CFG_BIST_PASS(x)                (((x) << 19) & GENMASK(19, 19))
#define HSIO_DLL_CFG_BIST_PASS_M                 GENMASK(19, 19)
#define HSIO_DLL_CFG_BIST_PASS_X(x)              (((x) & GENMASK(19, 19)) >> 19)

#define HSIO_DLL_CFG_BIST_END(x)                 (((x) << 18) & GENMASK(18, 18))
#define HSIO_DLL_CFG_BIST_END_M                  GENMASK(18, 18)
#define HSIO_DLL_CFG_BIST_END_X(x)               (((x) & GENMASK(18, 18)) >> 18)

#define HSIO_DLL_CFG_BIST_START(x)               (((x) << 17) & GENMASK(17, 17))
#define HSIO_DLL_CFG_BIST_START_M                GENMASK(17, 17)
#define HSIO_DLL_CFG_BIST_START_X(x)             (((x) & GENMASK(17, 17)) >> 17)

#define HSIO_DLL_CFG_TAP_SEL(x)                  (((x) << 10) & GENMASK(16, 10))
#define HSIO_DLL_CFG_TAP_SEL_M                   GENMASK(16, 10)
#define HSIO_DLL_CFG_TAP_SEL_X(x)                (((x) & GENMASK(16, 10)) >> 10)

#define HSIO_DLL_CFG_TAP_ADJ(x)                  (((x) << 3) & GENMASK(9, 3))
#define HSIO_DLL_CFG_TAP_ADJ_M                   GENMASK(9, 3)
#define HSIO_DLL_CFG_TAP_ADJ_X(x)                (((x) & GENMASK(9, 3)) >> 3)

#define HSIO_DLL_CFG_DELAY_ENA(x)                (((x) << 2) & GENMASK(2, 2))
#define HSIO_DLL_CFG_DELAY_ENA_M                 GENMASK(2, 2)
#define HSIO_DLL_CFG_DELAY_ENA_X(x)              (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_DLL_CFG_DLL_ENA(x)                  (((x) << 1) & GENMASK(1, 1))
#define HSIO_DLL_CFG_DLL_ENA_M                   GENMASK(1, 1)
#define HSIO_DLL_CFG_DLL_ENA_X(x)                (((x) & GENMASK(1, 1)) >> 1)

#define HSIO_DLL_CFG_DLL_RST(x)                  ((x) & GENMASK(0, 0))
#define HSIO_DLL_CFG_DLL_RST_M                   GENMASK(0, 0)
#define HSIO_DLL_CFG_DLL_RST_X(x)                ((x) & GENMASK(0, 0))

/*      MEP:COMMON:MEP_CTRL */
#define MEP_MEP_CTRL              __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 0, 0, 1, 4)

#define MEP_MEP_CTRL_LOC_SCAN_ENA(x)             (((x) << 1) & GENMASK(1, 1))
#define MEP_MEP_CTRL_LOC_SCAN_ENA_M              GENMASK(1, 1)
#define MEP_MEP_CTRL_LOC_SCAN_ENA_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MEP_CTRL_MEP_ENA(x)                  ((x) & GENMASK(0, 0))
#define MEP_MEP_CTRL_MEP_ENA_M                   GENMASK(0, 0)
#define MEP_MEP_CTRL_MEP_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      MEP:COMMON:LOC_PERIOD_CFG */
#define MEP_LOC_PERIOD_CFG(r)     __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 56, r, 10, 4)

/*      MEP:COMMON:LOC_CTRL */
#define MEP_LOC_CTRL              __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 96, 0, 1, 4)

#define MEP_LOC_CTRL_BASE_TICK_CNT(x)            (((x) << 24) & GENMASK(31, 24))
#define MEP_LOC_CTRL_BASE_TICK_CNT_M             GENMASK(31, 24)
#define MEP_LOC_CTRL_BASE_TICK_CNT_X(x)          (((x) & GENMASK(31, 24)) >> 24)

#define MEP_LOC_CTRL_BETWEEN_ENTRY_SCAN(x)       (((x) << 16) & GENMASK(23, 16))
#define MEP_LOC_CTRL_BETWEEN_ENTRY_SCAN_M        GENMASK(23, 16)
#define MEP_LOC_CTRL_BETWEEN_ENTRY_SCAN_X(x)     (((x) & GENMASK(23, 16)) >> 16)

#define MEP_LOC_CTRL_FORCE_HW_SCAN_ENA(x)        (((x) << 4) & GENMASK(13, 4))
#define MEP_LOC_CTRL_FORCE_HW_SCAN_ENA_M         GENMASK(13, 4)
#define MEP_LOC_CTRL_FORCE_HW_SCAN_ENA_X(x)      (((x) & GENMASK(13, 4)) >> 4)

#define MEP_LOC_CTRL_FORCE_HW_SCAN_STOP_ENA(x)   ((x) & GENMASK(0, 0))
#define MEP_LOC_CTRL_FORCE_HW_SCAN_STOP_ENA_M    GENMASK(0, 0)
#define MEP_LOC_CTRL_FORCE_HW_SCAN_STOP_ENA_X(x) ((x) & GENMASK(0, 0))

/*      MEP:COMMON:INTR_CTRL */
#define MEP_INTR_CTRL             __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 104, 0, 1, 4)

#define MEP_INTR_CTRL_OAM_MEP_INTR_ENA(x)        (((x) << 25) & GENMASK(25, 25))
#define MEP_INTR_CTRL_OAM_MEP_INTR_ENA_M         GENMASK(25, 25)
#define MEP_INTR_CTRL_OAM_MEP_INTR_ENA_X(x)      (((x) & GENMASK(25, 25)) >> 25)

#define MEP_INTR_CTRL_OAM_MEP_INTR(x)            (((x) << 8) & GENMASK(8, 8))
#define MEP_INTR_CTRL_OAM_MEP_INTR_M             GENMASK(8, 8)
#define MEP_INTR_CTRL_OAM_MEP_INTR_X(x)          (((x) & GENMASK(8, 8)) >> 8)

/*      MEP:COMMON:MC_MAC_LSB */
#define MEP_MC_MAC_LSB            __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 144, 0, 1, 4)

#define MEP_MC_MAC_LSB_MEP_MC_MAC_LSB(x)         (((x) << 3) & GENMASK(30, 3))
#define MEP_MC_MAC_LSB_MEP_MC_MAC_LSB_M          GENMASK(30, 3)
#define MEP_MC_MAC_LSB_MEP_MC_MAC_LSB_X(x)       (((x) & GENMASK(30, 3)) >> 3)

/*      MEP:COMMON:MC_MAC_MSB */
#define MEP_MC_MAC_MSB            __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 148, 0, 1, 4)

#define MEP_MC_MAC_MSB_MEP_MC_MAC_MSB(x)         ((x) & GENMASK(15, 0))
#define MEP_MC_MAC_MSB_MEP_MC_MAC_MSB_M          GENMASK(15, 0)
#define MEP_MC_MAC_MSB_MEP_MC_MAC_MSB_X(x)       ((x) & GENMASK(15, 0))

/*      MEP:COMMON:MEL_FILTERING_CFG */
#define MEP_MEL_FILTERING_CFG(r)  __REG(TARGET_MEP,\
					0, 1, 3328, 0, 1, 196, 152, r, 8, 4)

#define MEP_MEL_FILTERING_CFG_MEL_PORTMASK(x)    ((x) & GENMASK(7, 0))
#define MEP_MEL_FILTERING_CFG_MEL_PORTMASK_M     GENMASK(7, 0)
#define MEP_MEL_FILTERING_CFG_MEL_PORTMASK_X(x)  ((x) & GENMASK(7, 0))

/*      MEP:VOE:BASIC_CTRL */
#define MEP_BASIC_CTRL(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 0, 0, 1, 4)

#define MEP_BASIC_CTRL_DMAC_ERR_REDIR_ENA(x)     (((x) << 9) & GENMASK(9, 9))
#define MEP_BASIC_CTRL_DMAC_ERR_REDIR_ENA_M      GENMASK(9, 9)
#define MEP_BASIC_CTRL_DMAC_ERR_REDIR_ENA_X(x)   (((x) & GENMASK(9, 9)) >> 9)

#define MEP_BASIC_CTRL_RX_DMAC_CHK_SEL(x)        (((x) << 7) & GENMASK(8, 7))
#define MEP_BASIC_CTRL_RX_DMAC_CHK_SEL_M         GENMASK(8, 7)
#define MEP_BASIC_CTRL_RX_DMAC_CHK_SEL_X(x)      (((x) & GENMASK(8, 7)) >> 7)

#define MEP_BASIC_CTRL_CPU_ONCE_CCM_TLV(x)       (((x) << 6) & GENMASK(6, 6))
#define MEP_BASIC_CTRL_CPU_ONCE_CCM_TLV_M        GENMASK(6, 6)
#define MEP_BASIC_CTRL_CPU_ONCE_CCM_TLV_X(x)     (((x) & GENMASK(6, 6)) >> 6)

#define MEP_BASIC_CTRL_CCM_ERR_CPU_ONCE(x)       (((x) << 5) & GENMASK(5, 5))
#define MEP_BASIC_CTRL_CCM_ERR_CPU_ONCE_M        GENMASK(5, 5)
#define MEP_BASIC_CTRL_CCM_ERR_CPU_ONCE_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define MEP_BASIC_CTRL_CCM_ERR_CPU_COPY_ENA(x)   (((x) << 4) & GENMASK(4, 4))
#define MEP_BASIC_CTRL_CCM_ERR_CPU_COPY_ENA_M    GENMASK(4, 4)
#define MEP_BASIC_CTRL_CCM_ERR_CPU_COPY_ENA_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define MEP_BASIC_CTRL_CCM_NXT_CPU_ONCE(x)       (((x) << 3) & GENMASK(3, 3))
#define MEP_BASIC_CTRL_CCM_NXT_CPU_ONCE_M        GENMASK(3, 3)
#define MEP_BASIC_CTRL_CCM_NXT_CPU_ONCE_X(x)     (((x) & GENMASK(3, 3)) >> 3)

#define MEP_BASIC_CTRL_MIP_UC_ONLY_COPY_ENA(x)   (((x) << 2) & GENMASK(2, 2))
#define MEP_BASIC_CTRL_MIP_UC_ONLY_COPY_ENA_M    GENMASK(2, 2)
#define MEP_BASIC_CTRL_MIP_UC_ONLY_COPY_ENA_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define MEP_BASIC_CTRL_VOE_AS_MIP_ENA(x)         (((x) << 1) & GENMASK(1, 1))
#define MEP_BASIC_CTRL_VOE_AS_MIP_ENA_M          GENMASK(1, 1)
#define MEP_BASIC_CTRL_VOE_AS_MIP_ENA_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define MEP_BASIC_CTRL_VOE_ENA(x)                ((x) & GENMASK(0, 0))
#define MEP_BASIC_CTRL_VOE_ENA_M                 GENMASK(0, 0)
#define MEP_BASIC_CTRL_VOE_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      MEP:VOE:MEL_CTRL */
#define MEP_MEL_CTRL(g)           __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 4, 0, 1, 4)

#define MEP_MEL_CTRL_MEL_VAL(x)                  (((x) << 4) & GENMASK(6, 4))
#define MEP_MEL_CTRL_MEL_VAL_M                   GENMASK(6, 4)
#define MEP_MEL_CTRL_MEL_VAL_X(x)                (((x) & GENMASK(6, 4)) >> 4)

#define MEP_MEL_CTRL_CPU_HITME_ONCE_MTL(x)       (((x) << 3) & GENMASK(3, 3))
#define MEP_MEL_CTRL_CPU_HITME_ONCE_MTL_M        GENMASK(3, 3)
#define MEP_MEL_CTRL_CPU_HITME_ONCE_MTL_X(x)     (((x) & GENMASK(3, 3)) >> 3)

#define MEP_MEL_CTRL_CPU_COPY_MTL(x)             (((x) << 2) & GENMASK(2, 2))
#define MEP_MEL_CTRL_CPU_COPY_MTL_M              GENMASK(2, 2)
#define MEP_MEL_CTRL_CPU_COPY_MTL_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define MEP_MEL_CTRL_CPU_HITME_ONCE_CCM_MTL(x)   (((x) << 1) & GENMASK(1, 1))
#define MEP_MEL_CTRL_CPU_HITME_ONCE_CCM_MTL_M    GENMASK(1, 1)
#define MEP_MEL_CTRL_CPU_HITME_ONCE_CCM_MTL_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MEL_CTRL_CPU_COPY_CCM_MTL(x)         ((x) & GENMASK(0, 0))
#define MEP_MEL_CTRL_CPU_COPY_CCM_MTL_M          GENMASK(0, 0)
#define MEP_MEL_CTRL_CPU_COPY_CCM_MTL_X(x)       ((x) & GENMASK(0, 0))

/*      MEP:VOE:CPU_COPY_CTRL */
#define MEP_CPU_COPY_CTRL(g)      __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 8, 0, 1, 4)

#define MEP_CPU_COPY_CTRL_GENERIC_COPY_MASK(x)   (((x) << 6) & GENMASK(13, 6))
#define MEP_CPU_COPY_CTRL_GENERIC_COPY_MASK_M    GENMASK(13, 6)
#define MEP_CPU_COPY_CTRL_GENERIC_COPY_MASK_X(x) (((x) & GENMASK(13, 6)) >> 6)

#define MEP_CPU_COPY_CTRL_UNK_OPCODE_CPU_CP(x)   (((x) << 5) & GENMASK(5, 5))
#define MEP_CPU_COPY_CTRL_UNK_OPCODE_CPU_CP_M    GENMASK(5, 5)
#define MEP_CPU_COPY_CTRL_UNK_OPCODE_CPU_CP_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define MEP_CPU_COPY_CTRL_LTM_CPU_CP(x)          (((x) << 4) & GENMASK(4, 4))
#define MEP_CPU_COPY_CTRL_LTM_CPU_CP_M           GENMASK(4, 4)
#define MEP_CPU_COPY_CTRL_LTM_CPU_CP_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define MEP_CPU_COPY_CTRL_LTR_CPU_CP(x)          (((x) << 3) & GENMASK(3, 3))
#define MEP_CPU_COPY_CTRL_LTR_CPU_CP_M           GENMASK(3, 3)
#define MEP_CPU_COPY_CTRL_LTR_CPU_CP_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define MEP_CPU_COPY_CTRL_LBM_CPU_CP(x)          (((x) << 2) & GENMASK(2, 2))
#define MEP_CPU_COPY_CTRL_LBM_CPU_CP_M           GENMASK(2, 2)
#define MEP_CPU_COPY_CTRL_LBM_CPU_CP_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define MEP_CPU_COPY_CTRL_LBR_CPU_CP(x)          (((x) << 1) & GENMASK(1, 1))
#define MEP_CPU_COPY_CTRL_LBR_CPU_CP_M           GENMASK(1, 1)
#define MEP_CPU_COPY_CTRL_LBR_CPU_CP_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define MEP_CPU_COPY_CTRL_CCM_CPU_CP(x)          ((x) & GENMASK(0, 0))
#define MEP_CPU_COPY_CTRL_CCM_CPU_CP_M           GENMASK(0, 0)
#define MEP_CPU_COPY_CTRL_CCM_CPU_CP_X(x)        ((x) & GENMASK(0, 0))

/*      MEP:VOE:UC_MAC_LSB */
#define MEP_UC_MAC_LSB(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 24, 0, 1, 4)

/*      MEP:VOE:UC_MAC_MSB */
#define MEP_UC_MAC_MSB(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 28, 0, 1, 4)

#define MEP_UC_MAC_MSB_MEP_UC_MAC_MSB(x)         ((x) & GENMASK(15, 0))
#define MEP_UC_MAC_MSB_MEP_UC_MAC_MSB_M          GENMASK(15, 0)
#define MEP_UC_MAC_MSB_MEP_UC_MAC_MSB_X(x)       ((x) & GENMASK(15, 0))

/*      MEP:VOE:HW_CTRL */
#define MEP_HW_CTRL(g)            __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 32, 0, 1, 4)

#define MEP_HW_CTRL_CCM_ENA(x)                   ((x) & GENMASK(0, 0))
#define MEP_HW_CTRL_CCM_ENA_M                    GENMASK(0, 0)
#define MEP_HW_CTRL_CCM_ENA_X(x)                 ((x) & GENMASK(0, 0))

/*      MEP:VOE:CCM_CFG */
#define MEP_CCM_CFG(g)            __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 36, 0, 1, 4)

#define MEP_CCM_CFG_CCM_RX_SEQ_CHK_ENA(x)        (((x) << 19) & GENMASK(19, 19))
#define MEP_CCM_CFG_CCM_RX_SEQ_CHK_ENA_M         GENMASK(19, 19)
#define MEP_CCM_CFG_CCM_RX_SEQ_CHK_ENA_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define MEP_CCM_CFG_CCM_MISS_CNT(x)              (((x) << 16) & GENMASK(18, 16))
#define MEP_CCM_CFG_CCM_MISS_CNT_M               GENMASK(18, 16)
#define MEP_CCM_CFG_CCM_MISS_CNT_X(x)            (((x) & GENMASK(18, 16)) >> 16)

#define MEP_CCM_CFG_CCM_PRIO(x)                  (((x) << 13) & GENMASK(15, 13))
#define MEP_CCM_CFG_CCM_PRIO_M                   GENMASK(15, 13)
#define MEP_CCM_CFG_CCM_PRIO_X(x)                (((x) & GENMASK(15, 13)) >> 13)

#define MEP_CCM_CFG_CCM_PERIOD(x)                (((x) << 10) & GENMASK(12, 10))
#define MEP_CCM_CFG_CCM_PERIOD_M                 GENMASK(12, 10)
#define MEP_CCM_CFG_CCM_PERIOD_X(x)              (((x) & GENMASK(12, 10)) >> 10)

#define MEP_CCM_CFG_CCM_MEGID_CHK_ENA(x)         (((x) << 9) & GENMASK(9, 9))
#define MEP_CCM_CFG_CCM_MEGID_CHK_ENA_M          GENMASK(9, 9)
#define MEP_CCM_CFG_CCM_MEGID_CHK_ENA_X(x)       (((x) & GENMASK(9, 9)) >> 9)

#define MEP_CCM_CFG_CCM_MEPID_CHK_ENA(x)         (((x) << 8) & GENMASK(8, 8))
#define MEP_CCM_CFG_CCM_MEPID_CHK_ENA_M          GENMASK(8, 8)
#define MEP_CCM_CFG_CCM_MEPID_CHK_ENA_X(x)       (((x) & GENMASK(8, 8)) >> 8)

#define MEP_CCM_CFG_CCM_PERIOD_ERR(x)            (((x) << 7) & GENMASK(7, 7))
#define MEP_CCM_CFG_CCM_PERIOD_ERR_M             GENMASK(7, 7)
#define MEP_CCM_CFG_CCM_PERIOD_ERR_X(x)          (((x) & GENMASK(7, 7)) >> 7)

#define MEP_CCM_CFG_CCM_PRIO_ERR(x)              (((x) << 6) & GENMASK(6, 6))
#define MEP_CCM_CFG_CCM_PRIO_ERR_M               GENMASK(6, 6)
#define MEP_CCM_CFG_CCM_PRIO_ERR_X(x)            (((x) & GENMASK(6, 6)) >> 6)

#define MEP_CCM_CFG_CCM_ZERO_PERIOD_ERR(x)       (((x) << 5) & GENMASK(5, 5))
#define MEP_CCM_CFG_CCM_ZERO_PERIOD_ERR_M        GENMASK(5, 5)
#define MEP_CCM_CFG_CCM_ZERO_PERIOD_ERR_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define MEP_CCM_CFG_CCM_RX_RDI(x)                (((x) << 4) & GENMASK(4, 4))
#define MEP_CCM_CFG_CCM_RX_RDI_M                 GENMASK(4, 4)
#define MEP_CCM_CFG_CCM_RX_RDI_X(x)              (((x) & GENMASK(4, 4)) >> 4)

#define MEP_CCM_CFG_CCM_LOC_DEFECT(x)            (((x) << 3) & GENMASK(3, 3))
#define MEP_CCM_CFG_CCM_LOC_DEFECT_M             GENMASK(3, 3)
#define MEP_CCM_CFG_CCM_LOC_DEFECT_X(x)          (((x) & GENMASK(3, 3)) >> 3)

#define MEP_CCM_CFG_CCM_MEPID_ERR(x)             (((x) << 2) & GENMASK(2, 2))
#define MEP_CCM_CFG_CCM_MEPID_ERR_M              GENMASK(2, 2)
#define MEP_CCM_CFG_CCM_MEPID_ERR_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define MEP_CCM_CFG_CCM_MEGID_ERR(x)             (((x) << 1) & GENMASK(1, 1))
#define MEP_CCM_CFG_CCM_MEGID_ERR_M              GENMASK(1, 1)
#define MEP_CCM_CFG_CCM_MEGID_ERR_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define MEP_CCM_CFG_OAM_MEL_ERR(x)               ((x) & GENMASK(0, 0))
#define MEP_CCM_CFG_OAM_MEL_ERR_M                GENMASK(0, 0)
#define MEP_CCM_CFG_OAM_MEL_ERR_X(x)             ((x) & GENMASK(0, 0))

/*      MEP:VOE:CCM_RX_VL_FC_CNT */
#define MEP_CCM_RX_VL_FC_CNT(g)   __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 40, 0, 1, 4)

/*      MEP:VOE:CCM_RX_IV_FC_CNT */
#define MEP_CCM_RX_IV_FC_CNT(g)   __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 44, 0, 1, 4)

/*      MEP:VOE:CCM_RX_SEQ_CFG */
#define MEP_CCM_RX_SEQ_CFG(g)     __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 48, 0, 1, 4)

/*      MEP:VOE:CCM_MEPID_CFG */
#define MEP_CCM_MEPID_CFG(g)      __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 52, 0, 1, 4)

#define MEP_CCM_MEPID_CFG_CCM_MEPID(x)           ((x) & GENMASK(15, 0))
#define MEP_CCM_MEPID_CFG_CCM_MEPID_M            GENMASK(15, 0)
#define MEP_CCM_MEPID_CFG_CCM_MEPID_X(x)         ((x) & GENMASK(15, 0))

/*      MEP:VOE:CCM_MEGID_CFG */
#define MEP_CCM_MEGID_CFG(g, r)   __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 56, r, 12, 4)

/*      MEP:VOE:RX_STICKY */
#define MEP_RX_STICKY(g)          __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 104, 0, 1, 4)

#define MEP_RX_STICKY_GENERIC_RX_MASK(x)         (((x) << 11) & GENMASK(18, 11))
#define MEP_RX_STICKY_GENERIC_RX_MASK_M          GENMASK(18, 11)
#define MEP_RX_STICKY_GENERIC_RX_MASK_X(x)       (((x) & GENMASK(18, 11)) >> 11)

#define MEP_RX_STICKY_UNK_OPCODE_RX_STICKY(x)    (((x) << 10) & GENMASK(10, 10))
#define MEP_RX_STICKY_UNK_OPCODE_RX_STICKY_M     GENMASK(10, 10)
#define MEP_RX_STICKY_UNK_OPCODE_RX_STICKY_X(x)  (((x) & GENMASK(10, 10)) >> 10)

#define MEP_RX_STICKY_LTM_RX_STICKY(x)           (((x) << 9) & GENMASK(9, 9))
#define MEP_RX_STICKY_LTM_RX_STICKY_M            GENMASK(9, 9)
#define MEP_RX_STICKY_LTM_RX_STICKY_X(x)         (((x) & GENMASK(9, 9)) >> 9)

#define MEP_RX_STICKY_LTR_RX_STICKY(x)           (((x) << 8) & GENMASK(8, 8))
#define MEP_RX_STICKY_LTR_RX_STICKY_M            GENMASK(8, 8)
#define MEP_RX_STICKY_LTR_RX_STICKY_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define MEP_RX_STICKY_LBM_RX_STICKY(x)           (((x) << 7) & GENMASK(7, 7))
#define MEP_RX_STICKY_LBM_RX_STICKY_M            GENMASK(7, 7)
#define MEP_RX_STICKY_LBM_RX_STICKY_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define MEP_RX_STICKY_LBR_RX_STICKY(x)           (((x) << 6) & GENMASK(6, 6))
#define MEP_RX_STICKY_LBR_RX_STICKY_M            GENMASK(6, 6)
#define MEP_RX_STICKY_LBR_RX_STICKY_X(x)         (((x) & GENMASK(6, 6)) >> 6)

#define MEP_RX_STICKY_CCM_RX_STICKY(x)           (((x) << 5) & GENMASK(5, 5))
#define MEP_RX_STICKY_CCM_RX_STICKY_M            GENMASK(5, 5)
#define MEP_RX_STICKY_CCM_RX_STICKY_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define MEP_RX_STICKY_CCM_LM_RX_STICKY(x)        (((x) << 4) & GENMASK(4, 4))
#define MEP_RX_STICKY_CCM_LM_RX_STICKY_M         GENMASK(4, 4)
#define MEP_RX_STICKY_CCM_LM_RX_STICKY_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define MEP_RX_STICKY_CCM_RX_SEQ_ERR_STICKY(x)   (((x) << 3) & GENMASK(3, 3))
#define MEP_RX_STICKY_CCM_RX_SEQ_ERR_STICKY_M    GENMASK(3, 3)
#define MEP_RX_STICKY_CCM_RX_SEQ_ERR_STICKY_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define MEP_RX_STICKY_OAM_AS_DATA_STICKY(x)      (((x) << 2) & GENMASK(2, 2))
#define MEP_RX_STICKY_OAM_AS_DATA_STICKY_M       GENMASK(2, 2)
#define MEP_RX_STICKY_OAM_AS_DATA_STICKY_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define MEP_RX_STICKY_MEP_EGR_BLOCK_STICKY(x)    (((x) << 1) & GENMASK(1, 1))
#define MEP_RX_STICKY_MEP_EGR_BLOCK_STICKY_M     GENMASK(1, 1)
#define MEP_RX_STICKY_MEP_EGR_BLOCK_STICKY_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define MEP_RX_STICKY_MAC_ADDR_ERR_STICKY(x)     ((x) & GENMASK(0, 0))
#define MEP_RX_STICKY_MAC_ADDR_ERR_STICKY_M      GENMASK(0, 0)
#define MEP_RX_STICKY_MAC_ADDR_ERR_STICKY_X(x)   ((x) & GENMASK(0, 0))

/*      MEP:VOE:STICKY */
#define MEP_STICKY(g)             __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 108, 0, 1, 4)

#define MEP_STICKY_CCM_PERIOD_STICKY(x)          (((x) << 7) & GENMASK(7, 7))
#define MEP_STICKY_CCM_PERIOD_STICKY_M           GENMASK(7, 7)
#define MEP_STICKY_CCM_PERIOD_STICKY_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define MEP_STICKY_CCM_PRIO_STICKY(x)            (((x) << 6) & GENMASK(6, 6))
#define MEP_STICKY_CCM_PRIO_STICKY_M             GENMASK(6, 6)
#define MEP_STICKY_CCM_PRIO_STICKY_X(x)          (((x) & GENMASK(6, 6)) >> 6)

#define MEP_STICKY_CCM_ZERO_PERIOD_STICKY(x)     (((x) << 5) & GENMASK(5, 5))
#define MEP_STICKY_CCM_ZERO_PERIOD_STICKY_M      GENMASK(5, 5)
#define MEP_STICKY_CCM_ZERO_PERIOD_STICKY_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define MEP_STICKY_CCM_RX_RDI_STICKY(x)          (((x) << 4) & GENMASK(4, 4))
#define MEP_STICKY_CCM_RX_RDI_STICKY_M           GENMASK(4, 4)
#define MEP_STICKY_CCM_RX_RDI_STICKY_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define MEP_STICKY_CCM_LOC_STICKY(x)             (((x) << 3) & GENMASK(3, 3))
#define MEP_STICKY_CCM_LOC_STICKY_M              GENMASK(3, 3)
#define MEP_STICKY_CCM_LOC_STICKY_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define MEP_STICKY_CCM_MEPID_STICKY(x)           (((x) << 2) & GENMASK(2, 2))
#define MEP_STICKY_CCM_MEPID_STICKY_M            GENMASK(2, 2)
#define MEP_STICKY_CCM_MEPID_STICKY_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define MEP_STICKY_CCM_MEGID_STICKY(x)           (((x) << 1) & GENMASK(1, 1))
#define MEP_STICKY_CCM_MEGID_STICKY_M            GENMASK(1, 1)
#define MEP_STICKY_CCM_MEGID_STICKY_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define MEP_STICKY_OAM_MEL_STICKY(x)             ((x) & GENMASK(0, 0))
#define MEP_STICKY_OAM_MEL_STICKY_M              GENMASK(0, 0)
#define MEP_STICKY_OAM_MEL_STICKY_X(x)           ((x) & GENMASK(0, 0))

/*      MEP:VOE:INTR_ENA */
#define MEP_INTR_ENA(g)           __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 112, 0, 1, 4)

#define MEP_INTR_ENA_CCM_PER_INTR_ENA(x)         (((x) << 7) & GENMASK(7, 7))
#define MEP_INTR_ENA_CCM_PER_INTR_ENA_M          GENMASK(7, 7)
#define MEP_INTR_ENA_CCM_PER_INTR_ENA_X(x)       (((x) & GENMASK(7, 7)) >> 7)

#define MEP_INTR_ENA_CCM_PRIO_INTR_ENA(x)        (((x) << 6) & GENMASK(6, 6))
#define MEP_INTR_ENA_CCM_PRIO_INTR_ENA_M         GENMASK(6, 6)
#define MEP_INTR_ENA_CCM_PRIO_INTR_ENA_X(x)      (((x) & GENMASK(6, 6)) >> 6)

#define MEP_INTR_ENA_CCM_ZERO_PER_INTR_ENA(x)    (((x) << 5) & GENMASK(5, 5))
#define MEP_INTR_ENA_CCM_ZERO_PER_INTR_ENA_M     GENMASK(5, 5)
#define MEP_INTR_ENA_CCM_ZERO_PER_INTR_ENA_X(x)  (((x) & GENMASK(5, 5)) >> 5)

#define MEP_INTR_ENA_CCM_RX_RDI_INTR_ENA(x)      (((x) << 4) & GENMASK(4, 4))
#define MEP_INTR_ENA_CCM_RX_RDI_INTR_ENA_M       GENMASK(4, 4)
#define MEP_INTR_ENA_CCM_RX_RDI_INTR_ENA_X(x)    (((x) & GENMASK(4, 4)) >> 4)

#define MEP_INTR_ENA_CCM_LOC_INTR_ENA(x)         (((x) << 3) & GENMASK(3, 3))
#define MEP_INTR_ENA_CCM_LOC_INTR_ENA_M          GENMASK(3, 3)
#define MEP_INTR_ENA_CCM_LOC_INTR_ENA_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define MEP_INTR_ENA_CCM_MEPID_INTR_ENA(x)       (((x) << 2) & GENMASK(2, 2))
#define MEP_INTR_ENA_CCM_MEPID_INTR_ENA_M        GENMASK(2, 2)
#define MEP_INTR_ENA_CCM_MEPID_INTR_ENA_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define MEP_INTR_ENA_CCM_MEGID_INTR_ENA(x)       (((x) << 1) & GENMASK(1, 1))
#define MEP_INTR_ENA_CCM_MEGID_INTR_ENA_M        GENMASK(1, 1)
#define MEP_INTR_ENA_CCM_MEGID_INTR_ENA_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define MEP_INTR_ENA_OAM_MEL_INTR_ENA(x)         ((x) & GENMASK(0, 0))
#define MEP_INTR_ENA_OAM_MEL_INTR_ENA_M          GENMASK(0, 0)
#define MEP_INTR_ENA_OAM_MEL_INTR_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      MEP:VOE:RX_SEL_CNT */
#define MEP_RX_SEL_CNT(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 116, 0, 1, 4)

/*      MEP:VOE:RX_FRM_CNT */
#define MEP_RX_FRM_CNT(g)         __REG(TARGET_MEP,\
					0, 1, 0, g, 8, 128, 120, 0, 1, 4)

/*      MEP:PORT_PM:PORT_RX_FRM_CNT */
#define MEP_PORT_RX_FRM_CNT(g)    __REG(TARGET_MEP,\
					0, 1, 3072, g, 64, 4, 0, 0, 1, 4)

/*      MEP:MRP:MRP_CTRL */
#define MEP_MRP_CTRL(g)           __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 0, 0, 1, 4)

#define MEP_MRP_CTRL_ITST_CHK_SEQ_ENA(x)         (((x) << 11) & GENMASK(11, 11))
#define MEP_MRP_CTRL_ITST_CHK_SEQ_ENA_M          GENMASK(11, 11)
#define MEP_MRP_CTRL_ITST_CHK_SEQ_ENA_X(x)       (((x) & GENMASK(11, 11)) >> 11)

#define MEP_MRP_CTRL_TST_CHK_SEQ_ENA(x)          (((x) << 10) & GENMASK(10, 10))
#define MEP_MRP_CTRL_TST_CHK_SEQ_ENA_M           GENMASK(10, 10)
#define MEP_MRP_CTRL_TST_CHK_SEQ_ENA_X(x)        (((x) & GENMASK(10, 10)) >> 10)

#define MEP_MRP_CTRL_CHK_DMAC_ENA(x)             (((x) << 9) & GENMASK(9, 9))
#define MEP_MRP_CTRL_CHK_DMAC_ENA_M              GENMASK(9, 9)
#define MEP_MRP_CTRL_CHK_DMAC_ENA_X(x)           (((x) & GENMASK(9, 9)) >> 9)

#define MEP_MRP_CTRL_ALLOW_MRP_OUIS_ENA(x)       (((x) << 8) & GENMASK(8, 8))
#define MEP_MRP_CTRL_ALLOW_MRP_OUIS_ENA_M        GENMASK(8, 8)
#define MEP_MRP_CTRL_ALLOW_MRP_OUIS_ENA_X(x)     (((x) & GENMASK(8, 8)) >> 8)

#define MEP_MRP_CTRL_CHK_VERSION_ENA(x)          (((x) << 7) & GENMASK(7, 7))
#define MEP_MRP_CTRL_CHK_VERSION_ENA_M           GENMASK(7, 7)
#define MEP_MRP_CTRL_CHK_VERSION_ENA_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define MEP_MRP_CTRL_MRP_VERSION(x)              (((x) << 3) & GENMASK(6, 3))
#define MEP_MRP_CTRL_MRP_VERSION_M               GENMASK(6, 3)
#define MEP_MRP_CTRL_MRP_VERSION_X(x)            (((x) & GENMASK(6, 3)) >> 3)

#define MEP_MRP_CTRL_MRP_TST_ENA(x)              (((x) << 2) & GENMASK(2, 2))
#define MEP_MRP_CTRL_MRP_TST_ENA_M               GENMASK(2, 2)
#define MEP_MRP_CTRL_MRP_TST_ENA_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define MEP_MRP_CTRL_MRP_ITST_ENA(x)             (((x) << 1) & GENMASK(1, 1))
#define MEP_MRP_CTRL_MRP_ITST_ENA_M              GENMASK(1, 1)
#define MEP_MRP_CTRL_MRP_ITST_ENA_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MRP_CTRL_MRP_ENA(x)                  ((x) & GENMASK(0, 0))
#define MEP_MRP_CTRL_MRP_ENA_M                   GENMASK(0, 0)
#define MEP_MRP_CTRL_MRP_ENA_X(x)                ((x) & GENMASK(0, 0))

/*      MEP:MRP:MRP_FWD_CTRL */
#define MEP_MRP_FWD_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 4, 0, 1, 4)

#define MEP_MRP_FWD_CTRL_ICON_MASK_ENA(x)        (((x) << 25) & GENMASK(25, 25))
#define MEP_MRP_FWD_CTRL_ICON_MASK_ENA_M         GENMASK(25, 25)
#define MEP_MRP_FWD_CTRL_ICON_MASK_ENA_X(x)      (((x) & GENMASK(25, 25)) >> 25)

#define MEP_MRP_FWD_CTRL_RING_MASK_ENA(x)        (((x) << 24) & GENMASK(24, 24))
#define MEP_MRP_FWD_CTRL_RING_MASK_ENA_M         GENMASK(24, 24)
#define MEP_MRP_FWD_CTRL_RING_MASK_ENA_X(x)      (((x) & GENMASK(24, 24)) >> 24)

#define MEP_MRP_FWD_CTRL_ERR_FWD_SEL(x)          (((x) << 22) & GENMASK(23, 22))
#define MEP_MRP_FWD_CTRL_ERR_FWD_SEL_M           GENMASK(23, 22)
#define MEP_MRP_FWD_CTRL_ERR_FWD_SEL_X(x)        (((x) & GENMASK(23, 22)) >> 22)

#define MEP_MRP_FWD_CTRL_MRP_TST_FWD_SEL(x)      (((x) << 20) & GENMASK(21, 20))
#define MEP_MRP_FWD_CTRL_MRP_TST_FWD_SEL_M       GENMASK(21, 20)
#define MEP_MRP_FWD_CTRL_MRP_TST_FWD_SEL_X(x)    (((x) & GENMASK(21, 20)) >> 20)

#define MEP_MRP_FWD_CTRL_MRP_TPM_FWD_SEL(x)      (((x) << 18) & GENMASK(19, 18))
#define MEP_MRP_FWD_CTRL_MRP_TPM_FWD_SEL_M       GENMASK(19, 18)
#define MEP_MRP_FWD_CTRL_MRP_TPM_FWD_SEL_X(x)    (((x) & GENMASK(19, 18)) >> 18)

#define MEP_MRP_FWD_CTRL_MRP_LD_FWD_SEL(x)       (((x) << 16) & GENMASK(17, 16))
#define MEP_MRP_FWD_CTRL_MRP_LD_FWD_SEL_M        GENMASK(17, 16)
#define MEP_MRP_FWD_CTRL_MRP_LD_FWD_SEL_X(x)     (((x) & GENMASK(17, 16)) >> 16)

#define MEP_MRP_FWD_CTRL_MRP_LU_FWD_SEL(x)       (((x) << 14) & GENMASK(15, 14))
#define MEP_MRP_FWD_CTRL_MRP_LU_FWD_SEL_M        GENMASK(15, 14)
#define MEP_MRP_FWD_CTRL_MRP_LU_FWD_SEL_X(x)     (((x) & GENMASK(15, 14)) >> 14)

#define MEP_MRP_FWD_CTRL_MRP_TC_FWD_SEL(x)       (((x) << 12) & GENMASK(13, 12))
#define MEP_MRP_FWD_CTRL_MRP_TC_FWD_SEL_M        GENMASK(13, 12)
#define MEP_MRP_FWD_CTRL_MRP_TC_FWD_SEL_X(x)     (((x) & GENMASK(13, 12)) >> 12)

#define MEP_MRP_FWD_CTRL_MRP_ITST_FWD_SEL(x)     (((x) << 10) & GENMASK(11, 10))
#define MEP_MRP_FWD_CTRL_MRP_ITST_FWD_SEL_M      GENMASK(11, 10)
#define MEP_MRP_FWD_CTRL_MRP_ITST_FWD_SEL_X(x)   (((x) & GENMASK(11, 10)) >> 10)

#define MEP_MRP_FWD_CTRL_MRP_ITC_FWD_SEL(x)      (((x) << 8) & GENMASK(9, 8))
#define MEP_MRP_FWD_CTRL_MRP_ITC_FWD_SEL_M       GENMASK(9, 8)
#define MEP_MRP_FWD_CTRL_MRP_ITC_FWD_SEL_X(x)    (((x) & GENMASK(9, 8)) >> 8)

#define MEP_MRP_FWD_CTRL_MRP_ILD_FWD_SEL(x)      (((x) << 6) & GENMASK(7, 6))
#define MEP_MRP_FWD_CTRL_MRP_ILD_FWD_SEL_M       GENMASK(7, 6)
#define MEP_MRP_FWD_CTRL_MRP_ILD_FWD_SEL_X(x)    (((x) & GENMASK(7, 6)) >> 6)

#define MEP_MRP_FWD_CTRL_MRP_ILU_FWD_SEL(x)      (((x) << 4) & GENMASK(5, 4))
#define MEP_MRP_FWD_CTRL_MRP_ILU_FWD_SEL_M       GENMASK(5, 4)
#define MEP_MRP_FWD_CTRL_MRP_ILU_FWD_SEL_X(x)    (((x) & GENMASK(5, 4)) >> 4)

#define MEP_MRP_FWD_CTRL_MRP_ILSP_FWD_SEL(x)     (((x) << 2) & GENMASK(3, 2))
#define MEP_MRP_FWD_CTRL_MRP_ILSP_FWD_SEL_M      GENMASK(3, 2)
#define MEP_MRP_FWD_CTRL_MRP_ILSP_FWD_SEL_X(x)   (((x) & GENMASK(3, 2)) >> 2)

#define MEP_MRP_FWD_CTRL_OTHER_FWD_SEL(x)        ((x) & GENMASK(1, 0))
#define MEP_MRP_FWD_CTRL_OTHER_FWD_SEL_M         GENMASK(1, 0)
#define MEP_MRP_FWD_CTRL_OTHER_FWD_SEL_X(x)      ((x) & GENMASK(1, 0))

/*      MEP:MRP:RING_MASK_CFG */
#define MEP_RING_MASK_CFG(g)      __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 8, 0, 1, 4)

#define MEP_RING_MASK_CFG_RING_PORTMASK(x)       ((x) & GENMASK(7, 0))
#define MEP_RING_MASK_CFG_RING_PORTMASK_M        GENMASK(7, 0)
#define MEP_RING_MASK_CFG_RING_PORTMASK_X(x)     ((x) & GENMASK(7, 0))

/*      MEP:MRP:ICON_MASK_CFG */
#define MEP_ICON_MASK_CFG(g)      __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 12, 0, 1, 4)

#define MEP_ICON_MASK_CFG_ICON_PORTMASK(x)       ((x) & GENMASK(7, 0))
#define MEP_ICON_MASK_CFG_ICON_PORTMASK_M        GENMASK(7, 0)
#define MEP_ICON_MASK_CFG_ICON_PORTMASK_X(x)     ((x) & GENMASK(7, 0))

/*      MEP:MRP:TST_FWD_CTRL */
#define MEP_TST_FWD_CTRL(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 16, 0, 1, 4)

#define MEP_TST_FWD_CTRL_NXT_LOC_CPU_HITME(x)    (((x) << 8) & GENMASK(8, 8))
#define MEP_TST_FWD_CTRL_NXT_LOC_CPU_HITME_M     GENMASK(8, 8)
#define MEP_TST_FWD_CTRL_NXT_LOC_CPU_HITME_X(x)  (((x) & GENMASK(8, 8)) >> 8)

#define MEP_TST_FWD_CTRL_HI_PRIO_FWD_SEL(x)      (((x) << 6) & GENMASK(7, 6))
#define MEP_TST_FWD_CTRL_HI_PRIO_FWD_SEL_M       GENMASK(7, 6)
#define MEP_TST_FWD_CTRL_HI_PRIO_FWD_SEL_X(x)    (((x) & GENMASK(7, 6)) >> 6)

#define MEP_TST_FWD_CTRL_LO_PRIO_FWD_SEL(x)      (((x) << 4) & GENMASK(5, 4))
#define MEP_TST_FWD_CTRL_LO_PRIO_FWD_SEL_M       GENMASK(5, 4)
#define MEP_TST_FWD_CTRL_LO_PRIO_FWD_SEL_X(x)    (((x) & GENMASK(5, 4)) >> 4)

#define MEP_TST_FWD_CTRL_REM_FWD_SEL(x)          (((x) << 2) & GENMASK(3, 2))
#define MEP_TST_FWD_CTRL_REM_FWD_SEL_M           GENMASK(3, 2)
#define MEP_TST_FWD_CTRL_REM_FWD_SEL_X(x)        (((x) & GENMASK(3, 2)) >> 2)

#define MEP_TST_FWD_CTRL_OWN_FWD_SEL(x)          ((x) & GENMASK(1, 0))
#define MEP_TST_FWD_CTRL_OWN_FWD_SEL_M           GENMASK(1, 0)
#define MEP_TST_FWD_CTRL_OWN_FWD_SEL_X(x)        ((x) & GENMASK(1, 0))

/*      MEP:MRP:TST_CFG */
#define MEP_TST_CFG(g)            __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 20, 0, 1, 4)

#define MEP_TST_CFG_SAMPLE_LO_PRIO_ENA(x)        (((x) << 16) & GENMASK(16, 16))
#define MEP_TST_CFG_SAMPLE_LO_PRIO_ENA_M         GENMASK(16, 16)
#define MEP_TST_CFG_SAMPLE_LO_PRIO_ENA_X(x)      (((x) & GENMASK(16, 16)) >> 16)

#define MEP_TST_CFG_SAMPLE_HI_PRIO_ENA(x)        (((x) << 15) & GENMASK(15, 15))
#define MEP_TST_CFG_SAMPLE_HI_PRIO_ENA_M         GENMASK(15, 15)
#define MEP_TST_CFG_SAMPLE_HI_PRIO_ENA_X(x)      (((x) & GENMASK(15, 15)) >> 15)

#define MEP_TST_CFG_CHK_REM_PRIO_ENA(x)          (((x) << 14) & GENMASK(14, 14))
#define MEP_TST_CFG_CHK_REM_PRIO_ENA_M           GENMASK(14, 14)
#define MEP_TST_CFG_CHK_REM_PRIO_ENA_X(x)        (((x) & GENMASK(14, 14)) >> 14)

#define MEP_TST_CFG_CHK_BEST_MRM_ENA(x)          (((x) << 13) & GENMASK(13, 13))
#define MEP_TST_CFG_CHK_BEST_MRM_ENA_M           GENMASK(13, 13)
#define MEP_TST_CFG_CHK_BEST_MRM_ENA_X(x)        (((x) & GENMASK(13, 13)) >> 13)

#define MEP_TST_CFG_CLR_MISS_CNT_ENA(x)          (((x) << 12) & GENMASK(12, 12))
#define MEP_TST_CFG_CLR_MISS_CNT_ENA_M           GENMASK(12, 12)
#define MEP_TST_CFG_CLR_MISS_CNT_ENA_X(x)        (((x) & GENMASK(12, 12)) >> 12)

#define MEP_TST_CFG_MAX_MISS_CNT(x)              (((x) << 8) & GENMASK(11, 8))
#define MEP_TST_CFG_MAX_MISS_CNT_M               GENMASK(11, 8)
#define MEP_TST_CFG_MAX_MISS_CNT_X(x)            (((x) & GENMASK(11, 8)) >> 8)

#define MEP_TST_CFG_MISS_CNT(x)                  (((x) << 4) & GENMASK(7, 4))
#define MEP_TST_CFG_MISS_CNT_M                   GENMASK(7, 4)
#define MEP_TST_CFG_MISS_CNT_X(x)                (((x) & GENMASK(7, 4)) >> 4)

#define MEP_TST_CFG_LOC_PERIOD(x)                ((x) & GENMASK(3, 0))
#define MEP_TST_CFG_LOC_PERIOD_M                 GENMASK(3, 0)
#define MEP_TST_CFG_LOC_PERIOD_X(x)              ((x) & GENMASK(3, 0))

/*      MEP:MRP:TST_PRIO_CFG */
#define MEP_TST_PRIO_CFG(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 24, 0, 1, 4)

#define MEP_TST_PRIO_CFG_OWN_PRIO(x)             (((x) << 16) & GENMASK(31, 16))
#define MEP_TST_PRIO_CFG_OWN_PRIO_M              GENMASK(31, 16)
#define MEP_TST_PRIO_CFG_OWN_PRIO_X(x)           (((x) & GENMASK(31, 16)) >> 16)

#define MEP_TST_PRIO_CFG_BEST_PRIO(x)            ((x) & GENMASK(15, 0))
#define MEP_TST_PRIO_CFG_BEST_PRIO_M             GENMASK(15, 0)
#define MEP_TST_PRIO_CFG_BEST_PRIO_X(x)          ((x) & GENMASK(15, 0))

/*      MEP:MRP:ITST_FWD_CTRL */
#define MEP_ITST_FWD_CTRL(g)      __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 28, 0, 1, 4)

#define MEP_ITST_FWD_CTRL_NXT_LOC_CPU_HITME(x)   (((x) << 4) & GENMASK(4, 4))
#define MEP_ITST_FWD_CTRL_NXT_LOC_CPU_HITME_M    GENMASK(4, 4)
#define MEP_ITST_FWD_CTRL_NXT_LOC_CPU_HITME_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define MEP_ITST_FWD_CTRL_REM_FWD_SEL(x)         (((x) << 2) & GENMASK(3, 2))
#define MEP_ITST_FWD_CTRL_REM_FWD_SEL_M          GENMASK(3, 2)
#define MEP_ITST_FWD_CTRL_REM_FWD_SEL_X(x)       (((x) & GENMASK(3, 2)) >> 2)

#define MEP_ITST_FWD_CTRL_OWN_FWD_SEL(x)         ((x) & GENMASK(1, 0))
#define MEP_ITST_FWD_CTRL_OWN_FWD_SEL_M          GENMASK(1, 0)
#define MEP_ITST_FWD_CTRL_OWN_FWD_SEL_X(x)       ((x) & GENMASK(1, 0))

/*      MEP:MRP:ITST_CFG */
#define MEP_ITST_CFG(g)           __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 32, 0, 1, 4)

#define MEP_ITST_CFG_ITST_CLR_MISS_CNT_ENA(x)    (((x) << 12) & GENMASK(12, 12))
#define MEP_ITST_CFG_ITST_CLR_MISS_CNT_ENA_M     GENMASK(12, 12)
#define MEP_ITST_CFG_ITST_CLR_MISS_CNT_ENA_X(x)  (((x) & GENMASK(12, 12)) >> 12)

#define MEP_ITST_CFG_ITST_MAX_MISS_CNT(x)        (((x) << 8) & GENMASK(11, 8))
#define MEP_ITST_CFG_ITST_MAX_MISS_CNT_M         GENMASK(11, 8)
#define MEP_ITST_CFG_ITST_MAX_MISS_CNT_X(x)      (((x) & GENMASK(11, 8)) >> 8)

#define MEP_ITST_CFG_ITST_MISS_CNT(x)            (((x) << 4) & GENMASK(7, 4))
#define MEP_ITST_CFG_ITST_MISS_CNT_M             GENMASK(7, 4)
#define MEP_ITST_CFG_ITST_MISS_CNT_X(x)          (((x) & GENMASK(7, 4)) >> 4)

#define MEP_ITST_CFG_ITST_LOC_PERIOD(x)          ((x) & GENMASK(3, 0))
#define MEP_ITST_CFG_ITST_LOC_PERIOD_M           GENMASK(3, 0)
#define MEP_ITST_CFG_ITST_LOC_PERIOD_X(x)        ((x) & GENMASK(3, 0))

/*      MEP:MRP:MRP_MAC_LSB */
#define MEP_MRP_MAC_LSB(g)        __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 40, 0, 1, 4)

/*      MEP:MRP:MRP_MAC_MSB */
#define MEP_MRP_MAC_MSB(g)        __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 44, 0, 1, 4)

#define MEP_MRP_MAC_MSB_MRP_MAC_MSB(x)           ((x) & GENMASK(15, 0))
#define MEP_MRP_MAC_MSB_MRP_MAC_MSB_M            GENMASK(15, 0)
#define MEP_MRP_MAC_MSB_MRP_MAC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      MEP:MRP:BEST_MAC_LSB */
#define MEP_BEST_MAC_LSB(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 48, 0, 1, 4)

/*      MEP:MRP:BEST_MAC_MSB */
#define MEP_BEST_MAC_MSB(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 52, 0, 1, 4)

#define MEP_BEST_MAC_MSB_BEST_MAC_MSB(x)         ((x) & GENMASK(15, 0))
#define MEP_BEST_MAC_MSB_BEST_MAC_MSB_M          GENMASK(15, 0)
#define MEP_BEST_MAC_MSB_BEST_MAC_MSB_X(x)       ((x) & GENMASK(15, 0))

/*      MEP:MRP:MRP_STICKY */
#define MEP_MRP_STICKY(g)         __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 96, 0, 1, 4)

#define MEP_MRP_STICKY_MRP_RX_STICKY(x)          (((x) << 6) & GENMASK(6, 6))
#define MEP_MRP_STICKY_MRP_RX_STICKY_M           GENMASK(6, 6)
#define MEP_MRP_STICKY_MRP_RX_STICKY_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define MEP_MRP_STICKY_MRP_RX_PROC_STICKY(x)     (((x) << 5) & GENMASK(5, 5))
#define MEP_MRP_STICKY_MRP_RX_PROC_STICKY_M      GENMASK(5, 5)
#define MEP_MRP_STICKY_MRP_RX_PROC_STICKY_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define MEP_MRP_STICKY_DMAC_ERR_STICKY(x)        (((x) << 4) & GENMASK(4, 4))
#define MEP_MRP_STICKY_DMAC_ERR_STICKY_M         GENMASK(4, 4)
#define MEP_MRP_STICKY_DMAC_ERR_STICKY_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define MEP_MRP_STICKY_VERSION_ERR_STICKY(x)     (((x) << 3) & GENMASK(3, 3))
#define MEP_MRP_STICKY_VERSION_ERR_STICKY_M      GENMASK(3, 3)
#define MEP_MRP_STICKY_VERSION_ERR_STICKY_X(x)   (((x) & GENMASK(3, 3)) >> 3)

#define MEP_MRP_STICKY_RX_SEQ_ERR_STICKY(x)      (((x) << 2) & GENMASK(2, 2))
#define MEP_MRP_STICKY_RX_SEQ_ERR_STICKY_M       GENMASK(2, 2)
#define MEP_MRP_STICKY_RX_SEQ_ERR_STICKY_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define MEP_MRP_STICKY_ITST_LOC_STICKY(x)        (((x) << 1) & GENMASK(1, 1))
#define MEP_MRP_STICKY_ITST_LOC_STICKY_M         GENMASK(1, 1)
#define MEP_MRP_STICKY_ITST_LOC_STICKY_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MRP_STICKY_TST_LOC_STICKY(x)         ((x) & GENMASK(0, 0))
#define MEP_MRP_STICKY_TST_LOC_STICKY_M          GENMASK(0, 0)
#define MEP_MRP_STICKY_TST_LOC_STICKY_X(x)       ((x) & GENMASK(0, 0))

/*      MEP:MRP:MRP_INTR_ENA */
#define MEP_MRP_INTR_ENA(g)       __REG(TARGET_MEP,\
					0, 1, 1024, g, 8, 128, 100, 0, 1, 4)

#define MEP_MRP_INTR_ENA_ITST_LOC_INTR_ENA(x)    (((x) << 1) & GENMASK(1, 1))
#define MEP_MRP_INTR_ENA_ITST_LOC_INTR_ENA_M     GENMASK(1, 1)
#define MEP_MRP_INTR_ENA_ITST_LOC_INTR_ENA_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define MEP_MRP_INTR_ENA_TST_LOC_INTR_ENA(x)     ((x) & GENMASK(0, 0))
#define MEP_MRP_INTR_ENA_TST_LOC_INTR_ENA_M      GENMASK(0, 0)
#define MEP_MRP_INTR_ENA_TST_LOC_INTR_ENA_X(x)   ((x) & GENMASK(0, 0))

/*      ORG:ORG:SEMA_CFG */
#define ORG_SEMA_CFG(t)           __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 36, 0, 1, 4)

#define ORG_SEMA_CFG_SEMA_INTR_POL(x)            ((x) & GENMASK(7, 0))
#define ORG_SEMA_CFG_SEMA_INTR_POL_M             GENMASK(7, 0)
#define ORG_SEMA_CFG_SEMA_INTR_POL_X(x)          ((x) & GENMASK(7, 0))

/*      ORG:ORG:SEMA */
#define ORG_SEMA(t, r)            __REG(TARGET_ORG,\
					t, 2, 0, 0, 1, 72, 40, r, 8, 4)

#define ORG_SEMA_SEMA(x)                         ((x) & GENMASK(0, 0))
#define ORG_SEMA_SEMA_M                          GENMASK(0, 0)
#define ORG_SEMA_SEMA_X(x)                       ((x) & GENMASK(0, 0))

/*      PTP:PTP_CFG:PIN_INTR */
#define PTP_PIN_INTR              __REG(TARGET_PTP,\
					0, 1, 512, 0, 1, 16, 0, 0, 1, 4)

#define PTP_PIN_INTR_INTR_PTP(x)                 ((x) & GENMASK(7, 0))
#define PTP_PIN_INTR_INTR_PTP_M                  GENMASK(7, 0)
#define PTP_PIN_INTR_INTR_PTP_X(x)               ((x) & GENMASK(7, 0))

/*      PTP:PTP_CFG:PIN_INTR_ENA */
#define PTP_PIN_INTR_ENA          __REG(TARGET_PTP,\
					0, 1, 512, 0, 1, 16, 4, 0, 1, 4)

#define PTP_PIN_INTR_ENA_INTR_ENA(x)             ((x) & GENMASK(7, 0))
#define PTP_PIN_INTR_ENA_INTR_ENA_M              GENMASK(7, 0)
#define PTP_PIN_INTR_ENA_INTR_ENA_X(x)           ((x) & GENMASK(7, 0))

/*      PTP:PTP_CFG:DOM_CFG */
#define PTP_DOM_CFG               __REG(TARGET_PTP,\
					0, 1, 512, 0, 1, 16, 12, 0, 1, 4)

#define PTP_DOM_CFG_ENA(x)                       (((x) << 9) & GENMASK(11, 9))
#define PTP_DOM_CFG_ENA_M                        GENMASK(11, 9)
#define PTP_DOM_CFG_ENA_X(x)                     (((x) & GENMASK(11, 9)) >> 9)

#define PTP_DOM_CFG_HOLD(x)                      (((x) << 6) & GENMASK(8, 6))
#define PTP_DOM_CFG_HOLD_M                       GENMASK(8, 6)
#define PTP_DOM_CFG_HOLD_X(x)                    (((x) & GENMASK(8, 6)) >> 6)

#define PTP_DOM_CFG_TOD_FREEZE(x)                (((x) << 3) & GENMASK(5, 3))
#define PTP_DOM_CFG_TOD_FREEZE_M                 GENMASK(5, 3)
#define PTP_DOM_CFG_TOD_FREEZE_X(x)              (((x) & GENMASK(5, 3)) >> 3)

#define PTP_DOM_CFG_CLKCFG_DIS(x)                ((x) & GENMASK(2, 0))
#define PTP_DOM_CFG_CLKCFG_DIS_M                 GENMASK(2, 0)
#define PTP_DOM_CFG_CLKCFG_DIS_X(x)              ((x) & GENMASK(2, 0))

/*      PTP:PTP_TOD_DOMAINS:CLK_PER_CFG */
#define PTP_CLK_PER_CFG(g, r)     __REG(TARGET_PTP,\
					0, 1, 528, g, 3, 28, 0, r, 2, 4)

/*      PTP:PTP_PINS:PIN_CFG */
#define PTP_PIN_CFG(g)            __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 0, 0, 1, 4)

#define PTP_PIN_CFG_PIN_ACTION(x)                (((x) << 27) & GENMASK(29, 27))
#define PTP_PIN_CFG_PIN_ACTION_M                 GENMASK(29, 27)
#define PTP_PIN_CFG_PIN_ACTION_X(x)              (((x) & GENMASK(29, 27)) >> 27)

#define PTP_PIN_CFG_PIN_SYNC(x)                  (((x) << 25) & GENMASK(26, 25))
#define PTP_PIN_CFG_PIN_SYNC_M                   GENMASK(26, 25)
#define PTP_PIN_CFG_PIN_SYNC_X(x)                (((x) & GENMASK(26, 25)) >> 25)

#define PTP_PIN_CFG_PIN_INV_POL(x)               (((x) << 24) & GENMASK(24, 24))
#define PTP_PIN_CFG_PIN_INV_POL_M                GENMASK(24, 24)
#define PTP_PIN_CFG_PIN_INV_POL_X(x)             (((x) & GENMASK(24, 24)) >> 24)

#define PTP_PIN_CFG_PIN_SELECT(x)                (((x) << 21) & GENMASK(23, 21))
#define PTP_PIN_CFG_PIN_SELECT_M                 GENMASK(23, 21)
#define PTP_PIN_CFG_PIN_SELECT_X(x)              (((x) & GENMASK(23, 21)) >> 21)

#define PTP_PIN_CFG_CLK_SELECT(x)                (((x) << 18) & GENMASK(20, 18))
#define PTP_PIN_CFG_CLK_SELECT_M                 GENMASK(20, 18)
#define PTP_PIN_CFG_CLK_SELECT_X(x)              (((x) & GENMASK(20, 18)) >> 18)

#define PTP_PIN_CFG_PIN_DOM(x)                   (((x) << 16) & GENMASK(17, 16))
#define PTP_PIN_CFG_PIN_DOM_M                    GENMASK(17, 16)
#define PTP_PIN_CFG_PIN_DOM_X(x)                 (((x) & GENMASK(17, 16)) >> 16)

#define PTP_PIN_CFG_PIN_OPT(x)                   (((x) << 14) & GENMASK(15, 14))
#define PTP_PIN_CFG_PIN_OPT_M                    GENMASK(15, 14)
#define PTP_PIN_CFG_PIN_OPT_X(x)                 (((x) & GENMASK(15, 14)) >> 14)

#define PTP_PIN_CFG_PIN_EMBEDDED_CLK(x)          (((x) << 13) & GENMASK(13, 13))
#define PTP_PIN_CFG_PIN_EMBEDDED_CLK_M           GENMASK(13, 13)
#define PTP_PIN_CFG_PIN_EMBEDDED_CLK_X(x)        (((x) & GENMASK(13, 13)) >> 13)

#define PTP_PIN_CFG_PIN_OUTP_OFS(x)              ((x) & GENMASK(12, 0))
#define PTP_PIN_CFG_PIN_OUTP_OFS_M               GENMASK(12, 0)
#define PTP_PIN_CFG_PIN_OUTP_OFS_X(x)            ((x) & GENMASK(12, 0))

/*      PTP:PTP_PINS:TOD_SEC_MSB */
#define PTP_TOD_SEC_MSB(g)        __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 4, 0, 1, 4)

#define PTP_TOD_SEC_MSB_TOD_SEC_MSB(x)           ((x) & GENMASK(15, 0))
#define PTP_TOD_SEC_MSB_TOD_SEC_MSB_M            GENMASK(15, 0)
#define PTP_TOD_SEC_MSB_TOD_SEC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      PTP:PTP_PINS:TOD_SEC_LSB */
#define PTP_TOD_SEC_LSB(g)        __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 8, 0, 1, 4)

/*      PTP:PTP_PINS:TOD_NSEC */
#define PTP_TOD_NSEC(g)           __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 12, 0, 1, 4)

#define PTP_TOD_NSEC_TOD_NSEC(x)                 ((x) & GENMASK(29, 0))
#define PTP_TOD_NSEC_TOD_NSEC_M                  GENMASK(29, 0)
#define PTP_TOD_NSEC_TOD_NSEC_X(x)               ((x) & GENMASK(29, 0))

/*      PTP:PTP_PINS:TOD_NSEC_FRAC */
#define PTP_TOD_NSEC_FRAC(g)      __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 16, 0, 1, 4)

#define PTP_TOD_NSEC_FRAC_TOD_NSEC_FRAC(x)       ((x) & GENMASK(7, 0))
#define PTP_TOD_NSEC_FRAC_TOD_NSEC_FRAC_M        GENMASK(7, 0)
#define PTP_TOD_NSEC_FRAC_TOD_NSEC_FRAC_X(x)     ((x) & GENMASK(7, 0))

/*      PTP:PTP_PINS:WF_HIGH_PERIOD */
#define PTP_WF_HIGH_PERIOD(g)     __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 24, 0, 1, 4)

#define PTP_WF_HIGH_PERIOD_PIN_WFH(x)            ((x) & GENMASK(29, 0))
#define PTP_WF_HIGH_PERIOD_PIN_WFH_M             GENMASK(29, 0)
#define PTP_WF_HIGH_PERIOD_PIN_WFH_X(x)          ((x) & GENMASK(29, 0))

/*      PTP:PTP_PINS:WF_LOW_PERIOD */
#define PTP_WF_LOW_PERIOD(g)      __REG(TARGET_PTP,\
					0, 1, 0, g, 8, 64, 28, 0, 1, 4)

#define PTP_WF_LOW_PERIOD_PIN_WFL(x)             ((x) & GENMASK(29, 0))
#define PTP_WF_LOW_PERIOD_PIN_WFL_M              GENMASK(29, 0)
#define PTP_WF_LOW_PERIOD_PIN_WFL_X(x)           ((x) & GENMASK(29, 0))

/*      PTP:PTP_TS_FIFO:TWOSTEP_CTRL */
#define PTP_TWOSTEP_CTRL          __REG(TARGET_PTP,\
					0, 1, 612, 0, 1, 12, 0, 0, 1, 4)

#define PTP_TWOSTEP_CTRL_OVWR_ENA(x)             (((x) << 12) & GENMASK(12, 12))
#define PTP_TWOSTEP_CTRL_OVWR_ENA_M              GENMASK(12, 12)
#define PTP_TWOSTEP_CTRL_OVWR_ENA_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define PTP_TWOSTEP_CTRL_NXT(x)                  (((x) << 11) & GENMASK(11, 11))
#define PTP_TWOSTEP_CTRL_NXT_M                   GENMASK(11, 11)
#define PTP_TWOSTEP_CTRL_NXT_X(x)                (((x) & GENMASK(11, 11)) >> 11)

#define PTP_TWOSTEP_CTRL_VLD(x)                  (((x) << 10) & GENMASK(10, 10))
#define PTP_TWOSTEP_CTRL_VLD_M                   GENMASK(10, 10)
#define PTP_TWOSTEP_CTRL_VLD_X(x)                (((x) & GENMASK(10, 10)) >> 10)

#define PTP_TWOSTEP_CTRL_STAMP_TX(x)             (((x) << 9) & GENMASK(9, 9))
#define PTP_TWOSTEP_CTRL_STAMP_TX_M              GENMASK(9, 9)
#define PTP_TWOSTEP_CTRL_STAMP_TX_X(x)           (((x) & GENMASK(9, 9)) >> 9)

#define PTP_TWOSTEP_CTRL_STAMP_PORT(x)           (((x) << 1) & GENMASK(8, 1))
#define PTP_TWOSTEP_CTRL_STAMP_PORT_M            GENMASK(8, 1)
#define PTP_TWOSTEP_CTRL_STAMP_PORT_X(x)         (((x) & GENMASK(8, 1)) >> 1)

#define PTP_TWOSTEP_CTRL_OVFL(x)                 ((x) & GENMASK(0, 0))
#define PTP_TWOSTEP_CTRL_OVFL_M                  GENMASK(0, 0)
#define PTP_TWOSTEP_CTRL_OVFL_X(x)               ((x) & GENMASK(0, 0))

/*      PTP:PTP_TS_FIFO:TWOSTEP_STAMP */
#define PTP_TWOSTEP_STAMP         __REG(TARGET_PTP,\
					0, 1, 612, 0, 1, 12, 4, 0, 1, 4)

#define PTP_TWOSTEP_STAMP_STAMP_NSEC(x)          (((x) << 2) & GENMASK(31, 2))
#define PTP_TWOSTEP_STAMP_STAMP_NSEC_M           GENMASK(31, 2)
#define PTP_TWOSTEP_STAMP_STAMP_NSEC_X(x)        (((x) & GENMASK(31, 2)) >> 2)

#define PTP_TWOSTEP_STAMP_STAMP_SUB_NSEC(x)      ((x) & GENMASK(1, 0))
#define PTP_TWOSTEP_STAMP_STAMP_SUB_NSEC_M       GENMASK(1, 0)
#define PTP_TWOSTEP_STAMP_STAMP_SUB_NSEC_X(x)    ((x) & GENMASK(1, 0))

/*      QS:XTR:XTR_GRP_CFG */
#define QS_XTR_GRP_CFG(r)         __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 0, r, 2, 4)

#define QS_XTR_GRP_CFG_MODE(x)                   (((x) << 2) & GENMASK(3, 2))
#define QS_XTR_GRP_CFG_MODE_M                    GENMASK(3, 2)
#define QS_XTR_GRP_CFG_MODE_X(x)                 (((x) & GENMASK(3, 2)) >> 2)

#define QS_XTR_GRP_CFG_STATUS_WORD_POS(x)        (((x) << 1) & GENMASK(1, 1))
#define QS_XTR_GRP_CFG_STATUS_WORD_POS_M         GENMASK(1, 1)
#define QS_XTR_GRP_CFG_STATUS_WORD_POS_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define QS_XTR_GRP_CFG_BYTE_SWAP(x)              ((x) & GENMASK(0, 0))
#define QS_XTR_GRP_CFG_BYTE_SWAP_M               GENMASK(0, 0)
#define QS_XTR_GRP_CFG_BYTE_SWAP_X(x)            ((x) & GENMASK(0, 0))

/*      QS:XTR:XTR_RD */
#define QS_XTR_RD(r)              __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 8, r, 2, 4)

/*      QS:XTR:XTR_FLUSH */
#define QS_XTR_FLUSH              __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 24, 0, 1, 4)

#define QS_XTR_FLUSH_FLUSH(x)                    ((x) & GENMASK(1, 0))
#define QS_XTR_FLUSH_FLUSH_M                     GENMASK(1, 0)
#define QS_XTR_FLUSH_FLUSH_X(x)                  ((x) & GENMASK(1, 0))

/*      QS:XTR:XTR_DATA_PRESENT */
#define QS_XTR_DATA_PRESENT       __REG(TARGET_QS,\
					0, 1, 0, 0, 1, 36, 28, 0, 1, 4)

#define QS_XTR_DATA_PRESENT_DATA_PRESENT(x)      ((x) & GENMASK(1, 0))
#define QS_XTR_DATA_PRESENT_DATA_PRESENT_M       GENMASK(1, 0)
#define QS_XTR_DATA_PRESENT_DATA_PRESENT_X(x)    ((x) & GENMASK(1, 0))

/*      QS:INJ:INJ_GRP_CFG */
#define QS_INJ_GRP_CFG(r)         __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 0, r, 2, 4)

#define QS_INJ_GRP_CFG_MODE(x)                   (((x) << 2) & GENMASK(3, 2))
#define QS_INJ_GRP_CFG_MODE_M                    GENMASK(3, 2)
#define QS_INJ_GRP_CFG_MODE_X(x)                 (((x) & GENMASK(3, 2)) >> 2)

#define QS_INJ_GRP_CFG_BYTE_SWAP(x)              ((x) & GENMASK(0, 0))
#define QS_INJ_GRP_CFG_BYTE_SWAP_M               GENMASK(0, 0)
#define QS_INJ_GRP_CFG_BYTE_SWAP_X(x)            ((x) & GENMASK(0, 0))

/*      QS:INJ:INJ_WR */
#define QS_INJ_WR(r)              __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 8, r, 2, 4)

/*      QS:INJ:INJ_CTRL */
#define QS_INJ_CTRL(r)            __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 16, r, 2, 4)

#define QS_INJ_CTRL_GAP_SIZE(x)                  (((x) << 21) & GENMASK(24, 21))
#define QS_INJ_CTRL_GAP_SIZE_M                   GENMASK(24, 21)
#define QS_INJ_CTRL_GAP_SIZE_X(x)                (((x) & GENMASK(24, 21)) >> 21)

#define QS_INJ_CTRL_ABORT(x)                     (((x) << 20) & GENMASK(20, 20))
#define QS_INJ_CTRL_ABORT_M                      GENMASK(20, 20)
#define QS_INJ_CTRL_ABORT_X(x)                   (((x) & GENMASK(20, 20)) >> 20)

#define QS_INJ_CTRL_EOF(x)                       (((x) << 19) & GENMASK(19, 19))
#define QS_INJ_CTRL_EOF_M                        GENMASK(19, 19)
#define QS_INJ_CTRL_EOF_X(x)                     (((x) & GENMASK(19, 19)) >> 19)

#define QS_INJ_CTRL_SOF(x)                       (((x) << 18) & GENMASK(18, 18))
#define QS_INJ_CTRL_SOF_M                        GENMASK(18, 18)
#define QS_INJ_CTRL_SOF_X(x)                     (((x) & GENMASK(18, 18)) >> 18)

#define QS_INJ_CTRL_VLD_BYTES(x)                 (((x) << 16) & GENMASK(17, 16))
#define QS_INJ_CTRL_VLD_BYTES_M                  GENMASK(17, 16)
#define QS_INJ_CTRL_VLD_BYTES_X(x)               (((x) & GENMASK(17, 16)) >> 16)

/*      QS:INJ:INJ_STATUS */
#define QS_INJ_STATUS             __REG(TARGET_QS,\
					0, 1, 36, 0, 1, 40, 24, 0, 1, 4)

#define QS_INJ_STATUS_WMARK_REACHED(x)           (((x) << 4) & GENMASK(5, 4))
#define QS_INJ_STATUS_WMARK_REACHED_M            GENMASK(5, 4)
#define QS_INJ_STATUS_WMARK_REACHED_X(x)         (((x) & GENMASK(5, 4)) >> 4)

#define QS_INJ_STATUS_FIFO_RDY(x)                (((x) << 2) & GENMASK(3, 2))
#define QS_INJ_STATUS_FIFO_RDY_M                 GENMASK(3, 2)
#define QS_INJ_STATUS_FIFO_RDY_X(x)              (((x) & GENMASK(3, 2)) >> 2)

#define QS_INJ_STATUS_INJ_IN_PROGRESS(x)         ((x) & GENMASK(1, 0))
#define QS_INJ_STATUS_INJ_IN_PROGRESS_M          GENMASK(1, 0)
#define QS_INJ_STATUS_INJ_IN_PROGRESS_X(x)       ((x) & GENMASK(1, 0))

/*      QSYS:SYSTEM:PORT_MODE */
#define QSYS_PORT_MODE(r)         __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 0, r, 10, 4)

#define QSYS_PORT_MODE_DEQUEUE_DIS(x)            (((x) << 1) & GENMASK(1, 1))
#define QSYS_PORT_MODE_DEQUEUE_DIS_M             GENMASK(1, 1)
#define QSYS_PORT_MODE_DEQUEUE_DIS_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_PORT_MODE_DEQUEUE_LATE(x)           ((x) & GENMASK(0, 0))
#define QSYS_PORT_MODE_DEQUEUE_LATE_M            GENMASK(0, 0)
#define QSYS_PORT_MODE_DEQUEUE_LATE_X(x)         ((x) & GENMASK(0, 0))

/*      QSYS:SYSTEM:SW_PORT_MODE */
#define QSYS_SW_PORT_MODE(r)      __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 80, r, 9, 4)

#define QSYS_SW_PORT_MODE_PORT_ENA(x)            (((x) << 18) & GENMASK(18, 18))
#define QSYS_SW_PORT_MODE_PORT_ENA_M             GENMASK(18, 18)
#define QSYS_SW_PORT_MODE_PORT_ENA_X(x)          (((x) & GENMASK(18, 18)) >> 18)

#define QSYS_SW_PORT_MODE_IDEQ_DIS(x)            (((x) << 17) & GENMASK(17, 17))
#define QSYS_SW_PORT_MODE_IDEQ_DIS_M             GENMASK(17, 17)
#define QSYS_SW_PORT_MODE_IDEQ_DIS_X(x)          (((x) & GENMASK(17, 17)) >> 17)

#define QSYS_SW_PORT_MODE_SCH_NEXT_CFG(x)        (((x) << 14) & GENMASK(16, 14))
#define QSYS_SW_PORT_MODE_SCH_NEXT_CFG_M         GENMASK(16, 14)
#define QSYS_SW_PORT_MODE_SCH_NEXT_CFG_X(x)      (((x) & GENMASK(16, 14)) >> 14)

#define QSYS_SW_PORT_MODE_YEL_RSRVD(x)           (((x) << 13) & GENMASK(13, 13))
#define QSYS_SW_PORT_MODE_YEL_RSRVD_M            GENMASK(13, 13)
#define QSYS_SW_PORT_MODE_YEL_RSRVD_X(x)         (((x) & GENMASK(13, 13)) >> 13)

#define QSYS_SW_PORT_MODE_INGRESS_DROP_MODE(x)   (((x) << 12) & GENMASK(12, 12))
#define QSYS_SW_PORT_MODE_INGRESS_DROP_MODE_M    GENMASK(12, 12)
#define QSYS_SW_PORT_MODE_INGRESS_DROP_MODE_X(x) (((x) & GENMASK(12, 12)) >> 12)

#define QSYS_SW_PORT_MODE_TX_PFC_ENA(x)          (((x) << 4) & GENMASK(11, 4))
#define QSYS_SW_PORT_MODE_TX_PFC_ENA_M           GENMASK(11, 4)
#define QSYS_SW_PORT_MODE_TX_PFC_ENA_X(x)        (((x) & GENMASK(11, 4)) >> 4)

#define QSYS_SW_PORT_MODE_TX_PFC_MODE(x)         (((x) << 3) & GENMASK(3, 3))
#define QSYS_SW_PORT_MODE_TX_PFC_MODE_M          GENMASK(3, 3)
#define QSYS_SW_PORT_MODE_TX_PFC_MODE_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define QSYS_SW_PORT_MODE_FWD_TWOCYCLE_MODE(x)   (((x) << 2) & GENMASK(2, 2))
#define QSYS_SW_PORT_MODE_FWD_TWOCYCLE_MODE_M    GENMASK(2, 2)
#define QSYS_SW_PORT_MODE_FWD_TWOCYCLE_MODE_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define QSYS_SW_PORT_MODE_AGING_MODE(x)          ((x) & GENMASK(1, 0))
#define QSYS_SW_PORT_MODE_AGING_MODE_M           GENMASK(1, 0)
#define QSYS_SW_PORT_MODE_AGING_MODE_X(x)        ((x) & GENMASK(1, 0))

/*      QSYS:SYSTEM:EGR_NO_SHARING */
#define QSYS_EGR_NO_SHARING       __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 160, 0, 1, 4)

#define QSYS_EGR_NO_SHARING_EGR_NO_SHARING(x)    ((x) & GENMASK(8, 0))
#define QSYS_EGR_NO_SHARING_EGR_NO_SHARING_M     GENMASK(8, 0)
#define QSYS_EGR_NO_SHARING_EGR_NO_SHARING_X(x)  ((x) & GENMASK(8, 0))

/*      QSYS:SYSTEM:SW_STATUS */
#define QSYS_SW_STATUS(r)         __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 164, r, 9, 4)

#define QSYS_SW_STATUS_EQ_AVAIL(x)               ((x) & GENMASK(7, 0))
#define QSYS_SW_STATUS_EQ_AVAIL_M                GENMASK(7, 0)
#define QSYS_SW_STATUS_EQ_AVAIL_X(x)             ((x) & GENMASK(7, 0))

/*      QSYS:SYSTEM:CPU_GROUP_MAP */
#define QSYS_CPU_GROUP_MAP        __REG(TARGET_QSYS,\
					0, 1, 28008, 0, 1, 216, 204, 0, 1, 4)

#define QSYS_CPU_GROUP_MAP_CPU_GROUP_MAP(x)      ((x) & GENMASK(7, 0))
#define QSYS_CPU_GROUP_MAP_CPU_GROUP_MAP_M       GENMASK(7, 0)
#define QSYS_CPU_GROUP_MAP_CPU_GROUP_MAP_X(x)    ((x) & GENMASK(7, 0))

/*      QSYS:RES_CTRL:RES_CFG */
#define QSYS_RES_CFG(g)           __REG(TARGET_QSYS,\
					0, 1, 32768, g, 1024, 8, 0, 0, 1, 4)

#define QSYS_RES_CFG_WM_HIGH(x)                  ((x) & GENMASK(8, 0))
#define QSYS_RES_CFG_WM_HIGH_M                   GENMASK(8, 0)
#define QSYS_RES_CFG_WM_HIGH_X(x)                ((x) & GENMASK(8, 0))

/*      QSYS:RES_CTRL:RES_STAT */
#define QSYS_RES_STAT(g)          __REG(TARGET_QSYS,\
					0, 1, 32768, g, 1024, 8, 4, 0, 1, 4)

#define QSYS_RES_STAT_INUSE(x)                   (((x) << 12) & GENMASK(23, 12))
#define QSYS_RES_STAT_INUSE_M                    GENMASK(23, 12)
#define QSYS_RES_STAT_INUSE_X(x)                 (((x) & GENMASK(23, 12)) >> 12)

#define QSYS_RES_STAT_MAXUSE(x)                  ((x) & GENMASK(11, 0))
#define QSYS_RES_STAT_MAXUSE_M                   GENMASK(11, 0)
#define QSYS_RES_STAT_MAXUSE_X(x)                ((x) & GENMASK(11, 0))

/*      QSYS:DROP_CFG:MISC_DROP_CFG */
#define QSYS_MISC_DROP_CFG        __REG(TARGET_QSYS,\
					0, 1, 28332, 0, 1, 8, 4, 0, 1, 4)

#define QSYS_MISC_DROP_CFG_FRER_ENA(x)           ((x) & GENMASK(0, 0))
#define QSYS_MISC_DROP_CFG_FRER_ENA_M            GENMASK(0, 0)
#define QSYS_MISC_DROP_CFG_FRER_ENA_X(x)         ((x) & GENMASK(0, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_0 */
#define QSYS_QMAXSDU_CFG_0(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 0, r, 9, 4)

#define QSYS_QMAXSDU_CFG_0_QMAXSDU_0(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_0_QMAXSDU_0_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_0_QMAXSDU_0_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_1 */
#define QSYS_QMAXSDU_CFG_1(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 36, r, 9, 4)

#define QSYS_QMAXSDU_CFG_1_QMAXSDU_1(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_1_QMAXSDU_1_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_1_QMAXSDU_1_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_2 */
#define QSYS_QMAXSDU_CFG_2(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 72, r, 9, 4)

#define QSYS_QMAXSDU_CFG_2_QMAXSDU_2(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_2_QMAXSDU_2_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_2_QMAXSDU_2_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_3 */
#define QSYS_QMAXSDU_CFG_3(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 108, r, 9, 4)

#define QSYS_QMAXSDU_CFG_3_QMAXSDU_3(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_3_QMAXSDU_3_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_3_QMAXSDU_3_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_4 */
#define QSYS_QMAXSDU_CFG_4(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 144, r, 9, 4)

#define QSYS_QMAXSDU_CFG_4_QMAXSDU_4(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_4_QMAXSDU_4_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_4_QMAXSDU_4_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_5 */
#define QSYS_QMAXSDU_CFG_5(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 180, r, 9, 4)

#define QSYS_QMAXSDU_CFG_5_QMAXSDU_5(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_5_QMAXSDU_5_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_5_QMAXSDU_5_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_6 */
#define QSYS_QMAXSDU_CFG_6(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 216, r, 9, 4)

#define QSYS_QMAXSDU_CFG_6_QMAXSDU_6(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_6_QMAXSDU_6_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_6_QMAXSDU_6_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:Q_MAX_SDU:QMAXSDU_CFG_7 */
#define QSYS_QMAXSDU_CFG_7(r)     __REG(TARGET_QSYS,\
					0, 1, 28348, 0, 1, 288, 252, r, 9, 4)

#define QSYS_QMAXSDU_CFG_7_QMAXSDU_7(x)          ((x) & GENMASK(15, 0))
#define QSYS_QMAXSDU_CFG_7_QMAXSDU_7_M           GENMASK(15, 0)
#define QSYS_QMAXSDU_CFG_7_QMAXSDU_7_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:PREEMPTION:PREEMPT_CFG */
#define QSYS_PREEMPT_CFG(r)       __REG(TARGET_QSYS,\
					0, 1, 28636, 0, 1, 32, 0, r, 8, 4)

#define QSYS_PREEMPT_CFG_STRICT_IPG(x)           (((x) << 12) & GENMASK(13, 12))
#define QSYS_PREEMPT_CFG_STRICT_IPG_M            GENMASK(13, 12)
#define QSYS_PREEMPT_CFG_STRICT_IPG_X(x)         (((x) & GENMASK(13, 12)) >> 12)

#define QSYS_PREEMPT_CFG_P_QUEUES(x)             ((x) & GENMASK(7, 0))
#define QSYS_PREEMPT_CFG_P_QUEUES_M              GENMASK(7, 0)
#define QSYS_PREEMPT_CFG_P_QUEUES_X(x)           ((x) & GENMASK(7, 0))

/*      QSYS:HSCH:CIR_CFG */
#define QSYS_CIR_CFG(g)           __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 0, 0, 1, 4)

#define QSYS_CIR_CFG_CIR_RATE(x)                 (((x) << 6) & GENMASK(20, 6))
#define QSYS_CIR_CFG_CIR_RATE_M                  GENMASK(20, 6)
#define QSYS_CIR_CFG_CIR_RATE_X(x)               (((x) & GENMASK(20, 6)) >> 6)

#define QSYS_CIR_CFG_CIR_BURST(x)                ((x) & GENMASK(5, 0))
#define QSYS_CIR_CFG_CIR_BURST_M                 GENMASK(5, 0)
#define QSYS_CIR_CFG_CIR_BURST_X(x)              ((x) & GENMASK(5, 0))

/*      QSYS:HSCH:EIR_CFG */
#define QSYS_EIR_CFG(g)           __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 4, 0, 1, 4)

#define QSYS_EIR_CFG_EIR_RATE(x)                 (((x) << 7) & GENMASK(21, 7))
#define QSYS_EIR_CFG_EIR_RATE_M                  GENMASK(21, 7)
#define QSYS_EIR_CFG_EIR_RATE_X(x)               (((x) & GENMASK(21, 7)) >> 7)

#define QSYS_EIR_CFG_EIR_BURST(x)                (((x) << 1) & GENMASK(6, 1))
#define QSYS_EIR_CFG_EIR_BURST_M                 GENMASK(6, 1)
#define QSYS_EIR_CFG_EIR_BURST_X(x)              (((x) & GENMASK(6, 1)) >> 1)

#define QSYS_EIR_CFG_EIR_MARK_ENA(x)             ((x) & GENMASK(0, 0))
#define QSYS_EIR_CFG_EIR_MARK_ENA_M              GENMASK(0, 0)
#define QSYS_EIR_CFG_EIR_MARK_ENA_X(x)           ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:SE_CFG */
#define QSYS_SE_CFG(g)            __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 8, 0, 1, 4)

#define QSYS_SE_CFG_SE_DWRR_CNT(x)               (((x) << 6) & GENMASK(9, 6))
#define QSYS_SE_CFG_SE_DWRR_CNT_M                GENMASK(9, 6)
#define QSYS_SE_CFG_SE_DWRR_CNT_X(x)             (((x) & GENMASK(9, 6)) >> 6)

#define QSYS_SE_CFG_SE_RR_ENA(x)                 (((x) << 5) & GENMASK(5, 5))
#define QSYS_SE_CFG_SE_RR_ENA_M                  GENMASK(5, 5)
#define QSYS_SE_CFG_SE_RR_ENA_X(x)               (((x) & GENMASK(5, 5)) >> 5)

#define QSYS_SE_CFG_SE_AVB_ENA(x)                (((x) << 4) & GENMASK(4, 4))
#define QSYS_SE_CFG_SE_AVB_ENA_M                 GENMASK(4, 4)
#define QSYS_SE_CFG_SE_AVB_ENA_X(x)              (((x) & GENMASK(4, 4)) >> 4)

#define QSYS_SE_CFG_SE_FRM_MODE(x)               (((x) << 2) & GENMASK(3, 2))
#define QSYS_SE_CFG_SE_FRM_MODE_M                GENMASK(3, 2)
#define QSYS_SE_CFG_SE_FRM_MODE_X(x)             (((x) & GENMASK(3, 2)) >> 2)

#define QSYS_SE_CFG_SE_EXC_ENA(x)                (((x) << 1) & GENMASK(1, 1))
#define QSYS_SE_CFG_SE_EXC_ENA_M                 GENMASK(1, 1)
#define QSYS_SE_CFG_SE_EXC_ENA_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_SE_CFG_SE_EXC_FWD(x)                ((x) & GENMASK(0, 0))
#define QSYS_SE_CFG_SE_EXC_FWD_M                 GENMASK(0, 0)
#define QSYS_SE_CFG_SE_EXC_FWD_X(x)              ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:SE_DWRR_CFG */
#define QSYS_SE_DWRR_CFG(g, r)    __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 12, r, 12, 4)

#define QSYS_SE_DWRR_CFG_DWRR_COST(x)            ((x) & GENMASK(4, 0))
#define QSYS_SE_DWRR_CFG_DWRR_COST_M             GENMASK(4, 0)
#define QSYS_SE_DWRR_CFG_DWRR_COST_X(x)          ((x) & GENMASK(4, 0))

/*      QSYS:HSCH:SE_CONNECT */
#define QSYS_SE_CONNECT(g)        __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 60, 0, 1, 4)

#define QSYS_SE_CONNECT_SE_OUTP_IDX(x)           (((x) << 17) & GENMASK(24, 17))
#define QSYS_SE_CONNECT_SE_OUTP_IDX_M            GENMASK(24, 17)
#define QSYS_SE_CONNECT_SE_OUTP_IDX_X(x)         (((x) & GENMASK(24, 17)) >> 17)

#define QSYS_SE_CONNECT_SE_INP_IDX(x)            (((x) << 9) & GENMASK(16, 9))
#define QSYS_SE_CONNECT_SE_INP_IDX_M             GENMASK(16, 9)
#define QSYS_SE_CONNECT_SE_INP_IDX_X(x)          (((x) & GENMASK(16, 9)) >> 9)

#define QSYS_SE_CONNECT_SE_OUTP_CON(x)           (((x) << 5) & GENMASK(8, 5))
#define QSYS_SE_CONNECT_SE_OUTP_CON_M            GENMASK(8, 5)
#define QSYS_SE_CONNECT_SE_OUTP_CON_X(x)         (((x) & GENMASK(8, 5)) >> 5)

#define QSYS_SE_CONNECT_SE_INP_CNT(x)            (((x) << 1) & GENMASK(4, 1))
#define QSYS_SE_CONNECT_SE_INP_CNT_M             GENMASK(4, 1)
#define QSYS_SE_CONNECT_SE_INP_CNT_X(x)          (((x) & GENMASK(4, 1)) >> 1)

#define QSYS_SE_CONNECT_SE_TERMINAL(x)           ((x) & GENMASK(0, 0))
#define QSYS_SE_CONNECT_SE_TERMINAL_M            GENMASK(0, 0)
#define QSYS_SE_CONNECT_SE_TERMINAL_X(x)         ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:SE_DLB_SENSE */
#define QSYS_SE_DLB_SENSE(g)      __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 64, 0, 1, 4)

#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO(x)         (((x) << 11) & GENMASK(13, 11))
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_M          GENMASK(13, 11)
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_X(x)       (((x) & GENMASK(13, 11)) >> 11)

#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT(x)        (((x) << 7) & GENMASK(10, 7))
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_M         GENMASK(10, 7)
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_X(x)      (((x) & GENMASK(10, 7)) >> 7)

#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT(x)        (((x) << 3) & GENMASK(6, 3))
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_M         GENMASK(6, 3)
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_X(x)      (((x) & GENMASK(6, 3)) >> 3)

#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_ENA(x)     (((x) << 2) & GENMASK(2, 2))
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_ENA_M      GENMASK(2, 2)
#define QSYS_SE_DLB_SENSE_SE_DLB_PRIO_ENA_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_ENA(x)    (((x) << 1) & GENMASK(1, 1))
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_ENA_M     GENMASK(1, 1)
#define QSYS_SE_DLB_SENSE_SE_DLB_SPORT_ENA_X(x)  (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_ENA(x)    ((x) & GENMASK(0, 0))
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_ENA_M     GENMASK(0, 0)
#define QSYS_SE_DLB_SENSE_SE_DLB_DPORT_ENA_X(x)  ((x) & GENMASK(0, 0))

/*      QSYS:HSCH:CIR_STATE */
#define QSYS_CIR_STATE(g)         __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 68, 0, 1, 4)

#define QSYS_CIR_STATE_CIR_LVL(x)                (((x) << 4) & GENMASK(25, 4))
#define QSYS_CIR_STATE_CIR_LVL_M                 GENMASK(25, 4)
#define QSYS_CIR_STATE_CIR_LVL_X(x)              (((x) & GENMASK(25, 4)) >> 4)

#define QSYS_CIR_STATE_SHP_TIME(x)               ((x) & GENMASK(3, 0))
#define QSYS_CIR_STATE_SHP_TIME_M                GENMASK(3, 0)
#define QSYS_CIR_STATE_SHP_TIME_X(x)             ((x) & GENMASK(3, 0))

/*      QSYS:HSCH:EIR_STATE */
#define QSYS_EIR_STATE(g)         __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 72, 0, 1, 4)

#define QSYS_EIR_STATE_EIR_LVL(x)                ((x) & GENMASK(21, 0))
#define QSYS_EIR_STATE_EIR_LVL_M                 GENMASK(21, 0)
#define QSYS_EIR_STATE_EIR_LVL_X(x)              ((x) & GENMASK(21, 0))

/*      QSYS:HSCH:SE_STATE */
#define QSYS_SE_STATE(g)          __REG(TARGET_QSYS,\
					0, 1, 16384, g, 90, 128, 76, 0, 1, 4)

#define QSYS_SE_STATE_SE_OUTP_LVL(x)             (((x) << 1) & GENMASK(2, 1))
#define QSYS_SE_STATE_SE_OUTP_LVL_M              GENMASK(2, 1)
#define QSYS_SE_STATE_SE_OUTP_LVL_X(x)           (((x) & GENMASK(2, 1)) >> 1)

#define QSYS_SE_STATE_SE_WAS_YEL(x)              ((x) & GENMASK(0, 0))
#define QSYS_SE_STATE_SE_WAS_YEL_M               GENMASK(0, 0)
#define QSYS_SE_STATE_SE_WAS_YEL_X(x)            ((x) & GENMASK(0, 0))

/*      QSYS:HSCH_MISC:HSCH_MISC_CFG */
#define QSYS_HSCH_MISC_CFG        __REG(TARGET_QSYS,\
					0, 1, 28668, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_HSCH_MISC_CFG_SE_CONNECT_VLD(x)     (((x) << 7) & GENMASK(7, 7))
#define QSYS_HSCH_MISC_CFG_SE_CONNECT_VLD_M      GENMASK(7, 7)
#define QSYS_HSCH_MISC_CFG_SE_CONNECT_VLD_X(x)   (((x) & GENMASK(7, 7)) >> 7)

#define QSYS_HSCH_MISC_CFG_FRM_ADJ(x)            (((x) << 2) & GENMASK(6, 2))
#define QSYS_HSCH_MISC_CFG_FRM_ADJ_M             GENMASK(6, 2)
#define QSYS_HSCH_MISC_CFG_FRM_ADJ_X(x)          (((x) & GENMASK(6, 2)) >> 2)

#define QSYS_HSCH_MISC_CFG_LEAK_DIS(x)           (((x) << 1) & GENMASK(1, 1))
#define QSYS_HSCH_MISC_CFG_LEAK_DIS_M            GENMASK(1, 1)
#define QSYS_HSCH_MISC_CFG_LEAK_DIS_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_HSCH_MISC_CFG_PFC_BYP_UPD(x)        ((x) & GENMASK(0, 0))
#define QSYS_HSCH_MISC_CFG_PFC_BYP_UPD_M         GENMASK(0, 0)
#define QSYS_HSCH_MISC_CFG_PFC_BYP_UPD_X(x)      ((x) & GENMASK(0, 0))

/*      QSYS:TAS_CONFIG:TAS_CFG_CTRL */
#define QSYS_TAS_CFG_CTRL         __REG(TARGET_QSYS,\
					0, 1, 57372, 0, 1, 12, 0, 0, 1, 4)

#define QSYS_TAS_CFG_CTRL_LIST_NUM_MAX(x)        (((x) << 23) & GENMASK(27, 23))
#define QSYS_TAS_CFG_CTRL_LIST_NUM_MAX_M         GENMASK(27, 23)
#define QSYS_TAS_CFG_CTRL_LIST_NUM_MAX_X(x)      (((x) & GENMASK(27, 23)) >> 23)

#define QSYS_TAS_CFG_CTRL_LIST_NUM(x)            (((x) << 18) & GENMASK(22, 18))
#define QSYS_TAS_CFG_CTRL_LIST_NUM_M             GENMASK(22, 18)
#define QSYS_TAS_CFG_CTRL_LIST_NUM_X(x)          (((x) & GENMASK(22, 18)) >> 18)

#define QSYS_TAS_CFG_CTRL_ALWAYS_GB_SCH_Q(x)     (((x) << 17) & GENMASK(17, 17))
#define QSYS_TAS_CFG_CTRL_ALWAYS_GB_SCH_Q_M      GENMASK(17, 17)
#define QSYS_TAS_CFG_CTRL_ALWAYS_GB_SCH_Q_X(x)   (((x) & GENMASK(17, 17)) >> 17)

#define QSYS_TAS_CFG_CTRL_GCL_ENTRY_NUM(x)       (((x) << 5) & GENMASK(16, 5))
#define QSYS_TAS_CFG_CTRL_GCL_ENTRY_NUM_M        GENMASK(16, 5)
#define QSYS_TAS_CFG_CTRL_GCL_ENTRY_NUM_X(x)     (((x) & GENMASK(16, 5)) >> 5)

#define QSYS_TAS_CFG_CTRL_MINIMUM_GB_VAL(x)      ((x) & GENMASK(4, 0))
#define QSYS_TAS_CFG_CTRL_MINIMUM_GB_VAL_M       GENMASK(4, 0)
#define QSYS_TAS_CFG_CTRL_MINIMUM_GB_VAL_X(x)    ((x) & GENMASK(4, 0))

/*      QSYS:TAS_CONFIG:TAS_GS_CTRL */
#define QSYS_TAS_GS_CTRL          __REG(TARGET_QSYS,\
					0, 1, 57372, 0, 1, 12, 4, 0, 1, 4)

#define QSYS_TAS_GS_CTRL_HSCH_POS(x)             ((x) & GENMASK(2, 0))
#define QSYS_TAS_GS_CTRL_HSCH_POS_M              GENMASK(2, 0)
#define QSYS_TAS_GS_CTRL_HSCH_POS_X(x)           ((x) & GENMASK(2, 0))

/*      QSYS:TAS_CONFIG:TAS_STM_CFG */
#define QSYS_TAS_STM_CFG          __REG(TARGET_QSYS,\
					0, 1, 57372, 0, 1, 12, 8, 0, 1, 4)

#define QSYS_TAS_STM_CFG_REVISIT_DLY(x)          ((x) & GENMASK(7, 0))
#define QSYS_TAS_STM_CFG_REVISIT_DLY_M           GENMASK(7, 0)
#define QSYS_TAS_STM_CFG_REVISIT_DLY_X(x)        ((x) & GENMASK(7, 0))

/*      QSYS:TAS_PROFILE_CFG:TAS_QMAXSDU_CFG */
#define QSYS_TAS_QMAXSDU_CFG(g, r) __REG(TARGET_QSYS,\
					0, 1, 30720, g, 16, 64, 0, r, 8, 4)

#define QSYS_TAS_QMAXSDU_CFG_QMAXSDU_VAL(x)      ((x) & GENMASK(7, 0))
#define QSYS_TAS_QMAXSDU_CFG_QMAXSDU_VAL_M       GENMASK(7, 0)
#define QSYS_TAS_QMAXSDU_CFG_QMAXSDU_VAL_X(x)    ((x) & GENMASK(7, 0))

/*      QSYS:TAS_PROFILE_CFG:TAS_PROFILE_CFG */
#define QSYS_TAS_PROFILE_CFG(g)   __REG(TARGET_QSYS,\
					0, 1, 30720, g, 16, 64, 32, 0, 1, 4)

#define QSYS_TAS_PROFILE_CFG_PORT_NUM(x)         (((x) << 19) & GENMASK(21, 19))
#define QSYS_TAS_PROFILE_CFG_PORT_NUM_M          GENMASK(21, 19)
#define QSYS_TAS_PROFILE_CFG_PORT_NUM_X(x)       (((x) & GENMASK(21, 19)) >> 19)

#define QSYS_TAS_PROFILE_CFG_LINK_SPEED(x)       (((x) << 16) & GENMASK(18, 16))
#define QSYS_TAS_PROFILE_CFG_LINK_SPEED_M        GENMASK(18, 16)
#define QSYS_TAS_PROFILE_CFG_LINK_SPEED_X(x)     (((x) & GENMASK(18, 16)) >> 16)

#define QSYS_TAS_PROFILE_CFG_SCH_QUEUES(x)       (((x) << 8) & GENMASK(15, 8))
#define QSYS_TAS_PROFILE_CFG_SCH_QUEUES_M        GENMASK(15, 8)
#define QSYS_TAS_PROFILE_CFG_SCH_QUEUES_X(x)     (((x) & GENMASK(15, 8)) >> 8)

#define QSYS_TAS_PROFILE_CFG_HOLDADVANCE(x)      ((x) & GENMASK(7, 0))
#define QSYS_TAS_PROFILE_CFG_HOLDADVANCE_M       GENMASK(7, 0)
#define QSYS_TAS_PROFILE_CFG_HOLDADVANCE_X(x)    ((x) & GENMASK(7, 0))

/*      QSYS:TAS_LIST_CFG:TAS_BT_NSEC */
#define QSYS_TAS_BT_NSEC          __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 0, 0, 1, 4)

#define QSYS_TAS_BT_NSEC_NSEC(x)                 ((x) & GENMASK(29, 0))
#define QSYS_TAS_BT_NSEC_NSEC_M                  GENMASK(29, 0)
#define QSYS_TAS_BT_NSEC_NSEC_X(x)               ((x) & GENMASK(29, 0))

/*      QSYS:TAS_LIST_CFG:TAS_BT_SEC_LSB */
#define QSYS_TAS_BT_SEC_LSB       __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 4, 0, 1, 4)

/*      QSYS:TAS_LIST_CFG:TAS_BT_SEC_MSB */
#define QSYS_TAS_BT_SEC_MSB       __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 8, 0, 1, 4)

#define QSYS_TAS_BT_SEC_MSB_SEC_MSB(x)           ((x) & GENMASK(15, 0))
#define QSYS_TAS_BT_SEC_MSB_SEC_MSB_M            GENMASK(15, 0)
#define QSYS_TAS_BT_SEC_MSB_SEC_MSB_X(x)         ((x) & GENMASK(15, 0))

/*      QSYS:TAS_LIST_CFG:TAS_NTM_NSEC */
#define QSYS_TAS_NTM_NSEC         __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 12, 0, 1, 4)

#define QSYS_TAS_NTM_NSEC_NSEC(x)                ((x) & GENMASK(29, 0))
#define QSYS_TAS_NTM_NSEC_NSEC_M                 GENMASK(29, 0)
#define QSYS_TAS_NTM_NSEC_NSEC_X(x)              ((x) & GENMASK(29, 0))

/*      QSYS:TAS_LIST_CFG:TAS_NTM_SEC_LSB */
#define QSYS_TAS_NTM_SEC_LSB      __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 16, 0, 1, 4)

/*      QSYS:TAS_LIST_CFG:TAS_NTM_SEC_MSB */
#define QSYS_TAS_NTM_SEC_MSB      __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 20, 0, 1, 4)

#define QSYS_TAS_NTM_SEC_MSB_SEC_MSB(x)          ((x) & GENMASK(15, 0))
#define QSYS_TAS_NTM_SEC_MSB_SEC_MSB_M           GENMASK(15, 0)
#define QSYS_TAS_NTM_SEC_MSB_SEC_MSB_X(x)        ((x) & GENMASK(15, 0))

/*      QSYS:TAS_LIST_CFG:TAS_CT_CFG */
#define QSYS_TAS_CT_CFG           __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 24, 0, 1, 4)

/*      QSYS:TAS_LIST_CFG:TAS_STARTUP_CFG */
#define QSYS_TAS_STARTUP_CFG      __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 28, 0, 1, 4)

#define QSYS_TAS_STARTUP_CFG_OBSOLETE_IDX(x)     (((x) << 23) & GENMASK(27, 23))
#define QSYS_TAS_STARTUP_CFG_OBSOLETE_IDX_M      GENMASK(27, 23)
#define QSYS_TAS_STARTUP_CFG_OBSOLETE_IDX_X(x)   (((x) & GENMASK(27, 23)) >> 23)

#define QSYS_TAS_STARTUP_CFG_STARTUP_ERROR(x)    (((x) << 22) & GENMASK(22, 22))
#define QSYS_TAS_STARTUP_CFG_STARTUP_ERROR_M     GENMASK(22, 22)
#define QSYS_TAS_STARTUP_CFG_STARTUP_ERROR_X(x)  (((x) & GENMASK(22, 22)) >> 22)

#define QSYS_TAS_STARTUP_CFG_STARTUP_TIME(x)     ((x) & GENMASK(21, 0))
#define QSYS_TAS_STARTUP_CFG_STARTUP_TIME_M      GENMASK(21, 0)
#define QSYS_TAS_STARTUP_CFG_STARTUP_TIME_X(x)   ((x) & GENMASK(21, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LIST_CFG */
#define QSYS_TAS_LIST_CFG         __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 32, 0, 1, 4)

#define QSYS_TAS_LIST_CFG_LIST_BASE_ADDR(x)      ((x) & GENMASK(11, 0))
#define QSYS_TAS_LIST_CFG_LIST_BASE_ADDR_M       GENMASK(11, 0)
#define QSYS_TAS_LIST_CFG_LIST_BASE_ADDR_X(x)    ((x) & GENMASK(11, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LST */
#define QSYS_TAS_LST              __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 36, 0, 1, 4)

#define QSYS_TAS_LST_LIST_STATE(x)               ((x) & GENMASK(2, 0))
#define QSYS_TAS_LST_LIST_STATE_M                GENMASK(2, 0)
#define QSYS_TAS_LST_LIST_STATE_X(x)             ((x) & GENMASK(2, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LIST_PTR_STATE */
#define QSYS_TAS_LIST_PTR_STATE   __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 40, 0, 1, 4)

#define QSYS_TAS_LIST_PTR_STATE_CUR_PTR(x)       ((x) & GENMASK(11, 0))
#define QSYS_TAS_LIST_PTR_STATE_CUR_PTR_M        GENMASK(11, 0)
#define QSYS_TAS_LIST_PTR_STATE_CUR_PTR_X(x)     ((x) & GENMASK(11, 0))

/*      QSYS:TAS_LIST_CFG:TAS_LST_INT */
#define QSYS_TAS_LST_INT          __REG(TARGET_QSYS,\
					0, 1, 27904, 0, 1, 64, 44, 0, 1, 4)

/*      QSYS:TAS_GCL_CFG:TAS_GCL_CT_CFG */
#define QSYS_TAS_GCL_CT_CFG       __REG(TARGET_QSYS,\
					0, 1, 27968, 0, 1, 16, 0, 0, 1, 4)

#define QSYS_TAS_GCL_CT_CFG_HSCH_POS(x)          (((x) << 10) & GENMASK(12, 10))
#define QSYS_TAS_GCL_CT_CFG_HSCH_POS_M           GENMASK(12, 10)
#define QSYS_TAS_GCL_CT_CFG_HSCH_POS_X(x)        (((x) & GENMASK(12, 10)) >> 10)

#define QSYS_TAS_GCL_CT_CFG_GATE_STATE(x)        (((x) << 2) & GENMASK(9, 2))
#define QSYS_TAS_GCL_CT_CFG_GATE_STATE_M         GENMASK(9, 2)
#define QSYS_TAS_GCL_CT_CFG_GATE_STATE_X(x)      (((x) & GENMASK(9, 2)) >> 2)

#define QSYS_TAS_GCL_CT_CFG_OP_TYPE(x)           ((x) & GENMASK(1, 0))
#define QSYS_TAS_GCL_CT_CFG_OP_TYPE_M            GENMASK(1, 0)
#define QSYS_TAS_GCL_CT_CFG_OP_TYPE_X(x)         ((x) & GENMASK(1, 0))

/*      QSYS:TAS_GCL_CFG:TAS_GCL_CT_CFG2 */
#define QSYS_TAS_GCL_CT_CFG2      __REG(TARGET_QSYS,\
					0, 1, 27968, 0, 1, 16, 4, 0, 1, 4)

#define QSYS_TAS_GCL_CT_CFG2_PORT_PROFILE(x)     (((x) << 12) & GENMASK(15, 12))
#define QSYS_TAS_GCL_CT_CFG2_PORT_PROFILE_M      GENMASK(15, 12)
#define QSYS_TAS_GCL_CT_CFG2_PORT_PROFILE_X(x)   (((x) & GENMASK(15, 12)) >> 12)

#define QSYS_TAS_GCL_CT_CFG2_NEXT_GCL(x)         ((x) & GENMASK(11, 0))
#define QSYS_TAS_GCL_CT_CFG2_NEXT_GCL_M          GENMASK(11, 0)
#define QSYS_TAS_GCL_CT_CFG2_NEXT_GCL_X(x)       ((x) & GENMASK(11, 0))

/*      QSYS:TAS_GCL_CFG:TAS_GCL_TM_CFG */
#define QSYS_TAS_GCL_TM_CFG       __REG(TARGET_QSYS,\
					0, 1, 27968, 0, 1, 16, 8, 0, 1, 4)

/*      QSYS:HSCH_TAS_STATE:TAS_GATE_STATE */
#define QSYS_TAS_GATE_STATE       __REG(TARGET_QSYS,\
					0, 1, 28004, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_TAS_GATE_STATE_TAS_GATE_STATE(x)    ((x) & GENMASK(7, 0))
#define QSYS_TAS_GATE_STATE_TAS_GATE_STATE_M     GENMASK(7, 0)
#define QSYS_TAS_GATE_STATE_TAS_GATE_STATE_X(x)  ((x) & GENMASK(7, 0))

/*      QSYS:FRER_MAP:FRER_FIRST */
#define QSYS_FRER_FIRST(g)        __REG(TARGET_QSYS,\
					0, 1, 40960, g, 256, 32, 0, 0, 1, 4)

#define QSYS_FRER_FIRST_FRER_FIRST_MEMBER(x)     ((x) & GENMASK(8, 0))
#define QSYS_FRER_FIRST_FRER_FIRST_MEMBER_M      GENMASK(8, 0)
#define QSYS_FRER_FIRST_FRER_FIRST_MEMBER_X(x)   ((x) & GENMASK(8, 0))

/*      QSYS:FRER_MAP:FRER_PORT */
#define QSYS_FRER_PORT(g, r)      __REG(TARGET_QSYS,\
					0, 1, 40960, g, 256, 32, 4, r, 4, 4)

#define QSYS_FRER_PORT_FRER_EGR_PORT(x)          ((x) & GENMASK(3, 0))
#define QSYS_FRER_PORT_FRER_EGR_PORT_M           GENMASK(3, 0)
#define QSYS_FRER_PORT_FRER_EGR_PORT_X(x)        ((x) & GENMASK(3, 0))

/*      QSYS:FRER_CFG:FRER_CFG */
#define QSYS_FRER_CFG             __REG(TARGET_QSYS,\
					0, 1, 57384, 0, 1, 4, 0, 0, 1, 4)

#define QSYS_FRER_CFG_WATCHDOG_PRESCALER(x)      (((x) << 9) & GENMASK(24, 9))
#define QSYS_FRER_CFG_WATCHDOG_PRESCALER_M       GENMASK(24, 9)
#define QSYS_FRER_CFG_WATCHDOG_PRESCALER_X(x)    (((x) & GENMASK(24, 9)) >> 9)

#define QSYS_FRER_CFG_ADDR(x)                    ((x) & GENMASK(8, 0))
#define QSYS_FRER_CFG_ADDR_M                     GENMASK(8, 0)
#define QSYS_FRER_CFG_ADDR_X(x)                  ((x) & GENMASK(8, 0))

/*      QSYS:FRER_CFG_COMPOUND:FRER_CFG_CMP */
#define QSYS_FRER_CFG_CMP(g)      __REG(TARGET_QSYS,\
					0, 1, 31744, g, 256, 4, 0, 0, 1, 4)

#define QSYS_FRER_CFG_CMP_TAKE_NO_SEQUENCE(x)    (((x) << 20) & GENMASK(20, 20))
#define QSYS_FRER_CFG_CMP_TAKE_NO_SEQUENCE_M     GENMASK(20, 20)
#define QSYS_FRER_CFG_CMP_TAKE_NO_SEQUENCE_X(x)  (((x) & GENMASK(20, 20)) >> 20)

#define QSYS_FRER_CFG_CMP_VECTOR_ALGORITHM(x)    (((x) << 19) & GENMASK(19, 19))
#define QSYS_FRER_CFG_CMP_VECTOR_ALGORITHM_M     GENMASK(19, 19)
#define QSYS_FRER_CFG_CMP_VECTOR_ALGORITHM_X(x)  (((x) & GENMASK(19, 19)) >> 19)

#define QSYS_FRER_CFG_CMP_HISTORY_LENGTH(x)      (((x) << 14) & GENMASK(18, 14))
#define QSYS_FRER_CFG_CMP_HISTORY_LENGTH_M       GENMASK(18, 14)
#define QSYS_FRER_CFG_CMP_HISTORY_LENGTH_X(x)    (((x) & GENMASK(18, 14)) >> 14)

#define QSYS_FRER_CFG_CMP_RESET_TICKS(x)         (((x) << 2) & GENMASK(13, 2))
#define QSYS_FRER_CFG_CMP_RESET_TICKS_M          GENMASK(13, 2)
#define QSYS_FRER_CFG_CMP_RESET_TICKS_X(x)       (((x) & GENMASK(13, 2)) >> 2)

#define QSYS_FRER_CFG_CMP_RESET(x)               (((x) << 1) & GENMASK(1, 1))
#define QSYS_FRER_CFG_CMP_RESET_M                GENMASK(1, 1)
#define QSYS_FRER_CFG_CMP_RESET_X(x)             (((x) & GENMASK(1, 1)) >> 1)

#define QSYS_FRER_CFG_CMP_ENABLE(x)              ((x) & GENMASK(0, 0))
#define QSYS_FRER_CFG_CMP_ENABLE_M               GENMASK(0, 0)
#define QSYS_FRER_CFG_CMP_ENABLE_X(x)            ((x) & GENMASK(0, 0))

/*      QSYS:FRER_CFG_MEMBER:FRER_CFG_MBM */
#define QSYS_FRER_CFG_MBM(g)      __REG(TARGET_QSYS,\
					0, 1, 28672, g, 512, 4, 0, 0, 1, 4)

#define QSYS_FRER_CFG_MBM_TAKE_NO_SEQUENCE(x)    (((x) << 28) & GENMASK(28, 28))
#define QSYS_FRER_CFG_MBM_TAKE_NO_SEQUENCE_M     GENMASK(28, 28)
#define QSYS_FRER_CFG_MBM_TAKE_NO_SEQUENCE_X(x)  (((x) & GENMASK(28, 28)) >> 28)

#define QSYS_FRER_CFG_MBM_VECTOR_ALGORITHM(x)    (((x) << 27) & GENMASK(27, 27))
#define QSYS_FRER_CFG_MBM_VECTOR_ALGORITHM_M     GENMASK(27, 27)
#define QSYS_FRER_CFG_MBM_VECTOR_ALGORITHM_X(x)  (((x) & GENMASK(27, 27)) >> 27)

#define QSYS_FRER_CFG_MBM_HISTORY_LENGTH(x)      (((x) << 22) & GENMASK(26, 22))
#define QSYS_FRER_CFG_MBM_HISTORY_LENGTH_M       GENMASK(26, 22)
#define QSYS_FRER_CFG_MBM_HISTORY_LENGTH_X(x)    (((x) & GENMASK(26, 22)) >> 22)

#define QSYS_FRER_CFG_MBM_RESET_TICKS(x)         (((x) << 10) & GENMASK(21, 10))
#define QSYS_FRER_CFG_MBM_RESET_TICKS_M          GENMASK(21, 10)
#define QSYS_FRER_CFG_MBM_RESET_TICKS_X(x)       (((x) & GENMASK(21, 10)) >> 10)

#define QSYS_FRER_CFG_MBM_RESET(x)               (((x) << 9) & GENMASK(9, 9))
#define QSYS_FRER_CFG_MBM_RESET_M                GENMASK(9, 9)
#define QSYS_FRER_CFG_MBM_RESET_X(x)             (((x) & GENMASK(9, 9)) >> 9)

#define QSYS_FRER_CFG_MBM_ENABLE(x)              (((x) << 8) & GENMASK(8, 8))
#define QSYS_FRER_CFG_MBM_ENABLE_M               GENMASK(8, 8)
#define QSYS_FRER_CFG_MBM_ENABLE_X(x)            (((x) & GENMASK(8, 8)) >> 8)

#define QSYS_FRER_CFG_MBM_COMPOUND_HANDLE(x)     ((x) & GENMASK(7, 0))
#define QSYS_FRER_CFG_MBM_COMPOUND_HANDLE_M      GENMASK(7, 0)
#define QSYS_FRER_CFG_MBM_COMPOUND_HANDLE_X(x)   ((x) & GENMASK(7, 0))

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_RS */
#define QSYS_CNT_CMP_RS(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 0, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_TL */
#define QSYS_CNT_CMP_TL(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 4, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_PS */
#define QSYS_CNT_CMP_PS(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 8, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_DC */
#define QSYS_CNT_CMP_DC(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 12, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_OO */
#define QSYS_CNT_CMP_OO(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 16, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_RG */
#define QSYS_CNT_CMP_RG(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 20, 0, 1, 4)

/*      QSYS:FRER_CNT_COMPOUND:CNT_CMP_LS */
#define QSYS_CNT_CMP_LS(g)        __REG(TARGET_QSYS,\
					0, 1, 49152, g, 256, 32, 24, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_RS */
#define QSYS_CNT_MBM_RS(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 0, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_TL */
#define QSYS_CNT_MBM_TL(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 4, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_PS */
#define QSYS_CNT_MBM_PS(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 8, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_DC */
#define QSYS_CNT_MBM_DC(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 12, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_OO */
#define QSYS_CNT_MBM_OO(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 16, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_RG */
#define QSYS_CNT_MBM_RG(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 20, 0, 1, 4)

/*      QSYS:FRER_CNT_MEMBER:CNT_MBM_LS */
#define QSYS_CNT_MBM_LS(g)        __REG(TARGET_QSYS,\
					0, 1, 0, g, 512, 32, 24, 0, 1, 4)

/*      REW:PORT:PORT_VLAN_CFG */
#define REW_PORT_VLAN_CFG(g)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 0, 0, 1, 4)

#define REW_PORT_VLAN_CFG_PORT_TPID(x)           (((x) << 16) & GENMASK(31, 16))
#define REW_PORT_VLAN_CFG_PORT_TPID_M            GENMASK(31, 16)
#define REW_PORT_VLAN_CFG_PORT_TPID_X(x)         (((x) & GENMASK(31, 16)) >> 16)

#define REW_PORT_VLAN_CFG_PORT_DEI(x)            (((x) << 15) & GENMASK(15, 15))
#define REW_PORT_VLAN_CFG_PORT_DEI_M             GENMASK(15, 15)
#define REW_PORT_VLAN_CFG_PORT_DEI_X(x)          (((x) & GENMASK(15, 15)) >> 15)

#define REW_PORT_VLAN_CFG_PORT_PCP(x)            (((x) << 12) & GENMASK(14, 12))
#define REW_PORT_VLAN_CFG_PORT_PCP_M             GENMASK(14, 12)
#define REW_PORT_VLAN_CFG_PORT_PCP_X(x)          (((x) & GENMASK(14, 12)) >> 12)

#define REW_PORT_VLAN_CFG_PORT_VID(x)            ((x) & GENMASK(11, 0))
#define REW_PORT_VLAN_CFG_PORT_VID_M             GENMASK(11, 0)
#define REW_PORT_VLAN_CFG_PORT_VID_X(x)          ((x) & GENMASK(11, 0))

/*      REW:PORT:TAG_CFG */
#define REW_TAG_CFG(g)            __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 4, 0, 1, 4)

#define REW_TAG_CFG_TAG_CFG(x)                   (((x) << 7) & GENMASK(8, 7))
#define REW_TAG_CFG_TAG_CFG_M                    GENMASK(8, 7)
#define REW_TAG_CFG_TAG_CFG_X(x)                 (((x) & GENMASK(8, 7)) >> 7)

#define REW_TAG_CFG_TAG_TPID_CFG(x)              (((x) << 5) & GENMASK(6, 5))
#define REW_TAG_CFG_TAG_TPID_CFG_M               GENMASK(6, 5)
#define REW_TAG_CFG_TAG_TPID_CFG_X(x)            (((x) & GENMASK(6, 5)) >> 5)

#define REW_TAG_CFG_TAG_VID_CFG(x)               (((x) << 4) & GENMASK(4, 4))
#define REW_TAG_CFG_TAG_VID_CFG_M                GENMASK(4, 4)
#define REW_TAG_CFG_TAG_VID_CFG_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define REW_TAG_CFG_TAG_PCP_CFG(x)               (((x) << 2) & GENMASK(3, 2))
#define REW_TAG_CFG_TAG_PCP_CFG_M                GENMASK(3, 2)
#define REW_TAG_CFG_TAG_PCP_CFG_X(x)             (((x) & GENMASK(3, 2)) >> 2)

#define REW_TAG_CFG_TAG_DEI_CFG(x)               ((x) & GENMASK(1, 0))
#define REW_TAG_CFG_TAG_DEI_CFG_M                GENMASK(1, 0)
#define REW_TAG_CFG_TAG_DEI_CFG_X(x)             ((x) & GENMASK(1, 0))

/*      REW:PORT:PORT_CFG */
#define REW_PORT_CFG(g)           __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 8, 0, 1, 4)

#define REW_PORT_CFG_ES0_EN(x)                   (((x) << 4) & GENMASK(4, 4))
#define REW_PORT_CFG_ES0_EN_M                    GENMASK(4, 4)
#define REW_PORT_CFG_ES0_EN_X(x)                 (((x) & GENMASK(4, 4)) >> 4)

#define REW_PORT_CFG_FCS_UPDATE_NONCPU_CFG(x)    (((x) << 2) & GENMASK(3, 2))
#define REW_PORT_CFG_FCS_UPDATE_NONCPU_CFG_M     GENMASK(3, 2)
#define REW_PORT_CFG_FCS_UPDATE_NONCPU_CFG_X(x)  (((x) & GENMASK(3, 2)) >> 2)

#define REW_PORT_CFG_FCS_UPDATE_CPU_ENA(x)       (((x) << 1) & GENMASK(1, 1))
#define REW_PORT_CFG_FCS_UPDATE_CPU_ENA_M        GENMASK(1, 1)
#define REW_PORT_CFG_FCS_UPDATE_CPU_ENA_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define REW_PORT_CFG_NO_REWRITE(x)               ((x) & GENMASK(0, 0))
#define REW_PORT_CFG_NO_REWRITE_M                GENMASK(0, 0)
#define REW_PORT_CFG_NO_REWRITE_X(x)             ((x) & GENMASK(0, 0))

/*      REW:PORT:PCP_DEI_CFG */
#define REW_PCP_DEI_CFG(g, r)     __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 16, r, 16, 4)

#define REW_PCP_DEI_CFG_DEI_QOS_VAL(x)           (((x) << 3) & GENMASK(3, 3))
#define REW_PCP_DEI_CFG_DEI_QOS_VAL_M            GENMASK(3, 3)
#define REW_PCP_DEI_CFG_DEI_QOS_VAL_X(x)         (((x) & GENMASK(3, 3)) >> 3)

#define REW_PCP_DEI_CFG_PCP_QOS_VAL(x)           ((x) & GENMASK(2, 0))
#define REW_PCP_DEI_CFG_PCP_QOS_VAL_M            GENMASK(2, 0)
#define REW_PCP_DEI_CFG_PCP_QOS_VAL_X(x)         ((x) & GENMASK(2, 0))

/*      REW:PORT:CCM_TX_CFG */
#define REW_CCM_TX_CFG(g)         __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 108, 0, 1, 4)

#define REW_CCM_TX_CFG_CCM_SEQ_UPD_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define REW_CCM_TX_CFG_CCM_SEQ_UPD_ENA_M         GENMASK(1, 1)
#define REW_CCM_TX_CFG_CCM_SEQ_UPD_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define REW_CCM_TX_CFG_CCM_TX_RDI(x)             ((x) & GENMASK(0, 0))
#define REW_CCM_TX_CFG_CCM_TX_RDI_M              GENMASK(0, 0)
#define REW_CCM_TX_CFG_CCM_TX_RDI_X(x)           ((x) & GENMASK(0, 0))

/*      REW:PORT:MRP_TX_CFG */
#define REW_MRP_TX_CFG(g, r)      __REG(TARGET_REW,\
					0, 1, 0, g, 10, 128, 112, r, 2, 4)

#define REW_MRP_TX_CFG_MRP_TIMESTAMP_UPD(x)      (((x) << 22) & GENMASK(22, 22))
#define REW_MRP_TX_CFG_MRP_TIMESTAMP_UPD_M       GENMASK(22, 22)
#define REW_MRP_TX_CFG_MRP_TIMESTAMP_UPD_X(x)    (((x) & GENMASK(22, 22)) >> 22)

#define REW_MRP_TX_CFG_MRP_SEQ_UPD(x)            (((x) << 21) & GENMASK(21, 21))
#define REW_MRP_TX_CFG_MRP_SEQ_UPD_M             GENMASK(21, 21)
#define REW_MRP_TX_CFG_MRP_SEQ_UPD_X(x)          (((x) & GENMASK(21, 21)) >> 21)

#define REW_MRP_TX_CFG_MRP_MISC_UPD(x)           (((x) << 20) & GENMASK(20, 20))
#define REW_MRP_TX_CFG_MRP_MISC_UPD_M            GENMASK(20, 20)
#define REW_MRP_TX_CFG_MRP_MISC_UPD_X(x)         (((x) & GENMASK(20, 20)) >> 20)

#define REW_MRP_TX_CFG_MRP_STATE(x)              (((x) << 18) & GENMASK(19, 18))
#define REW_MRP_TX_CFG_MRP_STATE_M               GENMASK(19, 18)
#define REW_MRP_TX_CFG_MRP_STATE_X(x)            (((x) & GENMASK(19, 18)) >> 18)

#define REW_MRP_TX_CFG_MRP_PORTROLE(x)           (((x) << 16) & GENMASK(17, 16))
#define REW_MRP_TX_CFG_MRP_PORTROLE_M            GENMASK(17, 16)
#define REW_MRP_TX_CFG_MRP_PORTROLE_X(x)         (((x) & GENMASK(17, 16)) >> 16)

#define REW_MRP_TX_CFG_MRP_TRANS(x)              ((x) & GENMASK(15, 0))
#define REW_MRP_TX_CFG_MRP_TRANS_M               GENMASK(15, 0)
#define REW_MRP_TX_CFG_MRP_TRANS_X(x)            ((x) & GENMASK(15, 0))

/*      REW:PTP_SEQ_NO:PTP_SEQ_NO */
#define REW_PTP_SEQ_NO(r)         __REG(TARGET_REW,\
					0, 1, 2048, 0, 1, 1024, 0, r, 256, 4)

#define REW_PTP_SEQ_NO_PTP_SEQ_NO_1(x)           (((x) << 16) & GENMASK(31, 16))
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_1_M            GENMASK(31, 16)
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_1_X(x)         (((x) & GENMASK(31, 16)) >> 16)

#define REW_PTP_SEQ_NO_PTP_SEQ_NO_0(x)           ((x) & GENMASK(15, 0))
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_0_M            GENMASK(15, 0)
#define REW_PTP_SEQ_NO_PTP_SEQ_NO_0_X(x)         ((x) & GENMASK(15, 0))

/*      SYS:SYSTEM:RESET_CFG */
#define SYS_RESET_CFG             __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 0, 0, 1, 4)

#define SYS_RESET_CFG_CORE_ENA(x)                ((x) & GENMASK(0, 0))
#define SYS_RESET_CFG_CORE_ENA_M                 GENMASK(0, 0)
#define SYS_RESET_CFG_CORE_ENA_X(x)              ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:PORT_MODE */
#define SYS_PORT_MODE(r)          __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 44, r, 10, 4)

#define SYS_PORT_MODE_DATA_WO_TS(x)              (((x) << 6) & GENMASK(7, 6))
#define SYS_PORT_MODE_DATA_WO_TS_M               GENMASK(7, 6)
#define SYS_PORT_MODE_DATA_WO_TS_X(x)            (((x) & GENMASK(7, 6)) >> 6)

#define SYS_PORT_MODE_INCL_INJ_HDR(x)            (((x) << 4) & GENMASK(5, 4))
#define SYS_PORT_MODE_INCL_INJ_HDR_M             GENMASK(5, 4)
#define SYS_PORT_MODE_INCL_INJ_HDR_X(x)          (((x) & GENMASK(5, 4)) >> 4)

#define SYS_PORT_MODE_INCL_XTR_HDR(x)            (((x) << 2) & GENMASK(3, 2))
#define SYS_PORT_MODE_INCL_XTR_HDR_M             GENMASK(3, 2)
#define SYS_PORT_MODE_INCL_XTR_HDR_X(x)          (((x) & GENMASK(3, 2)) >> 2)

#define SYS_PORT_MODE_INJ_HDR_ERR(x)             (((x) << 1) & GENMASK(1, 1))
#define SYS_PORT_MODE_INJ_HDR_ERR_M              GENMASK(1, 1)
#define SYS_PORT_MODE_INJ_HDR_ERR_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define SYS_PORT_MODE_PAD_DIS(x)                 ((x) & GENMASK(0, 0))
#define SYS_PORT_MODE_PAD_DIS_M                  GENMASK(0, 0)
#define SYS_PORT_MODE_PAD_DIS_X(x)               ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:FRONT_PORT_MODE */
#define SYS_FRONT_PORT_MODE(r)    __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 84, r, 8, 4)

#define SYS_FRONT_PORT_MODE_ADD_FRAG_SIZE(x)     (((x) << 8) & GENMASK(9, 8))
#define SYS_FRONT_PORT_MODE_ADD_FRAG_SIZE_M      GENMASK(9, 8)
#define SYS_FRONT_PORT_MODE_ADD_FRAG_SIZE_X(x)   (((x) & GENMASK(9, 8)) >> 8)

#define SYS_FRONT_PORT_MODE_HDX_MODE(x)          (((x) << 1) & GENMASK(1, 1))
#define SYS_FRONT_PORT_MODE_HDX_MODE_M           GENMASK(1, 1)
#define SYS_FRONT_PORT_MODE_HDX_MODE_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define SYS_FRONT_PORT_MODE_DONT_WAIT_FOR_TS(x)  ((x) & GENMASK(0, 0))
#define SYS_FRONT_PORT_MODE_DONT_WAIT_FOR_TS_M   GENMASK(0, 0)
#define SYS_FRONT_PORT_MODE_DONT_WAIT_FOR_TS_X(x) ((x) & GENMASK(0, 0))

/*      SYS:SYSTEM:FRM_AGING */
#define SYS_FRM_AGING             __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 116, 0, 1, 4)

#define SYS_FRM_AGING_AGE_TX_ENA(x)              (((x) << 20) & GENMASK(20, 20))
#define SYS_FRM_AGING_AGE_TX_ENA_M               GENMASK(20, 20)
#define SYS_FRM_AGING_AGE_TX_ENA_X(x)            (((x) & GENMASK(20, 20)) >> 20)

#define SYS_FRM_AGING_MAX_AGE(x)                 ((x) & GENMASK(19, 0))
#define SYS_FRM_AGING_MAX_AGE_M                  GENMASK(19, 0)
#define SYS_FRM_AGING_MAX_AGE_X(x)               ((x) & GENMASK(19, 0))

/*      SYS:SYSTEM:STAT_CFG */
#define SYS_STAT_CFG              __REG(TARGET_SYS,\
					0, 1, 4128, 0, 1, 168, 120, 0, 1, 4)

#define SYS_STAT_CFG_STAT_CLEAR_SHOT(x)          (((x) << 10) & GENMASK(16, 10))
#define SYS_STAT_CFG_STAT_CLEAR_SHOT_M           GENMASK(16, 10)
#define SYS_STAT_CFG_STAT_CLEAR_SHOT_X(x)        (((x) & GENMASK(16, 10)) >> 10)

#define SYS_STAT_CFG_STAT_VIEW(x)                ((x) & GENMASK(9, 0))
#define SYS_STAT_CFG_STAT_VIEW_M                 GENMASK(9, 0)
#define SYS_STAT_CFG_STAT_VIEW_X(x)              ((x) & GENMASK(9, 0))

/*      SYS:PAUSE_CFG:PAUSE_CFG */
#define SYS_PAUSE_CFG(r)          __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 0, r, 9, 4)

#define SYS_PAUSE_CFG_PAUSE_START(x)             (((x) << 10) & GENMASK(18, 10))
#define SYS_PAUSE_CFG_PAUSE_START_M              GENMASK(18, 10)
#define SYS_PAUSE_CFG_PAUSE_START_X(x)           (((x) & GENMASK(18, 10)) >> 10)

#define SYS_PAUSE_CFG_PAUSE_STOP(x)              (((x) << 1) & GENMASK(9, 1))
#define SYS_PAUSE_CFG_PAUSE_STOP_M               GENMASK(9, 1)
#define SYS_PAUSE_CFG_PAUSE_STOP_X(x)            (((x) & GENMASK(9, 1)) >> 1)

#define SYS_PAUSE_CFG_PAUSE_ENA(x)               ((x) & GENMASK(0, 0))
#define SYS_PAUSE_CFG_PAUSE_ENA_M                GENMASK(0, 0)
#define SYS_PAUSE_CFG_PAUSE_ENA_X(x)             ((x) & GENMASK(0, 0))

/*      SYS:PAUSE_CFG:ATOP */
#define SYS_ATOP(r)               __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 40, r, 9, 4)

#define SYS_ATOP_ATOP(x)                         ((x) & GENMASK(8, 0))
#define SYS_ATOP_ATOP_M                          GENMASK(8, 0)
#define SYS_ATOP_ATOP_X(x)                       ((x) & GENMASK(8, 0))

/*      SYS:PAUSE_CFG:ATOP_TOT_CFG */
#define SYS_ATOP_TOT_CFG          __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 76, 0, 1, 4)

#define SYS_ATOP_TOT_CFG_ATOP_TOT(x)             ((x) & GENMASK(8, 0))
#define SYS_ATOP_TOT_CFG_ATOP_TOT_M              GENMASK(8, 0)
#define SYS_ATOP_TOT_CFG_ATOP_TOT_X(x)           ((x) & GENMASK(8, 0))

/*      SYS:PAUSE_CFG:MAC_FC_CFG */
#define SYS_MAC_FC_CFG(r)         __REG(TARGET_SYS,\
					0, 1, 4296, 0, 1, 112, 80, r, 8, 4)

#define SYS_MAC_FC_CFG_FC_LINK_SPEED(x)          (((x) << 26) & GENMASK(27, 26))
#define SYS_MAC_FC_CFG_FC_LINK_SPEED_M           GENMASK(27, 26)
#define SYS_MAC_FC_CFG_FC_LINK_SPEED_X(x)        (((x) & GENMASK(27, 26)) >> 26)

#define SYS_MAC_FC_CFG_FC_LATENCY_CFG(x)         (((x) << 20) & GENMASK(25, 20))
#define SYS_MAC_FC_CFG_FC_LATENCY_CFG_M          GENMASK(25, 20)
#define SYS_MAC_FC_CFG_FC_LATENCY_CFG_X(x)       (((x) & GENMASK(25, 20)) >> 20)

#define SYS_MAC_FC_CFG_ZERO_PAUSE_ENA(x)         (((x) << 18) & GENMASK(18, 18))
#define SYS_MAC_FC_CFG_ZERO_PAUSE_ENA_M          GENMASK(18, 18)
#define SYS_MAC_FC_CFG_ZERO_PAUSE_ENA_X(x)       (((x) & GENMASK(18, 18)) >> 18)

#define SYS_MAC_FC_CFG_TX_FC_ENA(x)              (((x) << 17) & GENMASK(17, 17))
#define SYS_MAC_FC_CFG_TX_FC_ENA_M               GENMASK(17, 17)
#define SYS_MAC_FC_CFG_TX_FC_ENA_X(x)            (((x) & GENMASK(17, 17)) >> 17)

#define SYS_MAC_FC_CFG_RX_FC_ENA(x)              (((x) << 16) & GENMASK(16, 16))
#define SYS_MAC_FC_CFG_RX_FC_ENA_M               GENMASK(16, 16)
#define SYS_MAC_FC_CFG_RX_FC_ENA_X(x)            (((x) & GENMASK(16, 16)) >> 16)

#define SYS_MAC_FC_CFG_PAUSE_VAL_CFG(x)          ((x) & GENMASK(15, 0))
#define SYS_MAC_FC_CFG_PAUSE_VAL_CFG_M           GENMASK(15, 0)
#define SYS_MAC_FC_CFG_PAUSE_VAL_CFG_X(x)        ((x) & GENMASK(15, 0))

/*      SYS:STAT:CNT */
#define SYS_CNT(g)                __REG(TARGET_SYS,\
					0, 1, 0, g, 896, 4, 0, 0, 1, 4)

/*      SYS:PSTATE:FPORT_STATE */
#define SYS_FPORT_STATE(r)        __REG(TARGET_SYS,\
					0, 1, 4096, 0, 1, 32, 0, r, 8, 4)

#define SYS_FPORT_STATE_MAC_HOLD(x)              ((x) & GENMASK(0, 0))
#define SYS_FPORT_STATE_MAC_HOLD_M               GENMASK(0, 0)
#define SYS_FPORT_STATE_MAC_HOLD_X(x)            ((x) & GENMASK(0, 0))

/*      SYS:RAM_CTRL:RAM_INIT */
#define SYS_RAM_INIT              __REG(TARGET_SYS,\
					0, 1, 4432, 0, 1, 4, 0, 0, 1, 4)

#define SYS_RAM_INIT_RAM_INIT(x)                 (((x) << 1) & GENMASK(1, 1))
#define SYS_RAM_INIT_RAM_INIT_M                  GENMASK(1, 1)
#define SYS_RAM_INIT_RAM_INIT_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define SYS_RAM_INIT_RAM_CFG_HOOK(x)             ((x) & GENMASK(0, 0))
#define SYS_RAM_INIT_RAM_CFG_HOOK_M              GENMASK(0, 0)
#define SYS_RAM_INIT_RAM_CFG_HOOK_X(x)           ((x) & GENMASK(0, 0))

/*      SYS:PTPPORT:PTP_CFG */
#define SYS_PTP_CFG(g)            __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 4, 0, 1, 4)

#define SYS_PTP_CFG_PTP_DOM_VAL(x)               (((x) << 2) & GENMASK(3, 2))
#define SYS_PTP_CFG_PTP_DOM_VAL_M                GENMASK(3, 2)
#define SYS_PTP_CFG_PTP_DOM_VAL_X(x)             (((x) & GENMASK(3, 2)) >> 2)

#define SYS_PTP_CFG_PTP_UDP6_CSUM_DIS(x)         (((x) << 1) & GENMASK(1, 1))
#define SYS_PTP_CFG_PTP_UDP6_CSUM_DIS_M          GENMASK(1, 1)
#define SYS_PTP_CFG_PTP_UDP6_CSUM_DIS_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define SYS_PTP_CFG_PTP_UDP4_CSUM_DIS(x)         ((x) & GENMASK(0, 0))
#define SYS_PTP_CFG_PTP_UDP4_CSUM_DIS_M          GENMASK(0, 0)
#define SYS_PTP_CFG_PTP_UDP4_CSUM_DIS_X(x)       ((x) & GENMASK(0, 0))

/*      SYS:PTPPORT:PTP_RXDLY_CFG */
#define SYS_PTP_RXDLY_CFG(g)      __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 8, 0, 1, 4)

#define SYS_PTP_RXDLY_CFG_PTP_RX_IO_DLY(x)       ((x) & GENMASK(23, 0))
#define SYS_PTP_RXDLY_CFG_PTP_RX_IO_DLY_M        GENMASK(23, 0)
#define SYS_PTP_RXDLY_CFG_PTP_RX_IO_DLY_X(x)     ((x) & GENMASK(23, 0))

/*      SYS:PTPPORT:PTP_TXDLY_CFG */
#define SYS_PTP_TXDLY_CFG(g)      __REG(TARGET_SYS,\
					0, 1, 4452, g, 10, 28, 12, 0, 1, 4)

#define SYS_PTP_TXDLY_CFG_PTP_TX_IO_DLY(x)       ((x) & GENMASK(23, 0))
#define SYS_PTP_TXDLY_CFG_PTP_TX_IO_DLY_M        GENMASK(23, 0)
#define SYS_PTP_TXDLY_CFG_PTP_TX_IO_DLY_X(x)     ((x) & GENMASK(23, 0))

/*      VCAP:VCAP_CORE_CFG:UPDATE_CTRL */
#define VCAP_UPDATE_CTRL(t)       __REG(TARGET_VCAP,\
					t, 3, 0, 0, 1, 8, 0, 0, 1, 4)

#define VCAP_UPDATE_CTRL_UPDATE_CMD(x)           (((x) << 22) & GENMASK(24, 22))
#define VCAP_UPDATE_CTRL_UPDATE_CMD_M            GENMASK(24, 22)
#define VCAP_UPDATE_CTRL_UPDATE_CMD_X(x)         (((x) & GENMASK(24, 22)) >> 22)

#define VCAP_UPDATE_CTRL_UPDATE_ENTRY_DIS(x)     (((x) << 21) & GENMASK(21, 21))
#define VCAP_UPDATE_CTRL_UPDATE_ENTRY_DIS_M      GENMASK(21, 21)
#define VCAP_UPDATE_CTRL_UPDATE_ENTRY_DIS_X(x)   (((x) & GENMASK(21, 21)) >> 21)

#define VCAP_UPDATE_CTRL_UPDATE_ACTION_DIS(x)    (((x) << 20) & GENMASK(20, 20))
#define VCAP_UPDATE_CTRL_UPDATE_ACTION_DIS_M     GENMASK(20, 20)
#define VCAP_UPDATE_CTRL_UPDATE_ACTION_DIS_X(x)  (((x) & GENMASK(20, 20)) >> 20)

#define VCAP_UPDATE_CTRL_UPDATE_CNT_DIS(x)       (((x) << 19) & GENMASK(19, 19))
#define VCAP_UPDATE_CTRL_UPDATE_CNT_DIS_M        GENMASK(19, 19)
#define VCAP_UPDATE_CTRL_UPDATE_CNT_DIS_X(x)     (((x) & GENMASK(19, 19)) >> 19)

#define VCAP_UPDATE_CTRL_UPDATE_ADDR(x)          (((x) << 3) & GENMASK(18, 3))
#define VCAP_UPDATE_CTRL_UPDATE_ADDR_M           GENMASK(18, 3)
#define VCAP_UPDATE_CTRL_UPDATE_ADDR_X(x)        (((x) & GENMASK(18, 3)) >> 3)

#define VCAP_UPDATE_CTRL_UPDATE_SHOT(x)          (((x) << 2) & GENMASK(2, 2))
#define VCAP_UPDATE_CTRL_UPDATE_SHOT_M           GENMASK(2, 2)
#define VCAP_UPDATE_CTRL_UPDATE_SHOT_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define VCAP_UPDATE_CTRL_CLEAR_CACHE(x)          (((x) << 1) & GENMASK(1, 1))
#define VCAP_UPDATE_CTRL_CLEAR_CACHE_M           GENMASK(1, 1)
#define VCAP_UPDATE_CTRL_CLEAR_CACHE_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define VCAP_UPDATE_CTRL_MV_TRAFFIC_IGN(x)       ((x) & GENMASK(0, 0))
#define VCAP_UPDATE_CTRL_MV_TRAFFIC_IGN_M        GENMASK(0, 0)
#define VCAP_UPDATE_CTRL_MV_TRAFFIC_IGN_X(x)     ((x) & GENMASK(0, 0))

/*      VCAP:VCAP_CORE_CFG:MV_CFG */
#define VCAP_MV_CFG(t)            __REG(TARGET_VCAP,\
					t, 3, 0, 0, 1, 8, 4, 0, 1, 4)

#define VCAP_MV_CFG_MV_NUM_POS(x)                (((x) << 16) & GENMASK(31, 16))
#define VCAP_MV_CFG_MV_NUM_POS_M                 GENMASK(31, 16)
#define VCAP_MV_CFG_MV_NUM_POS_X(x)              (((x) & GENMASK(31, 16)) >> 16)

#define VCAP_MV_CFG_MV_SIZE(x)                   ((x) & GENMASK(15, 0))
#define VCAP_MV_CFG_MV_SIZE_M                    GENMASK(15, 0)
#define VCAP_MV_CFG_MV_SIZE_X(x)                 ((x) & GENMASK(15, 0))

/*      VCAP:VCAP_CORE_CACHE:ENTRY_DAT */
#define VCAP_ENTRY_DAT(t, r)      __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 0, r, 64, 4)

/*      VCAP:VCAP_CORE_CACHE:MASK_DAT */
#define VCAP_MASK_DAT(t, r)       __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 256, r, 64, 4)

/*      VCAP:VCAP_CORE_CACHE:ACTION_DAT */
#define VCAP_ACTION_DAT(t, r)     __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 512, r, 64, 4)

/*      VCAP:VCAP_CORE_CACHE:CNT_DAT */
#define VCAP_CNT_DAT(t, r)        __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 768, r, 32, 4)

/*      VCAP:VCAP_CORE_CACHE:CNT_FW_DAT */
#define VCAP_CNT_FW_DAT(t)        __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 896, 0, 1, 4)

/*      VCAP:VCAP_CORE_CACHE:TG_DAT */
#define VCAP_TG_DAT(t)            __REG(TARGET_VCAP,\
					t, 3, 8, 0, 1, 904, 900, 0, 1, 4)

/*      VCAP:VCAP_CORE_MAP:CORE_IDX */
#define VCAP_CORE_IDX(t)          __REG(TARGET_VCAP,\
					t, 3, 912, 0, 1, 8, 0, 0, 1, 4)

#define VCAP_CORE_IDX_CORE_IDX(x)                ((x) & GENMASK(3, 0))
#define VCAP_CORE_IDX_CORE_IDX_M                 GENMASK(3, 0)
#define VCAP_CORE_IDX_CORE_IDX_X(x)              ((x) & GENMASK(3, 0))

/*      VCAP:VCAP_CORE_MAP:CORE_MAP */
#define VCAP_CORE_MAP(t)          __REG(TARGET_VCAP,\
					t, 3, 912, 0, 1, 8, 4, 0, 1, 4)

#define VCAP_CORE_MAP_CORE_MAP(x)                ((x) & GENMASK(2, 0))
#define VCAP_CORE_MAP_CORE_MAP_M                 GENMASK(2, 0)
#define VCAP_CORE_MAP_CORE_MAP_X(x)              ((x) & GENMASK(2, 0))

/*      VCAP:VCAP_CONST:VER */
#define VCAP_VER(t)               __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 0, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_WIDTH */
#define VCAP_ENTRY_WIDTH(t)       __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 4, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_CNT */
#define VCAP_ENTRY_CNT(t)         __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 8, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_SWCNT */
#define VCAP_ENTRY_SWCNT(t)       __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 12, 0, 1, 4)

/*      VCAP:VCAP_CONST:ENTRY_TG_WIDTH */
#define VCAP_ENTRY_TG_WIDTH(t)    __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 16, 0, 1, 4)

/*      VCAP:VCAP_CONST:ACTION_DEF_CNT */
#define VCAP_ACTION_DEF_CNT(t)    __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 20, 0, 1, 4)

/*      VCAP:VCAP_CONST:ACTION_WIDTH */
#define VCAP_ACTION_WIDTH(t)      __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 24, 0, 1, 4)

/*      VCAP:VCAP_CONST:CNT_WIDTH */
#define VCAP_CNT_WIDTH(t)         __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 28, 0, 1, 4)

/*      VCAP:VCAP_CONST:CORE_CNT */
#define VCAP_CORE_CNT(t)          __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 32, 0, 1, 4)

/*      VCAP:VCAP_CONST:IF_CNT */
#define VCAP_IF_CNT(t)            __REG(TARGET_VCAP,\
					t, 3, 924, 0, 1, 40, 36, 0, 1, 4)


#endif /* _LAN966X_REGS_H_ */
