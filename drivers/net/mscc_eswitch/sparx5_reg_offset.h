/* SPDX-License-Identifier: (GPL-2.0+ OR MIT) */
/*
 * Copyright (c) 2018 Microsemi Corporation
 */

enum sparx5_field {
	FIELD_CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE,
	FIELD_LAST,
};

enum sparx5_ra {
	RA_CPU_RESET_PROT_STAT,
	RA_CPU_PROC_CTRL,
	RA_GCB_SOFT_RST,
	RA_GCB_HW_SGPIO_TO_SD_MAP_CFG,
	RA_LAST,
};

enum sparx5_rc {
	RC_ANA_AC_OWN_UPSID,
	RC_ANA_ACL_VCAP_S2_CFG,
	RC_ANA_ACL_OWN_UPSID,
	RC_ANA_AC_POL_POL_ACL_RATE_CFG,
	RC_ANA_AC_POL_POL_ACL_THRES_CFG,
	RC_ANA_AC_POL_POL_ACL_CTRL,
	RC_ANA_AC_POL_POL_PORT_THRES_CFG_0,
	RC_ANA_AC_POL_POL_PORT_THRES_CFG_1,
	RC_ANA_AC_POL_POL_PORT_RATE_CFG,
	RC_ANA_CL_OWN_UPSID,
	RC_ANA_L2_OWN_UPSID,
	RC_ASM_PORT_CFG,
	RC_DSM_BUF_CFG,
	RC_DSM_IPG_SHRINK_CFG,
	RC_DSM_DEV_TX_STOP_WM_CFG,
	RC_DSM_RX_PAUSE_CFG,
	RC_DSM_MAC_CFG,
	RC_DSM_MAC_ADDR_BASE_HIGH_CFG,
	RC_DSM_MAC_ADDR_BASE_LOW_CFG,
	RC_DSM_TAXI_CAL_CFG,
	RC_DSM_PREEMPT_CFG,
	RC_GCB_HW_SGPIO_TO_SD_MAP_CFG,
	RC_HSCH_PORT_MODE,
	RC_QFWD_SWITCH_PORT_MODE,
	RC_QSYS_PAUSE_CFG,
	RC_QSYS_ATOP,
	RC_QSYS_FWD_PRESSURE,
	RC_QSYS_CAL_AUTO,
	RC_REW_OWN_UPSID,
	RC_REW_RTAG_ETAG_CTRL,
	RC_LAST,
};

enum sparx5_ga {
	GA_ANA_AC_RAM_CTRL,
	GA_ANA_AC_PS_COMMON,
	GA_ANA_AC_MIRROR_PROBE,
	GA_ANA_AC_SRC,
	GA_ANA_AC_PGID,
	GA_ANA_AC_PS_STICKY,
	GA_ANA_AC_PS_STICKY_MASK,
	GA_ANA_AC_TSN_SF,
	GA_ANA_AC_TSN_SF_CFG,
	GA_ANA_AC_TSN_SF_STATUS,
	GA_ANA_AC_SG_ACCESS,
	GA_ANA_AC_SG_CONFIG,
	GA_ANA_AC_SG_STATUS,
	GA_ANA_AC_SG_STATUS_STICKY,
	GA_ANA_AC_STAT_GLOBAL_CFG_PORT,
	GA_ANA_AC_STAT_CNT_CFG_PORT,
	GA_ANA_AC_STAT_GLOBAL_CFG_ACL,
	GA_ANA_AC_STAT_CNT_CFG_ACL,
	GA_ANA_ACL_COMMON,
	GA_ANA_ACL_KEY_SEL,
	GA_ANA_ACL_CNT_B,
	GA_ANA_ACL_STICKY,
	GA_ANA_AC_POL_POL_ALL_CFG,
	GA_ANA_AC_POL_POL_PORT_CFG,
	GA_ANA_AC_POL_POL_PORT_CTRL,
	GA_ANA_AC_POL_COMMON_BDLB,
	GA_ANA_AC_POL_COMMON_BUM_SLB,
	GA_ANA_AC_SDLB_LBGRP_TBL,
	GA_ANA_CL_PORT,
	GA_ANA_CL_COMMON,
	GA_ANA_L2_COMMON,
	GA_ANA_L3_COMMON,
	GA_ANA_L3_VLAN_ARP_L3MC_STICKY,
	GA_ASM_CFG,
	GA_ASM_PFC_TIMER_CFG,
	GA_ASM_LBK_WM_CFG,
	GA_ASM_LBK_MISC_CFG,
	GA_ASM_RAM_CTRL,
	GA_DEV2G5_MM_CONFIG,
	GA_DEV2G5_MM_STATISTICS,
	GA_EACL_ES2_KEY_SELECT_PROFILE,
	GA_EACL_CNT_TBL,
	GA_EACL_POL_CFG,
	GA_EACL_ES2_STICKY,
	GA_EACL_RAM_CTRL,
	GA_GCB_SIO_CTRL,
	GA_HSCH_HSCH_L0_CFG,
	GA_HSCH_HSCH_DWRR,
	GA_HSCH_HSCH_MISC,
	GA_HSCH_HSCH_LEAK_LISTS,
	GA_HSCH_SYSTEM,
	GA_HSCH_MMGT,
	GA_HSCH_TAS_CONFIG,
	GA_HSCH_TAS_PROFILE_CFG,
	GA_HSCH_TAS_LIST_CFG,
	GA_HSCH_TAS_GCL_CFG,
	GA_HSCH_HSCH_TAS_STATE,
	GA_PTP_PTP_CFG,
	GA_PTP_PTP_TOD_DOMAINS,
	GA_PTP_PHASE_DETECTOR_CTRL,
	GA_QSYS_CALCFG,
	GA_QSYS_RAM_CTRL,
	GA_REW_COMMON,
	GA_REW_PORT,
	GA_REW_VOE_PORT_LM_CNT,
	GA_REW_RAM_CTRL,
	GA_VOP_RAM_CTRL,
	GA_XQS_SYSTEM,
	GA_XQS_QLIMIT_SHR,
	GA_LAST,
};

enum sparx5_gc {
	GC_ANA_AC_SRC,
	GC_ANA_AC_PGID,
	GC_ANA_AC_TSN_SF_CFG,
	GC_ANA_AC_STAT_CNT_CFG_PORT,
	GC_ANA_AC_STAT_CNT_CFG_ACL,
	GC_ANA_ACL_KEY_SEL,
	GC_ANA_ACL_CNT_A,
	GC_ANA_ACL_CNT_B,
	GC_ANA_AC_POL_POL_PORT_CTRL,
	GC_ANA_AC_SDLB_LBGRP_TBL,
	GC_ANA_AC_SDLB_LBSET_TBL,
	GC_ANA_CL_PORT,
	GC_ANA_L2_ISDX_LIMIT,
	GC_ANA_L2_ISDX,
	GC_ANA_L3_VLAN,
	GC_ASM_DEV_STATISTICS,
	GC_EACL_ES2_KEY_SELECT_PROFILE,
	GC_EACL_CNT_TBL,
	GC_GCB_SIO_CTRL,
	GC_HSCH_HSCH_L0_CFG,
	GC_HSCH_HSCH_CFG,
	GC_HSCH_HSCH_DWRR,
	GC_HSCH_TAS_PROFILE_CFG,
	GC_PTP_PTP_PINS,
	GC_PTP_PHASE_DETECTOR_CTRL,
	GC_REW_PORT,
	GC_REW_VOE_PORT_LM_CNT,
	GC_LAST,
};

enum sparx5_gw {
	GW_ANA_AC_SRC,
	GW_ANA_L2_COMMON,
	GW_ASM_CFG,
	GW_CPU_CPU_REGS,
	GW_FDMA_FDMA,
	GW_GCB_CHIP_REGS,
	GW_HSCH_TAS_CONFIG,
	GW_HSCH_TAS_PROFILE_CFG,
	GW_HSCH_TAS_GCL_CFG,
	GW_PTP_PHASE_DETECTOR_CTRL,
	GW_QSYS_PAUSE_CFG,
	GW_LAST,
};

extern const unsigned int sparx5_reg_addr[RA_LAST];
extern const unsigned int sparx5_reg_cnt[RC_LAST];
extern const unsigned int sparx5_reggrp_addr[GA_LAST];
extern const unsigned int sparx5_reggrp_cnt[GC_LAST];
extern const unsigned int sparx5_reggrp_sz[GW_LAST];
extern const unsigned int sparx5_regfield_addr[FIELD_LAST];
