/* SPDX-License-Identifier: (GPL-2.0+ OR MIT) */
/*
 * Copyright (c) 2018 Microsemi Corporation
 */

#include <linux/bitfield.h>

#define GRP_ADDR(o)   priv->data->regs.reggrp_addr[o]
#define GRP_CNT(o)    priv->data->regs.reggrp_cnt[o]
#define GRP_SIZE(o)   priv->data->regs.reggrp_size[o]
#define REG_ADDR(o)   priv->data->regs.reg_addr[o]
#define REG_CNT(o)    priv->data->regs.reg_cnt[o]
#define FIELD_ADDR(o) priv->data->regs.regfield_addr[o]

#define __REG(...) __VA_ARGS__

/* RAM init regs */
#define ANA_AC_RAM_INIT                                                      \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_RAM_CTRL), 0, 1, 4, 0, \
	      0, 1, 4)
#define QSYS_RAM_INIT                                                          \
	__REG(TARGET_QSYS, 0, 1, GRP_ADDR(GA_QSYS_RAM_CTRL), 0, 1, 4, 0, 0, 1, \
	      4)
#define ASM_RAM_INIT \
	__REG(TARGET_ASM, 0, 1, GRP_ADDR(GA_ASM_RAM_CTRL), 0, 1, 4, 0, 0, 1, 4)
#define REW_RAM_INIT \
	__REG(TARGET_REW, 0, 1, GRP_ADDR(GA_REW_RAM_CTRL), 0, 1, 4, 0, 0, 1, 4)
#define DSM_RAM_INIT __REG(TARGET_DSM, 0, 1, 0, 0, 1, 4, 0, 0, 1, 4)
#define EACL_RAM_INIT                                                          \
	__REG(TARGET_EACL, 0, 1, GRP_ADDR(GA_EACL_RAM_CTRL), 0, 1, 4, 0, 0, 1, \
	      4)
#define VCAP_SUPER_RAM_INIT \
	__REG(TARGET_VCAP_SUPER, 0, 1, 1120, 0, 1, 4, 0, 0, 1, 4)
#define VOP_RAM_INIT \
	__REG(TARGET_VOP, 0, 1, GRP_ADDR(GA_VOP_RAM_CTRL), 0, 1, 4, 0, 0, 1, 4)

/* ANA_AC:STAT_GLOBAL_CFG_PORT:STAT_RESET */
#define ANA_AC_STAT_RESET                                                    \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_STAT_GLOBAL_CFG_PORT), \
	      0, 1, 20, 16, 0, 1, 4)

/* ASM:CFG:STAT_CFG */
#define ASM_STAT_CFG                                        \
	__REG(TARGET_ASM, 0, 1, GRP_ADDR(GA_ASM_CFG), 0, 1, \
	      GRP_SIZE(GW_ASM_CFG), 0, 0, 1, 4)

/* QSYS:CALCFG:CAL_AUTO */
#define QSYS_CAL_AUTO(r)                                                   \
	__REG(TARGET_QSYS, 0, 1, GRP_ADDR(GA_QSYS_CALCFG), 0, 1, 40, 0, r, \
	      REG_CNT(RC_QSYS_CAL_AUTO), 4)

/* QSYS:CALCFG:CAL_CTRL */
#define QSYS_CAL_CTRL                                                          \
	__REG(TARGET_QSYS, 0, 1, GRP_ADDR(GA_QSYS_CALCFG), 0, 1, 40, 36, 0, 1, \
	      4)

#define QSYS_CAL_CTRL_CAL_MODE GENMASK(14, 11)
#define QSYS_CAL_CTRL_CAL_MODE_SET(x) FIELD_PREP(QSYS_CAL_CTRL_CAL_MODE, x)
#define QSYS_CAL_CTRL_CAL_MODE_GET(x) FIELD_GET(QSYS_CAL_CTRL_CAL_MODE, x)

/* PORT_CONF:HW_CFG:DEV5G_MODES */
#define PORT_CONF_DEV5G_MODES \
	__REG(TARGET_PORT_CONF, 0, 1, 0, 0, 1, 24, 0, 0, 1, 4)

#define PORT_CONF_DEV5G_MODES_DEV5G_D64_MODE BIT(12)
#define PORT_CONF_DEV5G_MODES_DEV5G_D64_MODE_SET(x) \
	FIELD_PREP(PORT_CONF_DEV5G_MODES_DEV5G_D64_MODE, x)
#define PORT_CONF_DEV5G_MODES_DEV5G_D64_MODE_GET(x) \
	FIELD_GET(PORT_CONF_DEV5G_MODES_DEV5G_D64_MODE, x)

/* PORT_CONF:HW_CFG:DEV10G_MODES */
#define PORT_CONF_DEV10G_MODES \
	__REG(TARGET_PORT_CONF, 0, 1, 0, 0, 1, 24, 4, 0, 1, 4)

/* DSM:CFG:DEV_TX_STOP_WM_CFG */
#define DSM_DEV_TX_STOP_WM_CFG(r)                        \
	__REG(TARGET_DSM, 0, 1, 20, 0, 1, 3528, 1360, r, \
	      REG_CNT(RC_DSM_DEV_TX_STOP_WM_CFG), 4)

#define DSM_DEV_TX_STOP_WM_CFG_DEV10G_SHADOW_ENA BIT(8)
#define DSM_DEV_TX_STOP_WM_CFG_DEV10G_SHADOW_ENA_SET(x) \
	FIELD_PREP(DSM_DEV_TX_STOP_WM_CFG_DEV10G_SHADOW_ENA, x)
#define DSM_DEV_TX_STOP_WM_CFG_DEV10G_SHADOW_ENA_GET(x) \
	FIELD_GET(DSM_DEV_TX_STOP_WM_CFG_DEV10G_SHADOW_ENA, x)

/* PORT_CONF:HW_CFG:QSGMII_ENA */
#define PORT_CONF_QSGMII_ENA \
	__REG(TARGET_PORT_CONF, 0, 1, 0, 0, 1, 24, 12, 0, 1, 4)

/* PORT_CONF:USGMII_CFG_STAT:USGMII_CFG */
#define PORT_CONF_USGMII_CFG(g) \
	__REG(TARGET_PORT_CONF, 0, 1, 72, g, 6, 8, 0, 0, 1, 4)

/* DEV1G:DEV_CFG_STATUS:DEV_RST_CTRL */
#define DEV2G5_DEV_RST_CTRL(t) \
	__REG(TARGET_DEV2G5, t, 65, 0, 0, 1, 36, 0, 0, 1, 4)

#define DEV2G5_DEV_RST_CTRL_SPEED_SEL GENMASK(22, 20)
#define DEV2G5_DEV_RST_CTRL_SPEED_SEL_SET(x) \
	FIELD_PREP(DEV2G5_DEV_RST_CTRL_SPEED_SEL, x)
#define DEV2G5_DEV_RST_CTRL_SPEED_SEL_GET(x) \
	FIELD_GET(DEV2G5_DEV_RST_CTRL_SPEED_SEL, x)

#define DEV2G5_DEV_RST_CTRL_USX_PCS_TX_RST BIT(17)
#define DEV2G5_DEV_RST_CTRL_USX_PCS_TX_RST_SET(x) \
	FIELD_PREP(DEV2G5_DEV_RST_CTRL_USX_PCS_TX_RST, x)
#define DEV2G5_DEV_RST_CTRL_USX_PCS_TX_RST_GET(x) \
	FIELD_GET(DEV2G5_DEV_RST_CTRL_USX_PCS_TX_RST, x)

#define DEV2G5_DEV_RST_CTRL_USX_PCS_RX_RST BIT(16)
#define DEV2G5_DEV_RST_CTRL_USX_PCS_RX_RST_SET(x) \
	FIELD_PREP(DEV2G5_DEV_RST_CTRL_USX_PCS_RX_RST, x)
#define DEV2G5_DEV_RST_CTRL_USX_PCS_RX_RST_GET(x) \
	FIELD_GET(DEV2G5_DEV_RST_CTRL_USX_PCS_RX_RST, x)

#define DEV2G5_DEV_RST_CTRL_PCS_TX_RST BIT(12)
#define DEV2G5_DEV_RST_CTRL_PCS_TX_RST_SET(x) \
	FIELD_PREP(DEV2G5_DEV_RST_CTRL_PCS_TX_RST, x)
#define DEV2G5_DEV_RST_CTRL_PCS_TX_RST_GET(x) \
	FIELD_GET(DEV2G5_DEV_RST_CTRL_PCS_TX_RST, x)

/* ANA_AC:PGID:PGID_CFG */
#define ANA_AC_PGID_CFG(g)                                      \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_PGID), g, \
	      GRP_CNT(GC_ANA_AC_PGID), 16, 0, 0, 1, 4)

/* SPARX5 ONLY */
/* ANA_AC:PGID:PGID_CFG1 */
#define ANA_AC_PGID_CFG1(g)                                     \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_PGID), g, \
	      GRP_CNT(GC_ANA_AC_PGID), 16, 4, 0, 1, 4)

/* SPARX5 ONLY */
/* ANA_AC:PGID:PGID_CFG2 */
#define ANA_AC_PGID_CFG2(g)                                     \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_PGID), g, \
	      GRP_CNT(GC_ANA_AC_PGID), 16, 8, 0, 1, 4)

/* ANA_AC:SRC:SRC_CFG */
#define ANA_AC_SRC_CFG(g)                                      \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_SRC), g, \
	      GRP_CNT(GC_ANA_AC_SRC), GRP_SIZE(GW_ANA_AC_SRC), 0, 0, 1, 4)

/* SPARX5 ONLY */
/* ANA_AC:SRC:SRC_CFG1 */
#define ANA_AC_SRC_CFG1(g)                                     \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_SRC), g, \
	      GRP_CNT(GC_ANA_AC_SRC), GRP_SIZE(GW_ANA_AC_SRC), 4, 0, 1, 4)

/* SPARX5 ONLY */
/* ANA_AC:SRC:SRC_CFG2 */
#define ANA_AC_SRC_CFG2(g)                                     \
	__REG(TARGET_ANA_AC, 0, 1, GRP_ADDR(GA_ANA_AC_SRC), g, \
	      GRP_CNT(GC_ANA_AC_SRC), GRP_SIZE(GW_ANA_AC_SRC), 8, 0, 1, 4)

/* XQS:SYSTEM:STAT_CFG */
#define XQS_STAT_CFG                                                           \
	__REG(TARGET_XQS, 0, 1, GRP_ADDR(GA_XQS_SYSTEM), 0, 1, 872, 860, 0, 1, \
	      4)

/* ANA_CL:PORT:VLAN_CTRL */
#define ANA_CL_VLAN_CTRL(g)                                     \
	__REG(TARGET_ANA_CL, 0, 1, GRP_ADDR(GA_ANA_CL_PORT), g, \
	      GRP_CNT(GC_ANA_CL_PORT), 512, 32, 0, 1, 4)

#define ANA_CL_VLAN_CTRL_VLAN_AWARE_ENA BIT(19)
#define ANA_CL_VLAN_CTRL_VLAN_AWARE_ENA_SET(x) \
	FIELD_PREP(ANA_CL_VLAN_CTRL_VLAN_AWARE_ENA, x)
#define ANA_CL_VLAN_CTRL_VLAN_AWARE_ENA_GET(x) \
	FIELD_GET(ANA_CL_VLAN_CTRL_VLAN_AWARE_ENA, x)

#define ANA_CL_VLAN_CTRL_VLAN_POP_CNT GENMASK(18, 17)
#define ANA_CL_VLAN_CTRL_VLAN_POP_CNT_SET(x) \
	FIELD_PREP(ANA_CL_VLAN_CTRL_VLAN_POP_CNT, x)
#define ANA_CL_VLAN_CTRL_VLAN_POP_CNT_GET(x) \
	FIELD_GET(ANA_CL_VLAN_CTRL_VLAN_POP_CNT, x)

#define ANA_CL_VLAN_CTRL_PORT_VID GENMASK(11, 0)
#define ANA_CL_VLAN_CTRL_PORT_VID_SET(x) \
	FIELD_PREP(ANA_CL_VLAN_CTRL_PORT_VID, x)
#define ANA_CL_VLAN_CTRL_PORT_VID_GET(x) FIELD_GET(ANA_CL_VLAN_CTRL_PORT_VID, x)

/* ANA_L3:VLAN:VLAN_CFG */
#define ANA_L3_VLAN_CFG(g)                                                     \
	__REG(TARGET_ANA_L3, 0, 1, 0, g, GRP_CNT(GC_ANA_L3_VLAN), 64, 8, 0, 1, \
	      4)

#define ANA_L3_VLAN_CFG_VLAN_FID GENMASK(20, 8)
#define ANA_L3_VLAN_CFG_VLAN_FID_SET(x) FIELD_PREP(ANA_L3_VLAN_CFG_VLAN_FID, x)
#define ANA_L3_VLAN_CFG_VLAN_FID_GET(x) FIELD_GET(ANA_L3_VLAN_CFG_VLAN_FID, x)

#define ANA_L3_VLAN_CFG_VLAN_LRN_DIS BIT(3)
#define ANA_L3_VLAN_CFG_VLAN_LRN_DIS_SET(x) \
	FIELD_PREP(ANA_L3_VLAN_CFG_VLAN_LRN_DIS, x)
#define ANA_L3_VLAN_CFG_VLAN_LRN_DIS_GET(x) \
	FIELD_GET(ANA_L3_VLAN_CFG_VLAN_LRN_DIS, x)

/* ANA_L3:COMMON:VLAN_CTRL */
#define ANA_L3_VLAN_CTRL                                                     \
	__REG(TARGET_ANA_L3, 0, 1, GRP_ADDR(GA_ANA_L3_COMMON), 0, 1, 184, 4, \
	      0, 1, 4)

#define ANA_L3_VLAN_CTRL_VLAN_ENA BIT(0)
#define ANA_L3_VLAN_CTRL_VLAN_ENA_SET(x) \
	FIELD_PREP(ANA_L3_VLAN_CTRL_VLAN_ENA, x)
#define ANA_L3_VLAN_CTRL_VLAN_ENA_GET(x) FIELD_GET(ANA_L3_VLAN_CTRL_VLAN_ENA, x)

/* HSCH:MMGT:RESET_CFG */
#define HSCH_RESET_CFG \
	__REG(TARGET_HSCH, 0, 1, GRP_ADDR(GA_HSCH_MMGT), 0, 1, 16, 8, 0, 1, 4)

#define HSCH_RESET_CFG_CORE_ENA BIT(0)
#define HSCH_RESET_CFG_CORE_ENA_SET(x) FIELD_PREP(HSCH_RESET_CFG_CORE_ENA, x)
#define HSCH_RESET_CFG_CORE_ENA_GET(x) FIELD_GET(HSCH_RESET_CFG_CORE_ENA, x)

/* ASM:CFG:PORT_CFG */
#define ASM_PORT_CFG(r)                                     \
	__REG(TARGET_ASM, 0, 1, GRP_ADDR(GA_ASM_CFG), 0, 1, \
	      GRP_SIZE(GW_ASM_CFG), 540, r, REG_CNT(RC_ASM_PORT_CFG), 4)

#define ASM_PORT_CFG_NO_PREAMBLE_ENA BIT(9)
#define ASM_PORT_CFG_NO_PREAMBLE_ENA_SET(x) \
	FIELD_PREP(ASM_PORT_CFG_NO_PREAMBLE_ENA, x)
#define ASM_PORT_CFG_NO_PREAMBLE_ENA_GET(x) \
	FIELD_GET(ASM_PORT_CFG_NO_PREAMBLE_ENA, x)

#define ASM_PORT_CFG_PAD_ENA BIT(6)
#define ASM_PORT_CFG_PAD_ENA_SET(x) FIELD_PREP(ASM_PORT_CFG_PAD_ENA, x)
#define ASM_PORT_CFG_PAD_ENA_GET(x) FIELD_GET(ASM_PORT_CFG_PAD_ENA, x)

#define ASM_PORT_CFG_INJ_FORMAT_CFG GENMASK(3, 2)
#define ASM_PORT_CFG_INJ_FORMAT_CFG_SET(x) \
	FIELD_PREP(ASM_PORT_CFG_INJ_FORMAT_CFG, x)
#define ASM_PORT_CFG_INJ_FORMAT_CFG_GET(x) \
	FIELD_GET(ASM_PORT_CFG_INJ_FORMAT_CFG, x)

/* DEVCPU_QS:INJ:INJ_GRP_CFG */
#define QS_INJ_GRP_CFG(r) __REG(TARGET_QS, 0, 1, 36, 0, 1, 40, 0, r, 2, 4)

#define QS_INJ_GRP_CFG_MODE GENMASK(3, 2)
#define QS_INJ_GRP_CFG_MODE_SET(x) FIELD_PREP(QS_INJ_GRP_CFG_MODE, x)
#define QS_INJ_GRP_CFG_MODE_GET(x) FIELD_GET(QS_INJ_GRP_CFG_MODE, x)

#define QS_INJ_GRP_CFG_BYTE_SWAP BIT(0)
#define QS_INJ_GRP_CFG_BYTE_SWAP_SET(x) FIELD_PREP(QS_INJ_GRP_CFG_BYTE_SWAP, x)
#define QS_INJ_GRP_CFG_BYTE_SWAP_GET(x) FIELD_GET(QS_INJ_GRP_CFG_BYTE_SWAP, x)

/* DEVCPU_QS:XTR:XTR_GRP_CFG */
#define QS_XTR_GRP_CFG(r) __REG(TARGET_QS, 0, 1, 0, 0, 1, 36, 0, r, 2, 4)

#define QS_XTR_GRP_CFG_MODE GENMASK(3, 2)
#define QS_XTR_GRP_CFG_MODE_SET(x) FIELD_PREP(QS_XTR_GRP_CFG_MODE, x)
#define QS_XTR_GRP_CFG_MODE_GET(x) FIELD_GET(QS_XTR_GRP_CFG_MODE, x)

#define QS_XTR_GRP_CFG_STATUS_WORD_POS BIT(1)
#define QS_XTR_GRP_CFG_STATUS_WORD_POS_SET(x) \
	FIELD_PREP(QS_XTR_GRP_CFG_STATUS_WORD_POS, x)
#define QS_XTR_GRP_CFG_STATUS_WORD_POS_GET(x) \
	FIELD_GET(QS_XTR_GRP_CFG_STATUS_WORD_POS, x)

#define QS_XTR_GRP_CFG_BYTE_SWAP BIT(0)
#define QS_XTR_GRP_CFG_BYTE_SWAP_SET(x) FIELD_PREP(QS_XTR_GRP_CFG_BYTE_SWAP, x)
#define QS_XTR_GRP_CFG_BYTE_SWAP_GET(x) FIELD_GET(QS_XTR_GRP_CFG_BYTE_SWAP, x)

/* QFWD:SYSTEM:SWITCH_PORT_MODE */
#define QFWD_SWITCH_PORT_MODE(r)                     \
	__REG(TARGET_QFWD, 0, 1, 0, 0, 1, 340, 0, r, \
	      REG_CNT(RC_QFWD_SWITCH_PORT_MODE), 4)

#define QFWD_SWITCH_PORT_MODE_PORT_ENA BIT(19)
#define QFWD_SWITCH_PORT_MODE_PORT_ENA_SET(x) \
	FIELD_PREP(QFWD_SWITCH_PORT_MODE_PORT_ENA, x)
#define QFWD_SWITCH_PORT_MODE_PORT_ENA_GET(x) \
	FIELD_GET(QFWD_SWITCH_PORT_MODE_PORT_ENA, x)

/* ANA_CL:PORT:FILTER_CTRL */
#define ANA_CL_FILTER_CTRL(g)                                   \
	__REG(TARGET_ANA_CL, 0, 1, GRP_ADDR(GA_ANA_CL_PORT), g, \
	      GRP_CNT(GC_ANA_CL_PORT), 512, 4, 0, 1, 4)

#define ANA_CL_FILTER_CTRL_FORCE_FCS_UPDATE_ENA BIT(0)
#define ANA_CL_FILTER_CTRL_FORCE_FCS_UPDATE_ENA_SET(x) \
	FIELD_PREP(ANA_CL_FILTER_CTRL_FORCE_FCS_UPDATE_ENA, x)
#define ANA_CL_FILTER_CTRL_FORCE_FCS_UPDATE_ENA_GET(x) \
	FIELD_GET(ANA_CL_FILTER_CTRL_FORCE_FCS_UPDATE_ENA, x)

/* ANA_L2:COMMON:FWD_CFG */
#define ANA_L2_FWD_CFG                                               \
	__REG(TARGET_ANA_L2, 0, 1, GRP_ADDR(GA_ANA_L2_COMMON), 0, 1, \
	      GRP_SIZE(GW_ANA_L2_COMMON), 0, 0, 1, 4)

#define ANA_L2_FWD_CFG_CPU_DMAC_COPY_ENA BIT(6)
#define ANA_L2_FWD_CFG_CPU_DMAC_COPY_ENA_SET(x) \
	FIELD_PREP(ANA_L2_FWD_CFG_CPU_DMAC_COPY_ENA, x)
#define ANA_L2_FWD_CFG_CPU_DMAC_COPY_ENA_GET(x) \
	FIELD_GET(ANA_L2_FWD_CFG_CPU_DMAC_COPY_ENA, x)

/* DEV1G:PCS1G_CFG_STATUS:PCS1G_CFG */
#define DEV2G5_PCS1G_CFG(t) \
	__REG(TARGET_DEV2G5, t, 65, 88, 0, 1, 68, 0, 0, 1, 4)

#define DEV2G5_PCS1G_CFG_PCS_ENA BIT(0)
#define DEV2G5_PCS1G_CFG_PCS_ENA_SET(x) FIELD_PREP(DEV2G5_PCS1G_CFG_PCS_ENA, x)
#define DEV2G5_PCS1G_CFG_PCS_ENA_GET(x) FIELD_GET(DEV2G5_PCS1G_CFG_PCS_ENA, x)

/* DEV1G:MAC_CFG_STATUS:MAC_ENA_CFG */
#define DEV2G5_MAC_ENA_CFG(t) \
	__REG(TARGET_DEV2G5, t, 65, 52, 0, 1, 36, 0, 0, 1, 4)

#define DEV2G5_MAC_ENA_CFG_RX_ENA BIT(4)
#define DEV2G5_MAC_ENA_CFG_RX_ENA_SET(x) \
	FIELD_PREP(DEV2G5_MAC_ENA_CFG_RX_ENA, x)
#define DEV2G5_MAC_ENA_CFG_RX_ENA_GET(x) FIELD_GET(DEV2G5_MAC_ENA_CFG_RX_ENA, x)

#define DEV2G5_MAC_ENA_CFG_TX_ENA BIT(0)
#define DEV2G5_MAC_ENA_CFG_TX_ENA_SET(x) \
	FIELD_PREP(DEV2G5_MAC_ENA_CFG_TX_ENA, x)
#define DEV2G5_MAC_ENA_CFG_TX_ENA_GET(x) FIELD_GET(DEV2G5_MAC_ENA_CFG_TX_ENA, x)

/*DEV1G:USXGMII_ANEG_CFG_STATUS:USXGMII_PCS_SD_CFG */
#define DEV2G5_USXGMII_PCS_SD_CFG(t) \
	__REG(TARGET_DEV2G5, t, 65, 36, 0, 1, 16, 8, 0, 1, 4)

/* DEV1G:PCS1G_CFG_STATUS:PCS1G_MODE_CFG */
#define DEV2G5_PCS1G_MODE_CFG(t) \
	__REG(TARGET_DEV2G5, t, 65, 88, 0, 1, 68, 4, 0, 1, 4)

#define DEV2G5_PCS1G_MODE_CFG_SGMII_MODE_ENA BIT(0)
#define DEV2G5_PCS1G_MODE_CFG_SGMII_MODE_ENA_SET(x) \
	FIELD_PREP(DEV2G5_PCS1G_MODE_CFG_SGMII_MODE_ENA, x)
#define DEV2G5_PCS1G_MODE_CFG_SGMII_MODE_ENA_GET(x) \
	FIELD_GET(DEV2G5_PCS1G_MODE_CFG_SGMII_MODE_ENA, x)

/* DEV1G:PCS1G_CFG_STATUS:PCS1G_ANEG_CFG */
#define DEV2G5_PCS1G_ANEG_CFG(t) \
	__REG(TARGET_DEV2G5, t, 65, 88, 0, 1, 68, 12, 0, 1, 4)

#define DEV2G5_PCS1G_ANEG_CFG_ADV_ABILITY GENMASK(31, 16)
#define DEV2G5_PCS1G_ANEG_CFG_ADV_ABILITY_SET(x) \
	FIELD_PREP(DEV2G5_PCS1G_ANEG_CFG_ADV_ABILITY, x)
#define DEV2G5_PCS1G_ANEG_CFG_ADV_ABILITY_GET(x) \
	FIELD_GET(DEV2G5_PCS1G_ANEG_CFG_ADV_ABILITY, x)

#define DEV2G5_PCS1G_ANEG_CFG_SW_RESOLVE_ENA BIT(8)
#define DEV2G5_PCS1G_ANEG_CFG_SW_RESOLVE_ENA_SET(x) \
	FIELD_PREP(DEV2G5_PCS1G_ANEG_CFG_SW_RESOLVE_ENA, x)
#define DEV2G5_PCS1G_ANEG_CFG_SW_RESOLVE_ENA_GET(x) \
	FIELD_GET(DEV2G5_PCS1G_ANEG_CFG_SW_RESOLVE_ENA, x)

#define DEV2G5_PCS1G_ANEG_CFG_ANEG_RESTART_ONE_SHOT BIT(1)
#define DEV2G5_PCS1G_ANEG_CFG_ANEG_RESTART_ONE_SHOT_SET(x) \
	FIELD_PREP(DEV2G5_PCS1G_ANEG_CFG_ANEG_RESTART_ONE_SHOT, x)
#define DEV2G5_PCS1G_ANEG_CFG_ANEG_RESTART_ONE_SHOT_GET(x) \
	FIELD_GET(DEV2G5_PCS1G_ANEG_CFG_ANEG_RESTART_ONE_SHOT, x)

#define DEV2G5_PCS1G_ANEG_CFG_ANEG_ENA BIT(0)
#define DEV2G5_PCS1G_ANEG_CFG_ANEG_ENA_SET(x) \
	FIELD_PREP(DEV2G5_PCS1G_ANEG_CFG_ANEG_ENA, x)
#define DEV2G5_PCS1G_ANEG_CFG_ANEG_ENA_GET(x) \
	FIELD_GET(DEV2G5_PCS1G_ANEG_CFG_ANEG_ENA, x)

/* DEV1G:MAC_CFG_STATUS:MAC_IFG_CFG */
#define DEV2G5_MAC_IFG_CFG(t) \
	__REG(TARGET_DEV2G5, t, 65, 52, 0, 1, 36, 24, 0, 1, 4)

#define DEV2G5_MAC_IFG_CFG_RESTORE_OLD_IPG_CHECK BIT(17)
#define DEV2G5_MAC_IFG_CFG_RESTORE_OLD_IPG_CHECK_SET(x) \
	FIELD_PREP(DEV2G5_MAC_IFG_CFG_RESTORE_OLD_IPG_CHECK, x)
#define DEV2G5_MAC_IFG_CFG_RESTORE_OLD_IPG_CHECK_GET(x) \
	FIELD_GET(DEV2G5_MAC_IFG_CFG_RESTORE_OLD_IPG_CHECK, x)

#define DEV2G5_MAC_IFG_CFG_TX_IFG GENMASK(12, 8)
#define DEV2G5_MAC_IFG_CFG_TX_IFG_SET(x) \
	FIELD_PREP(DEV2G5_MAC_IFG_CFG_TX_IFG, x)
#define DEV2G5_MAC_IFG_CFG_TX_IFG_GET(x) FIELD_GET(DEV2G5_MAC_IFG_CFG_TX_IFG, x)

#define DEV2G5_MAC_IFG_CFG_RX_IFG2 GENMASK(7, 4)
#define DEV2G5_MAC_IFG_CFG_RX_IFG2_SET(x) \
	FIELD_PREP(DEV2G5_MAC_IFG_CFG_RX_IFG2, x)
#define DEV2G5_MAC_IFG_CFG_RX_IFG2_GET(x) \
	FIELD_GET(DEV2G5_MAC_IFG_CFG_RX_IFG2, x)

#define DEV2G5_MAC_IFG_CFG_RX_IFG1 GENMASK(3, 0)
#define DEV2G5_MAC_IFG_CFG_RX_IFG1_SET(x) \
	FIELD_PREP(DEV2G5_MAC_IFG_CFG_RX_IFG1, x)
#define DEV2G5_MAC_IFG_CFG_RX_IFG1_GET(x) \
	FIELD_GET(DEV2G5_MAC_IFG_CFG_RX_IFG1, x)

/* LRN:COMMON:COMMON_ACCESS_CTRL */
#define LRN_COMMON_ACCESS_CTRL __REG(TARGET_LRN, 0, 1, 0, 0, 1, 72, 0, 0, 1, 4)

#define LRN_COMMON_ACCESS_CTRL_CPU_ACCESS_CMD GENMASK(4, 1)
#define LRN_COMMON_ACCESS_CTRL_CPU_ACCESS_CMD_SET(x) \
	FIELD_PREP(LRN_COMMON_ACCESS_CTRL_CPU_ACCESS_CMD, x)
#define LRN_COMMON_ACCESS_CTRL_CPU_ACCESS_CMD_GET(x) \
	FIELD_GET(LRN_COMMON_ACCESS_CTRL_CPU_ACCESS_CMD, x)

#define LRN_COMMON_ACCESS_CTRL_MAC_TABLE_ACCESS_SHOT BIT(0)
#define LRN_COMMON_ACCESS_CTRL_MAC_TABLE_ACCESS_SHOT_SET(x) \
	FIELD_PREP(LRN_COMMON_ACCESS_CTRL_MAC_TABLE_ACCESS_SHOT, x)
#define LRN_COMMON_ACCESS_CTRL_MAC_TABLE_ACCESS_SHOT_GET(x) \
	FIELD_GET(LRN_COMMON_ACCESS_CTRL_MAC_TABLE_ACCESS_SHOT, x)

/* LRN:COMMON:MAC_ACCESS_CFG_0 */
#define LRN_MAC_ACCESS_CFG_0 __REG(TARGET_LRN, 0, 1, 0, 0, 1, 72, 4, 0, 1, 4)

/* LRN:COMMON:MAC_ACCESS_CFG_1 */
#define LRN_MAC_ACCESS_CFG_1 __REG(TARGET_LRN, 0, 1, 0, 0, 1, 72, 8, 0, 1, 4)

/* LRN:COMMON:MAC_ACCESS_CFG_2 */
#define LRN_MAC_ACCESS_CFG_2 __REG(TARGET_LRN, 0, 1, 0, 0, 1, 72, 12, 0, 1, 4)

#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_QU GENMASK(26, 24)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_QU_SET(x) \
	FIELD_PREP(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_QU, x)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_QU_GET(x) \
	FIELD_GET(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_QU, x)

#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_COPY BIT(23)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_COPY_SET(x) \
	FIELD_PREP(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_COPY, x)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_COPY_GET(x) \
	FIELD_GET(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_CPU_COPY, x)

#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_LOCKED BIT(16)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_LOCKED_SET(x) \
	FIELD_PREP(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_LOCKED, x)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_LOCKED_GET(x) \
	FIELD_GET(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_LOCKED, x)

#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_VLD BIT(15)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_VLD_SET(x) \
	FIELD_PREP(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_VLD, x)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_VLD_GET(x) \
	FIELD_GET(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_VLD, x)

#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR_TYPE GENMASK(14, 12)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR_TYPE_SET(x) \
	FIELD_PREP(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR_TYPE, x)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR_TYPE_GET(x) \
	FIELD_GET(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR_TYPE, x)

#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR GENMASK(11, 0)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR_SET(x) \
	FIELD_PREP(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR, x)
#define LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR_GET(x) \
	FIELD_GET(LRN_MAC_ACCESS_CFG_2_MAC_ENTRY_ADDR, x)

#define LRN_MAC_ACCESS_CFG_3_MAC_ENTRY_ISDX_LIMIT_IDX GENMASK(10, 0)
#define LRN_MAC_ACCESS_CFG_3_MAC_ENTRY_ISDX_LIMIT_IDX_SET(x) \
	FIELD_PREP(LRN_MAC_ACCESS_CFG_3_MAC_ENTRY_ISDX_LIMIT_IDX, x)
#define LRN_MAC_ACCESS_CFG_3_MAC_ENTRY_ISDX_LIMIT_IDX_GET(x) \
	FIELD_GET(LRN_MAC_ACCESS_CFG_3_MAC_ENTRY_ISDX_LIMIT_IDX, x)

/* LRN:COMMON:SCAN_NEXT_CFG */
#define LRN_SCAN_NEXT_CFG __REG(TARGET_LRN, 0, 1, 0, 0, 1, 72, 20, 0, 1, 4)

#define LRN_SCAN_NEXT_CFG_SCAN_NEXT_UNTIL_FOUND_ENA BIT(10)
#define LRN_SCAN_NEXT_CFG_SCAN_NEXT_UNTIL_FOUND_ENA_SET(x) \
	FIELD_PREP(LRN_SCAN_NEXT_CFG_SCAN_NEXT_UNTIL_FOUND_ENA, x)
#define LRN_SCAN_NEXT_CFG_SCAN_NEXT_UNTIL_FOUND_ENA_GET(x) \
	FIELD_GET(LRN_SCAN_NEXT_CFG_SCAN_NEXT_UNTIL_FOUND_ENA, x)

#define LRN_SCAN_NEXT_CFG_SCAN_NEXT_IGNORE_LOCKED_ENA BIT(7)
#define LRN_SCAN_NEXT_CFG_SCAN_NEXT_IGNORE_LOCKED_ENA_SET(x) \
	FIELD_PREP(LRN_SCAN_NEXT_CFG_SCAN_NEXT_IGNORE_LOCKED_ENA, x)
#define LRN_SCAN_NEXT_CFG_SCAN_NEXT_IGNORE_LOCKED_ENA_GET(x) \
	FIELD_GET(LRN_SCAN_NEXT_CFG_SCAN_NEXT_IGNORE_LOCKED_ENA, x)

/* DEV1G:PCS1G_CFG_STATUS:PCS1G_LINK_STATUS */
#define DEV2G5_PCS1G_LINK_STATUS(t) \
	__REG(TARGET_DEV2G5, t, 65, 88, 0, 1, 68, 40, 0, 1, 4)

#define DEV2G5_PCS1G_LINK_STATUS_LINK_STATUS BIT(4)
#define DEV2G5_PCS1G_LINK_STATUS_LINK_STATUS_SET(x) \
	FIELD_PREP(DEV2G5_PCS1G_LINK_STATUS_LINK_STATUS, x)
#define DEV2G5_PCS1G_LINK_STATUS_LINK_STATUS_GET(x) \
	FIELD_GET(DEV2G5_PCS1G_LINK_STATUS_LINK_STATUS, x)

/* DEV1G:PCS1G_CFG_STATUS:PCS1G_ANEG_STATUS */
#define DEV2G5_PCS1G_ANEG_STATUS(t) \
	__REG(TARGET_DEV2G5, t, 65, 88, 0, 1, 68, 32, 0, 1, 4)

#define DEV2G5_PCS1G_ANEG_STATUS_ANEG_COMPLETE BIT(0)
#define DEV2G5_PCS1G_ANEG_STATUS_ANEG_COMPLETE_SET(x) \
	FIELD_PREP(DEV2G5_PCS1G_ANEG_STATUS_ANEG_COMPLETE, x)
#define DEV2G5_PCS1G_ANEG_STATUS_ANEG_COMPLETE_GET(x) \
	FIELD_GET(DEV2G5_PCS1G_ANEG_STATUS_ANEG_COMPLETE, x)

/*      CPU:CPU_REGS:RESET_PROT_STAT */
#define CPU_RESET_PROT_STAT       __REG(TARGET_CPU, 0, 1, 0, 0, 1, 204, \
					REG_ADDR(RA_CPU_RESET_PROT_STAT), 0, 1, 4)

#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE   FIELD_ADDR(FIELD_CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE)
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_SET(x)\
	FIELD_PREP(CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE, x)
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_GET(x)\
	FIELD_GET(CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE, x)

/*      DEVCPU_GCB:CHIP_REGS:SOFT_RST */
#define GCB_SOFT_RST              __REG(TARGET_GCB, 0, 1, 0, 0, 1, 424, \
					REG_ADDR(RA_GCB_SOFT_RST), 0, 1, 4)

#define GCB_SOFT_RST_SOFT_CHIP_RST               BIT(0)
#define GCB_SOFT_RST_SOFT_CHIP_RST_SET(x)\
	FIELD_PREP(GCB_SOFT_RST_SOFT_CHIP_RST, x)
#define GCB_SOFT_RST_SOFT_CHIP_RST_GET(x)\
	FIELD_GET(GCB_SOFT_RST_SOFT_CHIP_RST, x)

/* HSIOWRAP:XMII_CFG: */
#define HSIO_WRAP_XMII_CFG(g)     __REG(TARGET_HSIO, 0, 1, 116, g, 2, 20, 0, 0, 1, 4)

#define HSIO_WRAP_XMII_CFG_GPIO_XMII_CFG         GENMASK(2, 1)
#define HSIO_WRAP_XMII_CFG_GPIO_XMII_CFG_SET(x)\
	FIELD_PREP(HSIO_WRAP_XMII_CFG_GPIO_XMII_CFG, x)
#define HSIO_WRAP_XMII_CFG_GPIO_XMII_CFG_GET(x)\
	FIELD_GET(HSIO_WRAP_XMII_CFG_GPIO_XMII_CFG, x)

/* HSIOWRAP:XMII_CFG: */
#define HSIO_WRAP_RGMII_CFG(g)    __REG(TARGET_HSIO, 0, 1, 116, g, 2, 20, 4, 0, 1, 4)

#define HSIO_WRAP_RGMII_CFG_TX_CLK_CFG           GENMASK(4, 2)
#define HSIO_WRAP_RGMII_CFG_TX_CLK_CFG_SET(x)\
	FIELD_PREP(HSIO_WRAP_RGMII_CFG_TX_CLK_CFG, x)
#define HSIO_WRAP_RGMII_CFG_TX_CLK_CFG_GET(x)\
	FIELD_GET(HSIO_WRAP_RGMII_CFG_TX_CLK_CFG, x)

/* HSIOWRAP:XMII_CFG: */
#define HSIO_WRAP_DLL_CFG(g, r)   __REG(TARGET_HSIO, 0, 1, 116, g, 2, 20, 12, r, 2, 4)

#define HSIO_WRAP_DLL_CFG_DLL_ENA                BIT(19)
#define HSIO_WRAP_DLL_CFG_DLL_ENA_SET(x)\
	FIELD_PREP(HSIO_WRAP_DLL_CFG_DLL_ENA, x)
#define HSIO_WRAP_DLL_CFG_DLL_ENA_GET(x)\
	FIELD_GET(HSIO_WRAP_DLL_CFG_DLL_ENA, x)

#define HSIO_WRAP_DLL_CFG_DLL_CLK_ENA            BIT(18)
#define HSIO_WRAP_DLL_CFG_DLL_CLK_ENA_SET(x)\
	FIELD_PREP(HSIO_WRAP_DLL_CFG_DLL_CLK_ENA, x)
#define HSIO_WRAP_DLL_CFG_DLL_CLK_ENA_GET(x)\
	FIELD_GET(HSIO_WRAP_DLL_CFG_DLL_CLK_ENA, x)

#define HSIO_WRAP_DLL_CFG_DLL_CLK_SEL            GENMASK(17, 15)
#define HSIO_WRAP_DLL_CFG_DLL_CLK_SEL_SET(x)\
	FIELD_PREP(HSIO_WRAP_DLL_CFG_DLL_CLK_SEL, x)
#define HSIO_WRAP_DLL_CFG_DLL_CLK_SEL_GET(x)\
	FIELD_GET(HSIO_WRAP_DLL_CFG_DLL_CLK_SEL, x)

/* DEV1G:DEV_CFG_STATUS: */
#define DEVRGMII_DEV_RST_CTRL(t)  __REG(TARGET_DEV2G5, t, 2, 0, 0, 1, 36, 0, 0, 1, 4)

#define DEVRGMII_DEV_RST_CTRL_SPEED_SEL          GENMASK(22, 20)
#define DEVRGMII_DEV_RST_CTRL_SPEED_SEL_SET(x)\
	FIELD_PREP(DEVRGMII_DEV_RST_CTRL_SPEED_SEL, x)
#define DEVRGMII_DEV_RST_CTRL_SPEED_SEL_GET(x)\
	FIELD_GET(DEVRGMII_DEV_RST_CTRL_SPEED_SEL, x)

/* DEV1G:MAC_CFG_STATUS: */
#define DEVRGMII_MAC_IFG_CFG(t)   __REG(TARGET_DEV2G5, t, 2, 36, 0, 1, 36, 24, 0, 1, 4)

#define DEVRGMII_MAC_IFG_CFG_TX_IFG              GENMASK(12, 8)
#define DEVRGMII_MAC_IFG_CFG_TX_IFG_SET(x)\
	FIELD_PREP(DEVRGMII_MAC_IFG_CFG_TX_IFG, x)
#define DEVRGMII_MAC_IFG_CFG_TX_IFG_GET(x)\
	FIELD_GET(DEVRGMII_MAC_IFG_CFG_TX_IFG, x)

#define DEVRGMII_MAC_IFG_CFG_RX_IFG2             GENMASK(7, 4)
#define DEVRGMII_MAC_IFG_CFG_RX_IFG2_SET(x)\
	FIELD_PREP(DEVRGMII_MAC_IFG_CFG_RX_IFG2, x)
#define DEVRGMII_MAC_IFG_CFG_RX_IFG2_GET(x)\
	FIELD_GET(DEVRGMII_MAC_IFG_CFG_RX_IFG2, x)

#define DEVRGMII_MAC_IFG_CFG_RX_IFG1             GENMASK(3, 0)
#define DEVRGMII_MAC_IFG_CFG_RX_IFG1_SET(x)\
	FIELD_PREP(DEVRGMII_MAC_IFG_CFG_RX_IFG1, x)
#define DEVRGMII_MAC_IFG_CFG_RX_IFG1_GET(x)\
	FIELD_GET(DEVRGMII_MAC_IFG_CFG_RX_IFG1, x)

/* DEV1G:MAC_CFG_STATUS: */
#define DEVRGMII_MAC_ENA_CFG(t)   __REG(TARGET_DEV2G5, t, 2, 36, 0, 1, 36, 0, 0, 1, 4)

#define DEVRGMII_MAC_ENA_CFG_RX_ENA              BIT(4)
#define DEVRGMII_MAC_ENA_CFG_RX_ENA_SET(x)\
	FIELD_PREP(DEVRGMII_MAC_ENA_CFG_RX_ENA, x)
#define DEVRGMII_MAC_ENA_CFG_RX_ENA_GET(x)\
	FIELD_GET(DEVRGMII_MAC_ENA_CFG_RX_ENA, x)

#define DEVRGMII_MAC_ENA_CFG_TX_ENA              BIT(0)
#define DEVRGMII_MAC_ENA_CFG_TX_ENA_SET(x)\
	FIELD_PREP(DEVRGMII_MAC_ENA_CFG_TX_ENA, x)
#define DEVRGMII_MAC_ENA_CFG_TX_ENA_GET(x)\
	FIELD_GET(DEVRGMII_MAC_ENA_CFG_TX_ENA, x)
