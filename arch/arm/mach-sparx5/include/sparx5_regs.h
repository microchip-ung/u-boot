/*
 * Copyright (C) 2023 Microchip Technology Inc. and its subsidiaries.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

/* This file is autogenerated by cml-utils 2023-05-22 11:02:35 +0200.
 * Commit ID: 6deb6094c235ff6503c27749df114d1ecfb86b28
 */


#ifndef _SPARX5_REGS_H_
#define _SPARX5_REGS_H_

#include <linux/bitops.h>

#define SPARX5_AFI_BASE                  UL(0x611240000)
#define SPARX5_ANA_AC_BASE               UL(0x611900000)
#define SPARX5_ANA_ACL_BASE              UL(0x611050000)
#define SPARX5_ANA_AC_OAM_MOD_BASE       UL(0x611070000)
#define SPARX5_ANA_AC_POL_BASE           UL(0x611200000)
#define SPARX5_ANA_AC_SDLB_BASE          UL(0x611500000)
#define SPARX5_ANA_CL_BASE               UL(0x611400000)
#define SPARX5_ANA_L2_BASE               UL(0x611800000)
#define SPARX5_ANA_L3_BASE               UL(0x611480000)
#define SPARX5_ASM_BASE                  UL(0x610600000)
#define SPARX5_CHIP_TOP_BASE             UL(0x611020000)
#define SPARX5_CLKGEN_BASE               UL(0x611100000)
#define SPARX5_CPU_BASE                  UL(0x600000000)
#define SPARX5_CPU_SYSCNT_BASE           UL(0x600109000)
#define SPARX5_CPU_SYSCNT_RO_BASE        UL(0x60010A000)
#define SPARX5_DDR_PHY_BASE              UL(0x600108000)
#define SPARX5_DDR_UMCTL2_BASE           UL(0x600107000)
#define SPARX5_DEV10G_0_BASE             UL(0x610074000)
#define SPARX5_DEV10G_1_BASE             UL(0x61042C000)
#define SPARX5_DEV10G_2_BASE             UL(0x610080000)
#define SPARX5_DEV10G_3_BASE             UL(0x61008C000)
#define SPARX5_DEV10G_4_BASE             UL(0x610458000)
#define SPARX5_DEV10G_5_BASE             UL(0x610464000)
#define SPARX5_DEV10G_6_BASE             UL(0x610470000)
#define SPARX5_DEV10G_7_BASE             UL(0x61047C000)
#define SPARX5_DEV10G_8_BASE             UL(0x610488000)
#define SPARX5_DEV10G_9_BASE             UL(0x610494000)
#define SPARX5_DEV10G_10_BASE            UL(0x6104A0000)
#define SPARX5_DEV10G_11_BASE            UL(0x6104AC000)
#define SPARX5_DEV25G_0_BASE             UL(0x6104B8000)
#define SPARX5_DEV25G_1_BASE             UL(0x6100F8000)
#define SPARX5_DEV25G_2_BASE             UL(0x6104C8000)
#define SPARX5_DEV25G_3_BASE             UL(0x610108000)
#define SPARX5_DEV25G_4_BASE             UL(0x610118000)
#define SPARX5_DEV25G_5_BASE             UL(0x6104D8000)
#define SPARX5_DEV25G_6_BASE             UL(0x6104E8000)
#define SPARX5_DEV25G_7_BASE             UL(0x6104F8000)
#define SPARX5_DEV2G5_0_BASE             UL(0x610004000)
#define SPARX5_DEV2G5_1_BASE             UL(0x610010000)
#define SPARX5_DEV2G5_2_BASE             UL(0x61001C000)
#define SPARX5_DEV2G5_3_BASE             UL(0x610404000)
#define SPARX5_DEV2G5_4_BASE             UL(0x610410000)
#define SPARX5_DEV2G5_5_BASE             UL(0x61041C000)
#define SPARX5_DEV2G5_6_BASE             UL(0x610028000)
#define SPARX5_DEV2G5_7_BASE             UL(0x610034000)
#define SPARX5_DEV2G5_8_BASE             UL(0x610040000)
#define SPARX5_DEV2G5_9_BASE             UL(0x61004C000)
#define SPARX5_DEV2G5_10_BASE            UL(0x610058000)
#define SPARX5_DEV2G5_11_BASE            UL(0x610064000)
#define SPARX5_DEV2G5_12_BASE            UL(0x610070000)
#define SPARX5_DEV2G5_13_BASE            UL(0x610428000)
#define SPARX5_DEV2G5_14_BASE            UL(0x61007C000)
#define SPARX5_DEV2G5_15_BASE            UL(0x610088000)
#define SPARX5_DEV2G5_16_BASE            UL(0x610094000)
#define SPARX5_DEV2G5_17_BASE            UL(0x610098000)
#define SPARX5_DEV2G5_18_BASE            UL(0x61009C000)
#define SPARX5_DEV2G5_19_BASE            UL(0x6100A0000)
#define SPARX5_DEV2G5_20_BASE            UL(0x6100A4000)
#define SPARX5_DEV2G5_21_BASE            UL(0x6100A8000)
#define SPARX5_DEV2G5_22_BASE            UL(0x6100AC000)
#define SPARX5_DEV2G5_23_BASE            UL(0x6100B0000)
#define SPARX5_DEV2G5_24_BASE            UL(0x610434000)
#define SPARX5_DEV2G5_25_BASE            UL(0x610438000)
#define SPARX5_DEV2G5_26_BASE            UL(0x61043C000)
#define SPARX5_DEV2G5_27_BASE            UL(0x610440000)
#define SPARX5_DEV2G5_28_BASE            UL(0x610444000)
#define SPARX5_DEV2G5_29_BASE            UL(0x610448000)
#define SPARX5_DEV2G5_30_BASE            UL(0x61044C000)
#define SPARX5_DEV2G5_31_BASE            UL(0x610450000)
#define SPARX5_DEV2G5_32_BASE            UL(0x6100B4000)
#define SPARX5_DEV2G5_33_BASE            UL(0x6100B8000)
#define SPARX5_DEV2G5_34_BASE            UL(0x6100BC000)
#define SPARX5_DEV2G5_35_BASE            UL(0x6100C0000)
#define SPARX5_DEV2G5_36_BASE            UL(0x6100C4000)
#define SPARX5_DEV2G5_37_BASE            UL(0x6100C8000)
#define SPARX5_DEV2G5_38_BASE            UL(0x6100CC000)
#define SPARX5_DEV2G5_39_BASE            UL(0x6100D0000)
#define SPARX5_DEV2G5_40_BASE            UL(0x6100D4000)
#define SPARX5_DEV2G5_41_BASE            UL(0x6100D8000)
#define SPARX5_DEV2G5_42_BASE            UL(0x6100DC000)
#define SPARX5_DEV2G5_43_BASE            UL(0x6100E0000)
#define SPARX5_DEV2G5_44_BASE            UL(0x6100E4000)
#define SPARX5_DEV2G5_45_BASE            UL(0x6100E8000)
#define SPARX5_DEV2G5_46_BASE            UL(0x6100EC000)
#define SPARX5_DEV2G5_47_BASE            UL(0x6100F0000)
#define SPARX5_DEV2G5_48_BASE            UL(0x610454000)
#define SPARX5_DEV2G5_49_BASE            UL(0x610460000)
#define SPARX5_DEV2G5_50_BASE            UL(0x61046C000)
#define SPARX5_DEV2G5_51_BASE            UL(0x610478000)
#define SPARX5_DEV2G5_52_BASE            UL(0x610484000)
#define SPARX5_DEV2G5_53_BASE            UL(0x610490000)
#define SPARX5_DEV2G5_54_BASE            UL(0x61049C000)
#define SPARX5_DEV2G5_55_BASE            UL(0x6104A8000)
#define SPARX5_DEV2G5_56_BASE            UL(0x6104B4000)
#define SPARX5_DEV2G5_57_BASE            UL(0x6100F4000)
#define SPARX5_DEV2G5_58_BASE            UL(0x6104C4000)
#define SPARX5_DEV2G5_59_BASE            UL(0x610104000)
#define SPARX5_DEV2G5_60_BASE            UL(0x610114000)
#define SPARX5_DEV2G5_61_BASE            UL(0x6104D4000)
#define SPARX5_DEV2G5_62_BASE            UL(0x6104E4000)
#define SPARX5_DEV2G5_63_BASE            UL(0x6104F4000)
#define SPARX5_DEV2G5_64_BASE            UL(0x610124000)
#define SPARX5_DEV5G_0_BASE              UL(0x610008000)
#define SPARX5_DEV5G_1_BASE              UL(0x610014000)
#define SPARX5_DEV5G_2_BASE              UL(0x610020000)
#define SPARX5_DEV5G_3_BASE              UL(0x610408000)
#define SPARX5_DEV5G_4_BASE              UL(0x610414000)
#define SPARX5_DEV5G_5_BASE              UL(0x610420000)
#define SPARX5_DEV5G_6_BASE              UL(0x61002C000)
#define SPARX5_DEV5G_7_BASE              UL(0x610038000)
#define SPARX5_DEV5G_8_BASE              UL(0x610044000)
#define SPARX5_DEV5G_9_BASE              UL(0x610050000)
#define SPARX5_DEV5G_10_BASE             UL(0x61005C000)
#define SPARX5_DEV5G_11_BASE             UL(0x610068000)
#define SPARX5_DEV5G_64_BASE             UL(0x610128000)
#define SPARX5_DSM_BASE                  UL(0x610504000)
#define SPARX5_EACL_BASE                 UL(0x6112C0000)
#define SPARX5_FDMA_BASE                 UL(0x600080000)
#define SPARX5_GCB_BASE                  UL(0x611010000)
#define SPARX5_HSCH_BASE                 UL(0x611580000)
#define SPARX5_HSIO_WRAP_BASE            UL(0x610508000)
#define SPARX5_LCPLL28_1_BASE            UL(0x6110F0000)
#define SPARX5_LRN_BASE                  UL(0x611060000)
#define SPARX5_MSHC_BASE                 UL(0x600800000)
#define SPARX5_ORG_BASE                  UL(0x610000000)
#define SPARX5_ORG1_BASE                 UL(0x610400000)
#define SPARX5_ORG2_BASE                 UL(0x610800000)
#define SPARX5_ORG3_BASE                 UL(0x610C00000)
#define SPARX5_ORG4_BASE                 UL(0x611000000)
#define SPARX5_PCEP_BASE                 UL(0x600400000)
#define SPARX5_PCIE_DM_RC_BASE           UL(0x600400000)
#define SPARX5_PCIE_PHY_WRAP_BASE        UL(0x610DD8000)
#define SPARX5_PCS10G_BR_0_BASE          UL(0x610078000)
#define SPARX5_PCS10G_BR_1_BASE          UL(0x610430000)
#define SPARX5_PCS10G_BR_2_BASE          UL(0x610084000)
#define SPARX5_PCS10G_BR_3_BASE          UL(0x610090000)
#define SPARX5_PCS10G_BR_4_BASE          UL(0x61045C000)
#define SPARX5_PCS10G_BR_5_BASE          UL(0x610468000)
#define SPARX5_PCS10G_BR_6_BASE          UL(0x610474000)
#define SPARX5_PCS10G_BR_7_BASE          UL(0x610480000)
#define SPARX5_PCS10G_BR_8_BASE          UL(0x61048C000)
#define SPARX5_PCS10G_BR_9_BASE          UL(0x610498000)
#define SPARX5_PCS10G_BR_10_BASE         UL(0x6104A4000)
#define SPARX5_PCS10G_BR_11_BASE         UL(0x6104B0000)
#define SPARX5_PCS25G_BR_0_BASE          UL(0x6104BC000)
#define SPARX5_PCS25G_BR_1_BASE          UL(0x6100FC000)
#define SPARX5_PCS25G_BR_2_BASE          UL(0x6104CC000)
#define SPARX5_PCS25G_BR_3_BASE          UL(0x61010C000)
#define SPARX5_PCS25G_BR_4_BASE          UL(0x61011C000)
#define SPARX5_PCS25G_BR_5_BASE          UL(0x6104DC000)
#define SPARX5_PCS25G_BR_6_BASE          UL(0x6104EC000)
#define SPARX5_PCS25G_BR_7_BASE          UL(0x6104FC000)
#define SPARX5_PCS25G_RSFEC_0_BASE       UL(0x6104C0000)
#define SPARX5_PCS25G_RSFEC_1_BASE       UL(0x610100000)
#define SPARX5_PCS25G_RSFEC_2_BASE       UL(0x6104D0000)
#define SPARX5_PCS25G_RSFEC_3_BASE       UL(0x610110000)
#define SPARX5_PCS25G_RSFEC_4_BASE       UL(0x610120000)
#define SPARX5_PCS25G_RSFEC_5_BASE       UL(0x6104E0000)
#define SPARX5_PCS25G_RSFEC_6_BASE       UL(0x6104F0000)
#define SPARX5_PCS25G_RSFEC_7_BASE       UL(0x610500000)
#define SPARX5_PCS5G_BR_0_BASE           UL(0x61000C000)
#define SPARX5_PCS5G_BR_1_BASE           UL(0x610018000)
#define SPARX5_PCS5G_BR_2_BASE           UL(0x610024000)
#define SPARX5_PCS5G_BR_3_BASE           UL(0x61040C000)
#define SPARX5_PCS5G_BR_4_BASE           UL(0x610418000)
#define SPARX5_PCS5G_BR_5_BASE           UL(0x610424000)
#define SPARX5_PCS5G_BR_6_BASE           UL(0x610030000)
#define SPARX5_PCS5G_BR_7_BASE           UL(0x61003C000)
#define SPARX5_PCS5G_BR_8_BASE           UL(0x610048000)
#define SPARX5_PCS5G_BR_9_BASE           UL(0x610054000)
#define SPARX5_PCS5G_BR_10_BASE          UL(0x610060000)
#define SPARX5_PCS5G_BR_11_BASE          UL(0x61006C000)
#define SPARX5_PCS5G_BR_64_BASE          UL(0x61012C000)
#define SPARX5_PORT_CONF_BASE            UL(0x610130000)
#define SPARX5_PTP_BASE                  UL(0x611040000)
#define SPARX5_QFWD_BASE                 UL(0x6110B0000)
#define SPARX5_QRES_BASE                 UL(0x611280000)
#define SPARX5_QS_BASE                   UL(0x611030000)
#define SPARX5_QSYS_BASE                 UL(0x6110A0000)
#define SPARX5_REW_BASE                  UL(0x611600000)
#define SPARX5_SD10G_KR_0_BASE           UL(0x610988000)
#define SPARX5_SD10G_KR_1_BASE           UL(0x610990000)
#define SPARX5_SD10G_KR_2_BASE           UL(0x610998000)
#define SPARX5_SD10G_KR_3_BASE           UL(0x6109A0000)
#define SPARX5_SD10G_KR_4_BASE           UL(0x610CD8000)
#define SPARX5_SD10G_KR_5_BASE           UL(0x610CE0000)
#define SPARX5_SD10G_KR_6_BASE           UL(0x610CE8000)
#define SPARX5_SD10G_KR_7_BASE           UL(0x610CF0000)
#define SPARX5_SD10G_KR_8_BASE           UL(0x610CF8000)
#define SPARX5_SD10G_KR_9_BASE           UL(0x610D00000)
#define SPARX5_SD10G_KR_10_BASE          UL(0x610D08000)
#define SPARX5_SD10G_KR_11_BASE          UL(0x610D10000)
#define SPARX5_SD10G_KR_12_BASE          UL(0x610D18000)
#define SPARX5_SD10G_KR_13_BASE          UL(0x610D20000)
#define SPARX5_SD10G_KR_14_BASE          UL(0x610D28000)
#define SPARX5_SD10G_KR_15_BASE          UL(0x610D30000)
#define SPARX5_SD10G_KR_16_BASE          UL(0x610D38000)
#define SPARX5_SD10G_KR_17_BASE          UL(0x610D40000)
#define SPARX5_SD10G_KR_18_BASE          UL(0x610D48000)
#define SPARX5_SD10G_KR_19_BASE          UL(0x610D50000)
#define SPARX5_SD10G_LANE_0_BASE         UL(0x610900000)
#define SPARX5_SD10G_LANE_1_BASE         UL(0x610908000)
#define SPARX5_SD10G_LANE_2_BASE         UL(0x610910000)
#define SPARX5_SD10G_LANE_3_BASE         UL(0x610918000)
#define SPARX5_SD10G_LANE_4_BASE         UL(0x610C58000)
#define SPARX5_SD10G_LANE_5_BASE         UL(0x610C60000)
#define SPARX5_SD10G_LANE_6_BASE         UL(0x610C68000)
#define SPARX5_SD10G_LANE_7_BASE         UL(0x610C70000)
#define SPARX5_SD10G_LANE_8_BASE         UL(0x610C78000)
#define SPARX5_SD10G_LANE_9_BASE         UL(0x610C80000)
#define SPARX5_SD10G_LANE_10_BASE        UL(0x610C88000)
#define SPARX5_SD10G_LANE_11_BASE        UL(0x610C90000)
#define SPARX5_SD25G_LANE_0_BASE         UL(0x610C98000)
#define SPARX5_SD25G_LANE_1_BASE         UL(0x610CA0000)
#define SPARX5_SD25G_LANE_2_BASE         UL(0x610CA8000)
#define SPARX5_SD25G_LANE_3_BASE         UL(0x610CB0000)
#define SPARX5_SD25G_LANE_4_BASE         UL(0x610CB8000)
#define SPARX5_SD25G_LANE_5_BASE         UL(0x610CC0000)
#define SPARX5_SD25G_LANE_6_BASE         UL(0x610CC8000)
#define SPARX5_SD25G_LANE_7_BASE         UL(0x610CD0000)
#define SPARX5_SD6G_KR_0_BASE            UL(0x610920000)
#define SPARX5_SD6G_KR_1_BASE            UL(0x610928000)
#define SPARX5_SD6G_KR_2_BASE            UL(0x610930000)
#define SPARX5_SD6G_KR_3_BASE            UL(0x610938000)
#define SPARX5_SD6G_KR_4_BASE            UL(0x610940000)
#define SPARX5_SD6G_KR_5_BASE            UL(0x610948000)
#define SPARX5_SD6G_KR_6_BASE            UL(0x610950000)
#define SPARX5_SD6G_KR_7_BASE            UL(0x610958000)
#define SPARX5_SD6G_KR_8_BASE            UL(0x610960000)
#define SPARX5_SD6G_KR_9_BASE            UL(0x610968000)
#define SPARX5_SD6G_KR_10_BASE           UL(0x610970000)
#define SPARX5_SD6G_KR_11_BASE           UL(0x610978000)
#define SPARX5_SD6G_KR_12_BASE           UL(0x610980000)
#define SPARX5_SD6G_LANE_0_BASE          UL(0x610898000)
#define SPARX5_SD6G_LANE_1_BASE          UL(0x6108A0000)
#define SPARX5_SD6G_LANE_2_BASE          UL(0x6108A8000)
#define SPARX5_SD6G_LANE_3_BASE          UL(0x6108B0000)
#define SPARX5_SD6G_LANE_4_BASE          UL(0x6108B8000)
#define SPARX5_SD6G_LANE_5_BASE          UL(0x6108C0000)
#define SPARX5_SD6G_LANE_6_BASE          UL(0x6108C8000)
#define SPARX5_SD6G_LANE_7_BASE          UL(0x6108D0000)
#define SPARX5_SD6G_LANE_8_BASE          UL(0x6108D8000)
#define SPARX5_SD6G_LANE_9_BASE          UL(0x6108E0000)
#define SPARX5_SD6G_LANE_10_BASE         UL(0x6108E8000)
#define SPARX5_SD6G_LANE_11_BASE         UL(0x6108F0000)
#define SPARX5_SD6G_LANE_12_BASE         UL(0x6108F8000)
#define SPARX5_SDPCIE_PHY_BASE           UL(0x60010B000)
#define SPARX5_SDPCIE_PMA_BASE           UL(0x610DE0000)
#define SPARX5_SD_CMU_0_BASE             UL(0x610808000)
#define SPARX5_SD_CMU_1_BASE             UL(0x610810000)
#define SPARX5_SD_CMU_2_BASE             UL(0x610818000)
#define SPARX5_SD_CMU_3_BASE             UL(0x610820000)
#define SPARX5_SD_CMU_4_BASE             UL(0x610828000)
#define SPARX5_SD_CMU_5_BASE             UL(0x610830000)
#define SPARX5_SD_CMU_6_BASE             UL(0x610838000)
#define SPARX5_SD_CMU_7_BASE             UL(0x610840000)
#define SPARX5_SD_CMU_8_BASE             UL(0x610848000)
#define SPARX5_SD_CMU_9_BASE             UL(0x610C08000)
#define SPARX5_SD_CMU_10_BASE            UL(0x610C10000)
#define SPARX5_SD_CMU_11_BASE            UL(0x610C18000)
#define SPARX5_SD_CMU_12_BASE            UL(0x610C20000)
#define SPARX5_SD_CMU_13_BASE            UL(0x610C28000)
#define SPARX5_SD_CMU_CFG_0_BASE         UL(0x610850000)
#define SPARX5_SD_CMU_CFG_1_BASE         UL(0x610858000)
#define SPARX5_SD_CMU_CFG_2_BASE         UL(0x610860000)
#define SPARX5_SD_CMU_CFG_3_BASE         UL(0x610868000)
#define SPARX5_SD_CMU_CFG_4_BASE         UL(0x610870000)
#define SPARX5_SD_CMU_CFG_5_BASE         UL(0x610878000)
#define SPARX5_SD_CMU_CFG_6_BASE         UL(0x610880000)
#define SPARX5_SD_CMU_CFG_7_BASE         UL(0x610888000)
#define SPARX5_SD_CMU_CFG_8_BASE         UL(0x610890000)
#define SPARX5_SD_CMU_CFG_9_BASE         UL(0x610C30000)
#define SPARX5_SD_CMU_CFG_10_BASE        UL(0x610C38000)
#define SPARX5_SD_CMU_CFG_11_BASE        UL(0x610C40000)
#define SPARX5_SD_CMU_CFG_12_BASE        UL(0x610C48000)
#define SPARX5_SD_CMU_CFG_13_BASE        UL(0x610C50000)
#define SPARX5_SD_LANE_0_BASE            UL(0x6109A8000)
#define SPARX5_SD_LANE_1_BASE            UL(0x6109B0000)
#define SPARX5_SD_LANE_2_BASE            UL(0x6109B8000)
#define SPARX5_SD_LANE_3_BASE            UL(0x6109C0000)
#define SPARX5_SD_LANE_4_BASE            UL(0x6109C8000)
#define SPARX5_SD_LANE_5_BASE            UL(0x6109D0000)
#define SPARX5_SD_LANE_6_BASE            UL(0x6109D8000)
#define SPARX5_SD_LANE_7_BASE            UL(0x6109E0000)
#define SPARX5_SD_LANE_8_BASE            UL(0x6109E8000)
#define SPARX5_SD_LANE_9_BASE            UL(0x6109F0000)
#define SPARX5_SD_LANE_10_BASE           UL(0x6109F8000)
#define SPARX5_SD_LANE_11_BASE           UL(0x610A00000)
#define SPARX5_SD_LANE_12_BASE           UL(0x610A08000)
#define SPARX5_SD_LANE_13_BASE           UL(0x610A10000)
#define SPARX5_SD_LANE_14_BASE           UL(0x610A18000)
#define SPARX5_SD_LANE_15_BASE           UL(0x610A20000)
#define SPARX5_SD_LANE_16_BASE           UL(0x610A28000)
#define SPARX5_SD_LANE_17_BASE           UL(0x610D58000)
#define SPARX5_SD_LANE_18_BASE           UL(0x610D60000)
#define SPARX5_SD_LANE_19_BASE           UL(0x610D68000)
#define SPARX5_SD_LANE_20_BASE           UL(0x610D70000)
#define SPARX5_SD_LANE_21_BASE           UL(0x610D78000)
#define SPARX5_SD_LANE_22_BASE           UL(0x610D80000)
#define SPARX5_SD_LANE_23_BASE           UL(0x610D88000)
#define SPARX5_SD_LANE_24_BASE           UL(0x610D90000)
#define SPARX5_SD_LANE_25G_25_BASE       UL(0x610D98000)
#define SPARX5_SD_LANE_25G_26_BASE       UL(0x610DA0000)
#define SPARX5_SD_LANE_25G_27_BASE       UL(0x610DA8000)
#define SPARX5_SD_LANE_25G_28_BASE       UL(0x610DB0000)
#define SPARX5_SD_LANE_25G_29_BASE       UL(0x610DB8000)
#define SPARX5_SD_LANE_25G_30_BASE       UL(0x610DC0000)
#define SPARX5_SD_LANE_25G_31_BASE       UL(0x610DC8000)
#define SPARX5_SD_LANE_25G_32_BASE       UL(0x610DD0000)
#define SPARX5_SIMC_BASE                 UL(0x600104000)
#define SPARX5_SUBCPU_BASE               UL(0x620030000)
#define SPARX5_SUBCPU_SIMC_BASE          UL(0x620010800)
#define SPARX5_SUBCPU_SIMC2_BASE         UL(0x620011400)
#define SPARX5_SUBCPU_TIMERS_BASE        UL(0x620010C00)
#define SPARX5_SUBCPU_TWI_BASE           UL(0x620010400)
#define SPARX5_SUBCPU_UART_BASE          UL(0x620010000)
#define SPARX5_SUBCPU_WDT_BASE           UL(0x620011000)
#define SPARX5_TIMERS_BASE               UL(0x600105000)
#define SPARX5_TRNG_BASE                 UL(0x60010C000)
#define SPARX5_TWI_BASE                  UL(0x600101000)
#define SPARX5_TWI2_BASE                 UL(0x600103000)
#define SPARX5_UART_BASE                 UL(0x600100000)
#define SPARX5_UART2_BASE                UL(0x600102000)
#define SPARX5_VCAP_ES0_BASE             UL(0x6110E0000)
#define SPARX5_VCAP_ES2_BASE             UL(0x6110D0000)
#define SPARX5_VCAP_IP6PFX_BASE          UL(0x611090000)
#define SPARX5_VCAP_SUPER_BASE           UL(0x611080000)
#define SPARX5_VOP_BASE                  UL(0x611A00000)
#define SPARX5_VOP_L3_BASE               UL(0x611B00000)
#define SPARX5_VOP_MPLS_BASE             UL(0x611680000)
#define SPARX5_WDT_BASE                  UL(0x600106000)
#define SPARX5_XQS_BASE                  UL(0x6110C0000)

/*      CPU:CPU_REGS:GPR */
#define CPU_GPR(t, r)             (t + (0x00 + ((r) * 4)))

/*      CPU:CPU_REGS:RESET */
#define CPU_RESET(t)              (t + 0x80)

#define CPU_RESET_VCORE_RST(x)                   (((x) << 9) & GENMASK(9, 9))
#define CPU_RESET_VCORE_RST_M                    GENMASK(9, 9)
#define CPU_RESET_VCORE_RST_X(x)                 (((x) & GENMASK(9, 9)) >> 9)

#define CPU_RESET_CPU_CORE_0_WARM_RST(x)         (((x) << 8) & GENMASK(8, 8))
#define CPU_RESET_CPU_CORE_0_WARM_RST_M          GENMASK(8, 8)
#define CPU_RESET_CPU_CORE_0_WARM_RST_X(x)       (((x) & GENMASK(8, 8)) >> 8)

#define CPU_RESET_CPU_CORE_1_WARM_RST(x)         (((x) << 7) & GENMASK(7, 7))
#define CPU_RESET_CPU_CORE_1_WARM_RST_M          GENMASK(7, 7)
#define CPU_RESET_CPU_CORE_1_WARM_RST_X(x)       (((x) & GENMASK(7, 7)) >> 7)

#define CPU_RESET_PROC_DBG_RST(x)                (((x) << 6) & GENMASK(6, 6))
#define CPU_RESET_PROC_DBG_RST_M                 GENMASK(6, 6)
#define CPU_RESET_PROC_DBG_RST_X(x)              (((x) & GENMASK(6, 6)) >> 6)

#define CPU_RESET_CPU_L2_RST(x)                  (((x) << 5) & GENMASK(5, 5))
#define CPU_RESET_CPU_L2_RST_M                   GENMASK(5, 5)
#define CPU_RESET_CPU_L2_RST_X(x)                (((x) & GENMASK(5, 5)) >> 5)

#define CPU_RESET_MEM_RST(x)                     (((x) << 4) & GENMASK(4, 4))
#define CPU_RESET_MEM_RST_M                      GENMASK(4, 4)
#define CPU_RESET_MEM_RST_X(x)                   (((x) & GENMASK(4, 4)) >> 4)

#define CPU_RESET_WDT_FORCE_RST(x)               (((x) << 3) & GENMASK(3, 3))
#define CPU_RESET_WDT_FORCE_RST_M                GENMASK(3, 3)
#define CPU_RESET_WDT_FORCE_RST_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define CPU_RESET_CPU_CORE_0_COLD_RST(x)         (((x) << 2) & GENMASK(2, 2))
#define CPU_RESET_CPU_CORE_0_COLD_RST_M          GENMASK(2, 2)
#define CPU_RESET_CPU_CORE_0_COLD_RST_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define CPU_RESET_CPU_CORE_1_COLD_RST(x)         (((x) << 1) & GENMASK(1, 1))
#define CPU_RESET_CPU_CORE_1_COLD_RST_M          GENMASK(1, 1)
#define CPU_RESET_CPU_CORE_1_COLD_RST_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define CPU_RESET_GIC_RST(x)                     ((x) & GENMASK(0, 0))
#define CPU_RESET_GIC_RST_M                      GENMASK(0, 0)
#define CPU_RESET_GIC_RST_X(x)                   ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:RESET_PROT_STAT */
#define CPU_RESET_PROT_STAT(t)    (t + 0x84)

#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE(x)\
	(((x) << 10) & GENMASK(10, 10))
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_M GENMASK(10, 10)
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_X(x)\
	(((x) & GENMASK(10, 10)) >> 10)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA(x) (((x) << 9) & GENMASK(9, 9))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_M GENMASK(9, 9)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_X(x)\
	(((x) & GENMASK(9, 9)) >> 9)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT(x) (((x) << 8) & GENMASK(8, 8))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_M GENMASK(8, 8)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_X(x) (((x) & GENMASK(8, 8)) >> 8)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PDBG(x) (((x) << 7) & GENMASK(7, 7))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PDBG_M GENMASK(7, 7)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PDBG_X(x)\
	(((x) & GENMASK(7, 7)) >> 7)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_GIC(x) (((x) << 6) & GENMASK(6, 6))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_GIC_M GENMASK(6, 6)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_GIC_X(x) (((x) & GENMASK(6, 6)) >> 6)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT(x)\
	(((x) << 5) & GENMASK(5, 5))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_M GENMASK(5, 5)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_X(x)\
	(((x) & GENMASK(5, 5)) >> 5)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT(x) (((x) << 4) & GENMASK(4, 4))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_M GENMASK(4, 4)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define CPU_RESET_PROT_STAT_GIC_RST_STAT(x)      (((x) << 2) & GENMASK(3, 2))
#define CPU_RESET_PROT_STAT_GIC_RST_STAT_M       GENMASK(3, 2)
#define CPU_RESET_PROT_STAT_GIC_RST_STAT_X(x)    (((x) & GENMASK(3, 2)) >> 2)

#define CPU_RESET_PROT_STAT_CPU_RST_PROT_L2(x)   (((x) << 1) & GENMASK(1, 1))
#define CPU_RESET_PROT_STAT_CPU_RST_PROT_L2_M    GENMASK(1, 1)
#define CPU_RESET_PROT_STAT_CPU_RST_PROT_L2_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_RESET_PROT_STAT_SELF_RST_PROT_GIC(x) ((x) & GENMASK(0, 0))
#define CPU_RESET_PROT_STAT_SELF_RST_PROT_GIC_M  GENMASK(0, 0)
#define CPU_RESET_PROT_STAT_SELF_RST_PROT_GIC_X(x) ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:GENERAL_CTRL */
#define CPU_GENERAL_CTRL(t)       (t + 0x88)

#define CPU_GENERAL_CTRL_MSHC_CLK2CARD_DLY_CC(x) (((x) << 13) & GENMASK(16, 13))
#define CPU_GENERAL_CTRL_MSHC_CLK2CARD_DLY_CC_M  GENMASK(16, 13)
#define CPU_GENERAL_CTRL_MSHC_CLK2CARD_DLY_CC_X(x)\
	(((x) & GENMASK(16, 13)) >> 13)

#define CPU_GENERAL_CTRL_SSI_MST_CONTENTION(x)   (((x) << 12) & GENMASK(12, 12))
#define CPU_GENERAL_CTRL_SSI_MST_CONTENTION_M    GENMASK(12, 12)
#define CPU_GENERAL_CTRL_SSI_MST_CONTENTION_X(x) (((x) & GENMASK(12, 12)) >> 12)

#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA(x)      (((x) << 11) & GENMASK(11, 11))
#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA_M       GENMASK(11, 11)
#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA_X(x)    (((x) & GENMASK(11, 11)) >> 11)

#define CPU_GENERAL_CTRL_IF_PI_SLV_DONEPOL(x)    (((x) << 10) & GENMASK(10, 10))
#define CPU_GENERAL_CTRL_IF_PI_SLV_DONEPOL_M     GENMASK(10, 10)
#define CPU_GENERAL_CTRL_IF_PI_SLV_DONEPOL_X(x)  (((x) & GENMASK(10, 10)) >> 10)

#define CPU_GENERAL_CTRL_IF_PI_SLV_ENA(x)        (((x) << 9) & GENMASK(9, 9))
#define CPU_GENERAL_CTRL_IF_PI_SLV_ENA_M         GENMASK(9, 9)
#define CPU_GENERAL_CTRL_IF_PI_SLV_ENA_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define CPU_GENERAL_CTRL_IF_PI_MST_ENA(x)        (((x) << 8) & GENMASK(8, 8))
#define CPU_GENERAL_CTRL_IF_PI_MST_ENA_M         GENMASK(8, 8)
#define CPU_GENERAL_CTRL_IF_PI_MST_ENA_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define CPU_GENERAL_CTRL_IF_SI_OWNER(x)          (((x) << 6) & GENMASK(7, 6))
#define CPU_GENERAL_CTRL_IF_SI_OWNER_M           GENMASK(7, 6)
#define CPU_GENERAL_CTRL_IF_SI_OWNER_X(x)        (((x) & GENMASK(7, 6)) >> 6)

#define CPU_GENERAL_CTRL_IF_SI2_OWNER(x)         (((x) << 4) & GENMASK(5, 4))
#define CPU_GENERAL_CTRL_IF_SI2_OWNER_M          GENMASK(5, 4)
#define CPU_GENERAL_CTRL_IF_SI2_OWNER_X(x)       (((x) & GENMASK(5, 4)) >> 4)

#define CPU_GENERAL_CTRL_IF_SI_ENA(x)            (((x) << 3) & GENMASK(3, 3))
#define CPU_GENERAL_CTRL_IF_SI_ENA_M             GENMASK(3, 3)
#define CPU_GENERAL_CTRL_IF_SI_ENA_X(x)          (((x) & GENMASK(3, 3)) >> 3)

#define CPU_GENERAL_CTRL_IF_SI2_ENA(x)           (((x) << 2) & GENMASK(2, 2))
#define CPU_GENERAL_CTRL_IF_SI2_ENA_M            GENMASK(2, 2)
#define CPU_GENERAL_CTRL_IF_SI2_ENA_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define CPU_GENERAL_CTRL_BOOT_MODE_ENA(x)        (((x) << 1) & GENMASK(1, 1))
#define CPU_GENERAL_CTRL_BOOT_MODE_ENA_M         GENMASK(1, 1)
#define CPU_GENERAL_CTRL_BOOT_MODE_ENA_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define CPU_GENERAL_CTRL_VCORE_CPU_DIS(x)        ((x) & GENMASK(0, 0))
#define CPU_GENERAL_CTRL_VCORE_CPU_DIS_M         GENMASK(0, 0)
#define CPU_GENERAL_CTRL_VCORE_CPU_DIS_X(x)      ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:GENERAL_STAT */
#define CPU_GENERAL_STAT(t)       (t + 0x8c)

#define CPU_GENERAL_STAT_REG_IF_ERR(x)           (((x) << 6) & GENMASK(8, 6))
#define CPU_GENERAL_STAT_REG_IF_ERR_M            GENMASK(8, 6)
#define CPU_GENERAL_STAT_REG_IF_ERR_X(x)         (((x) & GENMASK(8, 6)) >> 6)

#define CPU_GENERAL_STAT_AXI_INVLD_WR_STICKY(x)  (((x) << 5) & GENMASK(5, 5))
#define CPU_GENERAL_STAT_AXI_INVLD_WR_STICKY_M   GENMASK(5, 5)
#define CPU_GENERAL_STAT_AXI_INVLD_WR_STICKY_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define CPU_GENERAL_STAT_AXI_INVLD_RD_STICKY(x)  (((x) << 4) & GENMASK(4, 4))
#define CPU_GENERAL_STAT_AXI_INVLD_RD_STICKY_M   GENMASK(4, 4)
#define CPU_GENERAL_STAT_AXI_INVLD_RD_STICKY_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define CPU_GENERAL_STAT_VCORE_CFG(x)            ((x) & GENMASK(3, 0))
#define CPU_GENERAL_STAT_VCORE_CFG_M             GENMASK(3, 0)
#define CPU_GENERAL_STAT_VCORE_CFG_X(x)          ((x) & GENMASK(3, 0))

/*      CPU:CPU_REGS:ENDIANNESS */
#define CPU_ENDIANNESS(t)         (t + 0x90)

#define CPU_ENDIANNESS_REG_IF_BIGENDIAN(x)       ((x) & GENMASK(0, 0))
#define CPU_ENDIANNESS_REG_IF_BIGENDIAN_M        GENMASK(0, 0)
#define CPU_ENDIANNESS_REG_IF_BIGENDIAN_X(x)     ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:SUBCPU_SYS_CFG */
#define CPU_SUBCPU_SYS_CFG(t)     (t + 0x94)

#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_DIS(x)     (((x) << 2) & GENMASK(2, 2))
#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_DIS_M      GENMASK(2, 2)
#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_DIS_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_RST_FORCE(x) (((x) << 1) & GENMASK(1, 1))
#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_RST_FORCE_M GENMASK(1, 1)
#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_RST_FORCE_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_RST_FORCE_PROT_AMBA(x)\
	((x) & GENMASK(0, 0))
#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_RST_FORCE_PROT_AMBA_M GENMASK(0, 0)
#define CPU_SUBCPU_SYS_CFG_SUBCPU_SYS_RST_FORCE_PROT_AMBA_X(x)\
	((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:SHARED_INTR */
#define CPU_SHARED_INTR(t)        (t + 0x98)

#define CPU_SHARED_INTR_SHARED_INTR(x)           ((x) & GENMASK(9, 0))
#define CPU_SHARED_INTR_SHARED_INTR_M            GENMASK(9, 0)
#define CPU_SHARED_INTR_SHARED_INTR_X(x)         ((x) & GENMASK(9, 0))

/*      CPU:CPU_REGS:SHARED_INTR_CLR */
#define CPU_SHARED_INTR_CLR(t)    (t + 0x9c)

#define CPU_SHARED_INTR_CLR_SHARED_INTR_CLR(x)   ((x) & GENMASK(9, 0))
#define CPU_SHARED_INTR_CLR_SHARED_INTR_CLR_M    GENMASK(9, 0)
#define CPU_SHARED_INTR_CLR_SHARED_INTR_CLR_X(x) ((x) & GENMASK(9, 0))

/*      CPU:CPU_REGS:SHARED_INTR_SET */
#define CPU_SHARED_INTR_SET(t)    (t + 0xa0)

#define CPU_SHARED_INTR_SET_SHARED_INTR_SET(x)   ((x) & GENMASK(9, 0))
#define CPU_SHARED_INTR_SET_SHARED_INTR_SET_M    GENMASK(9, 0)
#define CPU_SHARED_INTR_SET_SHARED_INTR_SET_X(x) ((x) & GENMASK(9, 0))

/*      CPU:CPU_REGS:SS_FORCE_ENA */
#define CPU_SS_FORCE_ENA(t)       (t + 0xa4)

#define CPU_SS_FORCE_ENA_SS_FORCE_ENA(x)         ((x) & GENMASK(0, 0))
#define CPU_SS_FORCE_ENA_SS_FORCE_ENA_M          GENMASK(0, 0)
#define CPU_SS_FORCE_ENA_SS_FORCE_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:SS_FORCE */
#define CPU_SS_FORCE(t)           (t + 0xa8)

#define CPU_SS_FORCE_SS_FORCE(x)                 ((x) & GENMASK(15, 0))
#define CPU_SS_FORCE_SS_FORCE_M                  GENMASK(15, 0)
#define CPU_SS_FORCE_SS_FORCE_X(x)               ((x) & GENMASK(15, 0))

/*      CPU:CPU_REGS:PCIE_SYS_CFG */
#define CPU_PCIE_SYS_CFG(t)       (t + 0xac)

#define CPU_PCIE_SYS_CFG_PCIE_RC_EP_MODE(x)      ((x) & GENMASK(0, 0))
#define CPU_PCIE_SYS_CFG_PCIE_RC_EP_MODE_M       GENMASK(0, 0)
#define CPU_PCIE_SYS_CFG_PCIE_RC_EP_MODE_X(x)    ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:PROC_CTRL */
#define CPU_PROC_CTRL(t)          (t + 0xb0)

#define CPU_PROC_CTRL_AARCH64_MODE_ENA(x)        (((x) << 12) & GENMASK(12, 12))
#define CPU_PROC_CTRL_AARCH64_MODE_ENA_M         GENMASK(12, 12)
#define CPU_PROC_CTRL_AARCH64_MODE_ENA_X(x)      (((x) & GENMASK(12, 12)) >> 12)

#define CPU_PROC_CTRL_L2_RST_INVALIDATE_DIS(x)   (((x) << 11) & GENMASK(11, 11))
#define CPU_PROC_CTRL_L2_RST_INVALIDATE_DIS_M    GENMASK(11, 11)
#define CPU_PROC_CTRL_L2_RST_INVALIDATE_DIS_X(x) (((x) & GENMASK(11, 11)) >> 11)

#define CPU_PROC_CTRL_L1_RST_INVALIDATE_DIS(x)   (((x) << 10) & GENMASK(10, 10))
#define CPU_PROC_CTRL_L1_RST_INVALIDATE_DIS_M    GENMASK(10, 10)
#define CPU_PROC_CTRL_L1_RST_INVALIDATE_DIS_X(x) (((x) & GENMASK(10, 10)) >> 10)

#define CPU_PROC_CTRL_BE_EXCEP_MODE(x)           (((x) << 9) & GENMASK(9, 9))
#define CPU_PROC_CTRL_BE_EXCEP_MODE_M            GENMASK(9, 9)
#define CPU_PROC_CTRL_BE_EXCEP_MODE_X(x)         (((x) & GENMASK(9, 9)) >> 9)

#define CPU_PROC_CTRL_VINITHI(x)                 (((x) << 8) & GENMASK(8, 8))
#define CPU_PROC_CTRL_VINITHI_M                  GENMASK(8, 8)
#define CPU_PROC_CTRL_VINITHI_X(x)               (((x) & GENMASK(8, 8)) >> 8)

#define CPU_PROC_CTRL_CFGTE(x)                   (((x) << 7) & GENMASK(7, 7))
#define CPU_PROC_CTRL_CFGTE_M                    GENMASK(7, 7)
#define CPU_PROC_CTRL_CFGTE_X(x)                 (((x) & GENMASK(7, 7)) >> 7)

#define CPU_PROC_CTRL_CP15S_DISABLE(x)           (((x) << 6) & GENMASK(6, 6))
#define CPU_PROC_CTRL_CP15S_DISABLE_M            GENMASK(6, 6)
#define CPU_PROC_CTRL_CP15S_DISABLE_X(x)         (((x) & GENMASK(6, 6)) >> 6)

#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE(x)     (((x) << 5) & GENMASK(5, 5))
#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE_M      GENMASK(5, 5)
#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define CPU_PROC_CTRL_ACP_CACHE_FORCE_ENA(x)     (((x) << 4) & GENMASK(4, 4))
#define CPU_PROC_CTRL_ACP_CACHE_FORCE_ENA_M      GENMASK(4, 4)
#define CPU_PROC_CTRL_ACP_CACHE_FORCE_ENA_X(x)   (((x) & GENMASK(4, 4)) >> 4)

#define CPU_PROC_CTRL_ACP_AWCACHE(x)             (((x) << 3) & GENMASK(3, 3))
#define CPU_PROC_CTRL_ACP_AWCACHE_M              GENMASK(3, 3)
#define CPU_PROC_CTRL_ACP_AWCACHE_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PROC_CTRL_ACP_ARCACHE(x)             (((x) << 2) & GENMASK(2, 2))
#define CPU_PROC_CTRL_ACP_ARCACHE_M              GENMASK(2, 2)
#define CPU_PROC_CTRL_ACP_ARCACHE_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROC_CTRL_L2_FLUSH_REQ(x)            (((x) << 1) & GENMASK(1, 1))
#define CPU_PROC_CTRL_L2_FLUSH_REQ_M             GENMASK(1, 1)
#define CPU_PROC_CTRL_L2_FLUSH_REQ_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROC_CTRL_ACP_DISABLE(x)             ((x) & GENMASK(0, 0))
#define CPU_PROC_CTRL_ACP_DISABLE_M              GENMASK(0, 0)
#define CPU_PROC_CTRL_ACP_DISABLE_X(x)           ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:PROC_PERIPH_BASE */
#define CPU_PROC_PERIPH_BASE(t)   (t + 0xb4)

#define CPU_PROC_PERIPH_BASE_PERIPHBASE(x)       ((x) & GENMASK(21, 0))
#define CPU_PROC_PERIPH_BASE_PERIPHBASE_M        GENMASK(21, 0)
#define CPU_PROC_PERIPH_BASE_PERIPHBASE_X(x)     ((x) & GENMASK(21, 0))

/*      CPU:CPU_REGS:CPU0_RVBAR_LSB */
#define CPU_CPU0_RVBAR_LSB(t)     (t + 0xb8)

/*      CPU:CPU_REGS:CPU0_RVBAR_MSB */
#define CPU_CPU0_RVBAR_MSB(t)     (t + 0xbc)

#define CPU_CPU0_RVBAR_MSB_CPU0_RVBAR_MSB(x)     ((x) & GENMASK(5, 0))
#define CPU_CPU0_RVBAR_MSB_CPU0_RVBAR_MSB_M      GENMASK(5, 0)
#define CPU_CPU0_RVBAR_MSB_CPU0_RVBAR_MSB_X(x)   ((x) & GENMASK(5, 0))

/*      CPU:CPU_REGS:CPU1_RVBAR_LSB */
#define CPU_CPU1_RVBAR_LSB(t)     (t + 0xc0)

/*      CPU:CPU_REGS:CPU1_RVBAR_MSB */
#define CPU_CPU1_RVBAR_MSB(t)     (t + 0xc4)

#define CPU_CPU1_RVBAR_MSB_CPU1_RVBAR_MSB(x)     ((x) & GENMASK(5, 0))
#define CPU_CPU1_RVBAR_MSB_CPU1_RVBAR_MSB_M      GENMASK(5, 0)
#define CPU_CPU1_RVBAR_MSB_CPU1_RVBAR_MSB_X(x)   ((x) & GENMASK(5, 0))

/*      CPU:CPU_REGS:PROC_STAT */
#define CPU_PROC_STAT(t)          (t + 0xc8)

#define CPU_PROC_STAT_DAP_JTAG_SW_MODE(x)        (((x) << 2) & GENMASK(2, 2))
#define CPU_PROC_STAT_DAP_JTAG_SW_MODE_M         GENMASK(2, 2)
#define CPU_PROC_STAT_DAP_JTAG_SW_MODE_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROC_STAT_WFI_CORE_0(x)              (((x) << 1) & GENMASK(1, 1))
#define CPU_PROC_STAT_WFI_CORE_0_M               GENMASK(1, 1)
#define CPU_PROC_STAT_WFI_CORE_0_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROC_STAT_WFI_CORE_1(x)              ((x) & GENMASK(0, 0))
#define CPU_PROC_STAT_WFI_CORE_1_M               GENMASK(0, 0)
#define CPU_PROC_STAT_WFI_CORE_1_X(x)            ((x) & GENMASK(0, 0))

/*      CPU:SPI_MST:SPI_MST_CFG */
#define CPU_SPI_MST_CFG(t)        (t + 0xd4)

#define CPU_SPI_MST_CFG_NUM_DUMMY_CLK_CYCLES(x)  (((x) << 15) & GENMASK(18, 15))
#define CPU_SPI_MST_CFG_NUM_DUMMY_CLK_CYCLES_M   GENMASK(18, 15)
#define CPU_SPI_MST_CFG_NUM_DUMMY_CLK_CYCLES_X(x)\
	(((x) & GENMASK(18, 15)) >> 15)

#define CPU_SPI_MST_CFG_A32B_ENA(x)              (((x) << 14) & GENMASK(14, 14))
#define CPU_SPI_MST_CFG_A32B_ENA_M               GENMASK(14, 14)
#define CPU_SPI_MST_CFG_A32B_ENA_X(x)            (((x) & GENMASK(14, 14)) >> 14)

#define CPU_SPI_MST_CFG_USE_4BYTE_READ_CMD(x)    (((x) << 13) & GENMASK(13, 13))
#define CPU_SPI_MST_CFG_USE_4BYTE_READ_CMD_M     GENMASK(13, 13)
#define CPU_SPI_MST_CFG_USE_4BYTE_READ_CMD_X(x)  (((x) & GENMASK(13, 13)) >> 13)

#define CPU_SPI_MST_CFG_FAST_READ_ENA(x)         (((x) << 12) & GENMASK(12, 12))
#define CPU_SPI_MST_CFG_FAST_READ_ENA_M          GENMASK(12, 12)
#define CPU_SPI_MST_CFG_FAST_READ_ENA_X(x)       (((x) & GENMASK(12, 12)) >> 12)

#define CPU_SPI_MST_CFG_SPI_PROTOCOL_MODE(x)     (((x) << 10) & GENMASK(11, 10))
#define CPU_SPI_MST_CFG_SPI_PROTOCOL_MODE_M      GENMASK(11, 10)
#define CPU_SPI_MST_CFG_SPI_PROTOCOL_MODE_X(x)   (((x) & GENMASK(11, 10)) >> 10)

#define CPU_SPI_MST_CFG_CS_DESELECT_TIME(x)      (((x) << 5) & GENMASK(9, 5))
#define CPU_SPI_MST_CFG_CS_DESELECT_TIME_M       GENMASK(9, 5)
#define CPU_SPI_MST_CFG_CS_DESELECT_TIME_X(x)    (((x) & GENMASK(9, 5)) >> 5)

#define CPU_SPI_MST_CFG_CLK_DIV(x)               ((x) & GENMASK(4, 0))
#define CPU_SPI_MST_CFG_CLK_DIV_M                GENMASK(4, 0)
#define CPU_SPI_MST_CFG_CLK_DIV_X(x)             ((x) & GENMASK(4, 0))

/*      CPU:SPI_MST:SPI_MST_STATUS */
#define CPU_SPI_MST_STATUS(t, r)  (t + (0xd8 + ((r) * 4)))

#define CPU_SPI_MST_STATUS_UNSUP_ERR(x)          ((x) & GENMASK(0, 0))
#define CPU_SPI_MST_STATUS_UNSUP_ERR_M           GENMASK(0, 0)
#define CPU_SPI_MST_STATUS_UNSUP_ERR_X(x)        ((x) & GENMASK(0, 0))

/*      CPU:SPI_MST:SW_MODE */
#define CPU_SW_MODE(t)            (t + 0xe8)

#define CPU_SW_MODE_SW_PIN_CTRL_MODE(x)          (((x) << 22) & GENMASK(22, 22))
#define CPU_SW_MODE_SW_PIN_CTRL_MODE_M           GENMASK(22, 22)
#define CPU_SW_MODE_SW_PIN_CTRL_MODE_X(x)        (((x) & GENMASK(22, 22)) >> 22)

#define CPU_SW_MODE_SW_SPI_SCK(x)                (((x) << 21) & GENMASK(21, 21))
#define CPU_SW_MODE_SW_SPI_SCK_M                 GENMASK(21, 21)
#define CPU_SW_MODE_SW_SPI_SCK_X(x)              (((x) & GENMASK(21, 21)) >> 21)

#define CPU_SW_MODE_SW_SPI_SCK_OE(x)             (((x) << 20) & GENMASK(20, 20))
#define CPU_SW_MODE_SW_SPI_SCK_OE_M              GENMASK(20, 20)
#define CPU_SW_MODE_SW_SPI_SCK_OE_X(x)           (((x) & GENMASK(20, 20)) >> 20)

#define CPU_SW_MODE_SW_SPI_SDQ(x)                (((x) << 16) & GENMASK(19, 16))
#define CPU_SW_MODE_SW_SPI_SDQ_M                 GENMASK(19, 16)
#define CPU_SW_MODE_SW_SPI_SDQ_X(x)              (((x) & GENMASK(19, 16)) >> 16)

#define CPU_SW_MODE_SW_SPI_SDQ_OE(x)             (((x) << 12) & GENMASK(15, 12))
#define CPU_SW_MODE_SW_SPI_SDQ_OE_M              GENMASK(15, 12)
#define CPU_SW_MODE_SW_SPI_SDQ_OE_X(x)           (((x) & GENMASK(15, 12)) >> 12)

#define CPU_SW_MODE_SW_SPI_CS(x)                 (((x) << 8) & GENMASK(11, 8))
#define CPU_SW_MODE_SW_SPI_CS_M                  GENMASK(11, 8)
#define CPU_SW_MODE_SW_SPI_CS_X(x)               (((x) & GENMASK(11, 8)) >> 8)

#define CPU_SW_MODE_SW_SPI_CS_OE(x)              (((x) << 4) & GENMASK(7, 4))
#define CPU_SW_MODE_SW_SPI_CS_OE_M               GENMASK(7, 4)
#define CPU_SW_MODE_SW_SPI_CS_OE_X(x)            (((x) & GENMASK(7, 4)) >> 4)

#define CPU_SW_MODE_SW_SPI_SDQ_IN(x)             ((x) & GENMASK(3, 0))
#define CPU_SW_MODE_SW_SPI_SDQ_IN_M              GENMASK(3, 0)
#define CPU_SW_MODE_SW_SPI_SDQ_IN_X(x)           ((x) & GENMASK(3, 0))

/*      CPU:DDRCTRL:DDRCTRL_CLK */
#define CPU_DDRCTRL_CLK(t)        (t + 0x2c0)

#define CPU_DDRCTRL_CLK_DDR_CLK_ENA(x)           ((x) & GENMASK(0, 0))
#define CPU_DDRCTRL_CLK_DDR_CLK_ENA_M            GENMASK(0, 0)
#define CPU_DDRCTRL_CLK_DDR_CLK_ENA_X(x)         ((x) & GENMASK(0, 0))

#define CPU_DDRCTRL_CLK_DDR_AXI_CLK_ENA(x)       (((x) << 1) & GENMASK(1, 1))
#define CPU_DDRCTRL_CLK_DDR_AXI_CLK_ENA_M        GENMASK(1, 1)
#define CPU_DDRCTRL_CLK_DDR_AXI_CLK_ENA_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA(x)       (((x) << 2) & GENMASK(2, 2))
#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA_M        GENMASK(2, 2)
#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA(x)    (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA_M     GENMASK(3, 3)
#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA_X(x)  (((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA(x)    (((x) << 4) & GENMASK(4, 4))
#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA_M     GENMASK(4, 4)
#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA_X(x)  (((x) & GENMASK(4, 4)) >> 4)

/*      CPU:DDRCTRL:DDRCTRL_RST */
#define CPU_DDRCTRL_RST(t)        (t + 0x2c4)

#define CPU_DDRCTRL_RST_DDRC_RST(x)              ((x) & GENMASK(0, 0))
#define CPU_DDRCTRL_RST_DDRC_RST_M               GENMASK(0, 0)
#define CPU_DDRCTRL_RST_DDRC_RST_X(x)            ((x) & GENMASK(0, 0))

#define CPU_DDRCTRL_RST_DDR_AXI_RST(x)           (((x) << 1) & GENMASK(1, 1))
#define CPU_DDRCTRL_RST_DDR_AXI_RST_M            GENMASK(1, 1)
#define CPU_DDRCTRL_RST_DDR_AXI_RST_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRCTRL_RST_DDR_APB_RST(x)           (((x) << 2) & GENMASK(2, 2))
#define CPU_DDRCTRL_RST_DDR_APB_RST_M            GENMASK(2, 2)
#define CPU_DDRCTRL_RST_DDR_APB_RST_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST(x)        (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST_M         GENMASK(3, 3)
#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRCTRL_RST_DDRPHY_APB_RST(x)        (((x) << 4) & GENMASK(4, 4))
#define CPU_DDRCTRL_RST_DDRPHY_APB_RST_M         GENMASK(4, 4)
#define CPU_DDRCTRL_RST_DDRPHY_APB_RST_X(x)      (((x) & GENMASK(4, 4)) >> 4)

/*      CPU:DDRCTRL:DDRC_INTR_RAW_STAT */
#define CPU_DDRC_INTR_RAW_STAT(t) (t + 0x2c8)

#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT_M GENMASK(0, 0)
#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT_X(x) ((x) & GENMASK(0, 0))

#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT_M GENMASK(1, 1)
#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT_M GENMASK(2, 2)
#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_RAW_STAT_DFI_ALERT_ERR_INTR_RAW_STAT(x)\
	(((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_RAW_STAT_DFI_ALERT_ERR_INTR_RAW_STAT_M GENMASK(3, 3)
#define CPU_DDRC_INTR_RAW_STAT_DFI_ALERT_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

/*      CPU:DDRCTRL:DDRC_INTR_MASK */
#define CPU_DDRC_INTR_MASK(t)     (t + 0x2cc)

#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK_M  GENMASK(0, 0)
#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK_X(x) ((x) & GENMASK(0, 0))

#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK_M GENMASK(1, 1)
#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK_M GENMASK(2, 2)
#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_MASK_DFI_ALERT_ERR_INTR_MASK(x)\
	(((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_MASK_DFI_ALERT_ERR_INTR_MASK_M GENMASK(3, 3)
#define CPU_DDRC_INTR_MASK_DFI_ALERT_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

/*      CPU:DDRCTRL:DDRC_INTR_MASKED_STAT */
#define CPU_DDRC_INTR_MASKED_STAT(t) (t + 0x2d0)

#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT_M GENMASK(0, 0)
#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT_X(x) ((x) & GENMASK(0, 0))

#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT_M GENMASK(1, 1)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT_M GENMASK(2, 2)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_MASKED_STAT_DFI_ALERT_ERR_INTR_STAT(x)\
	(((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_MASKED_STAT_DFI_ALERT_ERR_INTR_STAT_M GENMASK(3, 3)
#define CPU_DDRC_INTR_MASKED_STAT_DFI_ALERT_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CNTCR */
#define CPU_SYSCNT_CNTCR(t)       (t + 0x00)

#define CPU_SYSCNT_CNTCR_CNTCR_EN(x)             ((x) & GENMASK(0, 0))
#define CPU_SYSCNT_CNTCR_CNTCR_EN_M              GENMASK(0, 0)
#define CPU_SYSCNT_CNTCR_CNTCR_EN_X(x)           ((x) & GENMASK(0, 0))

#define CPU_SYSCNT_CNTCR_CNTCR_HDBG(x)           (((x) << 1) & GENMASK(1, 1))
#define CPU_SYSCNT_CNTCR_CNTCR_HDBG_M            GENMASK(1, 1)
#define CPU_SYSCNT_CNTCR_CNTCR_HDBG_X(x)         (((x) & GENMASK(1, 1)) >> 1)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CNTSR */
#define CPU_SYSCNT_CNTSR(t)       (t + 0x04)

#define CPU_SYSCNT_CNTSR_CNTSR_DBGH(x)           (((x) << 1) & GENMASK(1, 1))
#define CPU_SYSCNT_CNTSR_CNTSR_DBGH_M            GENMASK(1, 1)
#define CPU_SYSCNT_CNTSR_CNTSR_DBGH_X(x)         (((x) & GENMASK(1, 1)) >> 1)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CNTCVL */
#define CPU_SYSCNT_CNTCVL(t)      (t + 0x08)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CNTCVU */
#define CPU_SYSCNT_CNTCVU(t)      (t + 0x0c)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CNTFID0 */
#define CPU_SYSCNT_CNTFID0(t)     (t + 0x20)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:PIDR0 */
#define CPU_SYSCNT_PIDR0(t)       (t + 0xfe0)

#define CPU_SYSCNT_PIDR0_PART_0(x)               ((x) & GENMASK(7, 0))
#define CPU_SYSCNT_PIDR0_PART_0_M                GENMASK(7, 0)
#define CPU_SYSCNT_PIDR0_PART_0_X(x)             ((x) & GENMASK(7, 0))

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:PIDR1 */
#define CPU_SYSCNT_PIDR1(t)       (t + 0xfe4)

#define CPU_SYSCNT_PIDR1_PART_1(x)               ((x) & GENMASK(3, 0))
#define CPU_SYSCNT_PIDR1_PART_1_M                GENMASK(3, 0)
#define CPU_SYSCNT_PIDR1_PART_1_X(x)             ((x) & GENMASK(3, 0))

#define CPU_SYSCNT_PIDR1_DES_0(x)                (((x) << 4) & GENMASK(7, 4))
#define CPU_SYSCNT_PIDR1_DES_0_M                 GENMASK(7, 4)
#define CPU_SYSCNT_PIDR1_DES_0_X(x)              (((x) & GENMASK(7, 4)) >> 4)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:PIDR2 */
#define CPU_SYSCNT_PIDR2(t)       (t + 0xfe8)

#define CPU_SYSCNT_PIDR2_DES_1(x)                ((x) & GENMASK(2, 0))
#define CPU_SYSCNT_PIDR2_DES_1_M                 GENMASK(2, 0)
#define CPU_SYSCNT_PIDR2_DES_1_X(x)              ((x) & GENMASK(2, 0))

#define CPU_SYSCNT_PIDR2_JEDEC(x)                (((x) << 3) & GENMASK(3, 3))
#define CPU_SYSCNT_PIDR2_JEDEC_M                 GENMASK(3, 3)
#define CPU_SYSCNT_PIDR2_JEDEC_X(x)              (((x) & GENMASK(3, 3)) >> 3)

#define CPU_SYSCNT_PIDR2_REVISION(x)             (((x) << 4) & GENMASK(7, 4))
#define CPU_SYSCNT_PIDR2_REVISION_M              GENMASK(7, 4)
#define CPU_SYSCNT_PIDR2_REVISION_X(x)           (((x) & GENMASK(7, 4)) >> 4)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:PIDR3 */
#define CPU_SYSCNT_PIDR3(t)       (t + 0xfec)

#define CPU_SYSCNT_PIDR3_CMOD(x)                 ((x) & GENMASK(3, 0))
#define CPU_SYSCNT_PIDR3_CMOD_M                  GENMASK(3, 0)
#define CPU_SYSCNT_PIDR3_CMOD_X(x)               ((x) & GENMASK(3, 0))

#define CPU_SYSCNT_PIDR3_REVAND(x)               (((x) << 4) & GENMASK(7, 4))
#define CPU_SYSCNT_PIDR3_REVAND_M                GENMASK(7, 4)
#define CPU_SYSCNT_PIDR3_REVAND_X(x)             (((x) & GENMASK(7, 4)) >> 4)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:PIDR4 */
#define CPU_SYSCNT_PIDR4(t)       (t + 0xfd0)

#define CPU_SYSCNT_PIDR4_DES_2(x)                ((x) & GENMASK(3, 0))
#define CPU_SYSCNT_PIDR4_DES_2_M                 GENMASK(3, 0)
#define CPU_SYSCNT_PIDR4_DES_2_X(x)              ((x) & GENMASK(3, 0))

#define CPU_SYSCNT_PIDR4_SIZE(x)                 (((x) << 4) & GENMASK(7, 4))
#define CPU_SYSCNT_PIDR4_SIZE_M                  GENMASK(7, 4)
#define CPU_SYSCNT_PIDR4_SIZE_X(x)               (((x) & GENMASK(7, 4)) >> 4)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CIDR0 */
#define CPU_SYSCNT_CIDR0(t)       (t + 0xff0)

#define CPU_SYSCNT_CIDR0_PRMBL_0(x)              ((x) & GENMASK(7, 0))
#define CPU_SYSCNT_CIDR0_PRMBL_0_M               GENMASK(7, 0)
#define CPU_SYSCNT_CIDR0_PRMBL_0_X(x)            ((x) & GENMASK(7, 0))

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CIDR1 */
#define CPU_SYSCNT_CIDR1(t)       (t + 0xff4)

#define CPU_SYSCNT_CIDR1_PRMBL_1(x)              ((x) & GENMASK(3, 0))
#define CPU_SYSCNT_CIDR1_PRMBL_1_M               GENMASK(3, 0)
#define CPU_SYSCNT_CIDR1_PRMBL_1_X(x)            ((x) & GENMASK(3, 0))

#define CPU_SYSCNT_CIDR1_CLASS(x)                (((x) << 4) & GENMASK(7, 4))
#define CPU_SYSCNT_CIDR1_CLASS_M                 GENMASK(7, 4)
#define CPU_SYSCNT_CIDR1_CLASS_X(x)              (((x) & GENMASK(7, 4)) >> 4)

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CIDR2 */
#define CPU_SYSCNT_CIDR2(t)       (t + 0xff8)

#define CPU_SYSCNT_CIDR2_PRMBL_2(x)              ((x) & GENMASK(7, 0))
#define CPU_SYSCNT_CIDR2_PRMBL_2_M               GENMASK(7, 0)
#define CPU_SYSCNT_CIDR2_PRMBL_2_X(x)            ((x) & GENMASK(7, 0))

/*      CPU_SYSCNT:CXTSGEN_REGISTERS:CIDR3 */
#define CPU_SYSCNT_CIDR3(t)       (t + 0xffc)

#define CPU_SYSCNT_CIDR3_PRMBL_3(x)              ((x) & GENMASK(7, 0))
#define CPU_SYSCNT_CIDR3_PRMBL_3_M               GENMASK(7, 0)
#define CPU_SYSCNT_CIDR3_PRMBL_3_X(x)            ((x) & GENMASK(7, 0))

/*      GCB:CHIP_REGS:SOFT_RST */
#define GCB_SOFT_RST(t)           (t + 0x08)

#define GCB_SOFT_RST_SOFT_NON_CFG_RST(x)         (((x) << 2) & GENMASK(2, 2))
#define GCB_SOFT_RST_SOFT_NON_CFG_RST_M          GENMASK(2, 2)
#define GCB_SOFT_RST_SOFT_NON_CFG_RST_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define GCB_SOFT_RST_SOFT_SWC_RST(x)             (((x) << 1) & GENMASK(1, 1))
#define GCB_SOFT_RST_SOFT_SWC_RST_M              GENMASK(1, 1)
#define GCB_SOFT_RST_SOFT_SWC_RST_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SOFT_RST_SOFT_CHIP_RST(x)            ((x) & GENMASK(0, 0))
#define GCB_SOFT_RST_SOFT_CHIP_RST_M             GENMASK(0, 0)
#define GCB_SOFT_RST_SOFT_CHIP_RST_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:CHIP_REGS:HW_STAT */
#define GCB_HW_STAT(t)            (t + 0x10)

#define GCB_HW_STAT_PLL0_CONF(x)                 (((x) << 1) & GENMASK(3, 1))
#define GCB_HW_STAT_PLL0_CONF_M                  GENMASK(3, 1)
#define GCB_HW_STAT_PLL0_CONF_X(x)               (((x) & GENMASK(3, 1)) >> 1)

#define GCB_HW_STAT_PLL0_RSVD(x)                 ((x) & GENMASK(0, 0))
#define GCB_HW_STAT_PLL0_RSVD_M                  GENMASK(0, 0)
#define GCB_HW_STAT_PLL0_RSVD_X(x)               ((x) & GENMASK(0, 0))

/*      GCB:SI_REGS:IF_CTRL */
#define GCB_IF_CTRL(t)            (t + 0x1a8)

#define GCB_IF_CTRL_IF_CTRL(x)                   ((x) & GENMASK(3, 0))
#define GCB_IF_CTRL_IF_CTRL_M                    GENMASK(3, 0)
#define GCB_IF_CTRL_IF_CTRL_X(x)                 ((x) & GENMASK(3, 0))

/*      GCB:SI_REGS:IF_CFGSTAT */
#define GCB_IF_CFGSTAT(t)         (t + 0x1ac)

#define GCB_IF_CFGSTAT_IF_STAT(x)                (((x) << 16) & GENMASK(16, 16))
#define GCB_IF_CFGSTAT_IF_STAT_M                 GENMASK(16, 16)
#define GCB_IF_CFGSTAT_IF_STAT_X(x)              (((x) & GENMASK(16, 16)) >> 16)

#define GCB_IF_CFGSTAT_IF_CFG(x)                 ((x) & GENMASK(3, 0))
#define GCB_IF_CFGSTAT_IF_CFG_M                  GENMASK(3, 0)
#define GCB_IF_CFGSTAT_IF_CFG_X(x)               ((x) & GENMASK(3, 0))

/*      GCB:SI_SS_MAP:SPI_MASTER_SS0_MASK */
#define GCB_SPI_MASTER_SS0_MASK(t) (t + 0x1b0)

#define GCB_SPI_MASTER_SS0_MASK_SPI_SS0_MASK(x)  ((x) & GENMASK(15, 0))
#define GCB_SPI_MASTER_SS0_MASK_SPI_SS0_MASK_M   GENMASK(15, 0)
#define GCB_SPI_MASTER_SS0_MASK_SPI_SS0_MASK_X(x) ((x) & GENMASK(15, 0))

/*      GCB:SI_SS_MAP:SPI_MASTER_SS1_MASK */
#define GCB_SPI_MASTER_SS1_MASK(t) (t + 0x1b4)

#define GCB_SPI_MASTER_SS1_MASK_SPI_SS1_MASK(x)  ((x) & GENMASK(15, 0))
#define GCB_SPI_MASTER_SS1_MASK_SPI_SS1_MASK_M   GENMASK(15, 0)
#define GCB_SPI_MASTER_SS1_MASK_SPI_SS1_MASK_X(x) ((x) & GENMASK(15, 0))

/*      GCB:SI_SS_MAP:SPI_MASTER_SS2_MASK */
#define GCB_SPI_MASTER_SS2_MASK(t) (t + 0x1b8)

#define GCB_SPI_MASTER_SS2_MASK_SPI_SS2_MASK(x)  ((x) & GENMASK(15, 0))
#define GCB_SPI_MASTER_SS2_MASK_SPI_SS2_MASK_M   GENMASK(15, 0)
#define GCB_SPI_MASTER_SS2_MASK_SPI_SS2_MASK_X(x) ((x) & GENMASK(15, 0))

/*      GCB:SI_SS_MAP:SPI_MASTER_SS3_MASK */
#define GCB_SPI_MASTER_SS3_MASK(t) (t + 0x1bc)

#define GCB_SPI_MASTER_SS3_MASK_SPI_SS3_MASK(x)  ((x) & GENMASK(15, 0))
#define GCB_SPI_MASTER_SS3_MASK_SPI_SS3_MASK_M   GENMASK(15, 0)
#define GCB_SPI_MASTER_SS3_MASK_SPI_SS3_MASK_X(x) ((x) & GENMASK(15, 0))

/*      GCB:SI_SS_MAP:SI_SLV_SS */
#define GCB_SI_SLV_SS(t)          (t + 0x1c0)

#define GCB_SI_SLV_SS_SS_SEL(x)                  ((x) & GENMASK(15, 0))
#define GCB_SI_SLV_SS_SS_SEL_M                   GENMASK(15, 0)
#define GCB_SI_SLV_SS_SS_SEL_X(x)                ((x) & GENMASK(15, 0))

/*      GCB:GPIO:GPIO_OUT_SET */
#define GCB_GPIO_OUT_SET(t)       (t + 0x1e0)

/*      GCB:GPIO:GPIO_OUT_SET1 */
#define GCB_GPIO_OUT_SET1(t)      (t + 0x1e4)

/*      GCB:GPIO:GPIO_OUT_CLR */
#define GCB_GPIO_OUT_CLR(t)       (t + 0x1e8)

/*      GCB:GPIO:GPIO_OUT_CLR1 */
#define GCB_GPIO_OUT_CLR1(t)      (t + 0x1ec)

/*      GCB:GPIO:GPIO_OUT */
#define GCB_GPIO_OUT(t)           (t + 0x1f0)

/*      GCB:GPIO:GPIO_OUT1 */
#define GCB_GPIO_OUT1(t)          (t + 0x1f4)

/*      GCB:GPIO:GPIO_IN */
#define GCB_GPIO_IN(t)            (t + 0x1f8)

/*      GCB:GPIO:GPIO_IN1 */
#define GCB_GPIO_IN1(t)           (t + 0x1fc)

/*      GCB:GPIO:GPIO_OE */
#define GCB_GPIO_OE(t)            (t + 0x200)

/*      GCB:GPIO:GPIO_OE1 */
#define GCB_GPIO_OE1(t)           (t + 0x204)

/*      GCB:GPIO:GPIO_INTR */
#define GCB_GPIO_INTR(t)          (t + 0x208)

/*      GCB:GPIO:GPIO_INTR1 */
#define GCB_GPIO_INTR1(t)         (t + 0x20c)

/*      GCB:GPIO:GPIO_INTR_ENA */
#define GCB_GPIO_INTR_ENA(t)      (t + 0x210)

/*      GCB:GPIO:GPIO_INTR_ENA1 */
#define GCB_GPIO_INTR_ENA1(t)     (t + 0x214)

/*      GCB:GPIO:GPIO_INTR_IDENT */
#define GCB_GPIO_INTR_IDENT(t)    (t + 0x218)

/*      GCB:GPIO:GPIO_INTR_IDENT1 */
#define GCB_GPIO_INTR_IDENT1(t)   (t + 0x21c)

/*      GCB:GPIO:GPIO_ALT */
#define GCB_GPIO_ALT(t, r)        (t + (0x220 + ((r) * 4)))

/*      GCB:GPIO:GPIO_ALT1 */
#define GCB_GPIO_ALT1(t, r)       (t + (0x228 + ((r) * 4)))

/*      GCB:GPIO:GPIO_SD_MAP */
#define GCB_GPIO_SD_MAP(t, r)     (t + (0x230 + ((r) * 4)))

#define GCB_GPIO_SD_MAP_G_SD_MAP(x)              ((x) & GENMASK(6, 0))
#define GCB_GPIO_SD_MAP_G_SD_MAP_M               GENMASK(6, 0)
#define GCB_GPIO_SD_MAP_G_SD_MAP_X(x)            ((x) & GENMASK(6, 0))

/*      HSIO_WRAP:GPIO_CFG:GPIO_CFG */
#define HSIO_WRAP_GPIO_CFG(t, r)  (t + (0x10 + ((r) * 4)))

#define HSIO_WRAP_GPIO_CFG_G_DS(x)               ((x) & GENMASK(1, 0))
#define HSIO_WRAP_GPIO_CFG_G_DS_M                GENMASK(1, 0)
#define HSIO_WRAP_GPIO_CFG_G_DS_X(x)             ((x) & GENMASK(1, 0))

#define HSIO_WRAP_GPIO_CFG_G_ST(x)               (((x) << 2) & GENMASK(2, 2))
#define HSIO_WRAP_GPIO_CFG_G_ST_M                GENMASK(2, 2)
#define HSIO_WRAP_GPIO_CFG_G_ST_X(x)             (((x) & GENMASK(2, 2)) >> 2)

#define HSIO_WRAP_GPIO_CFG_G_PU(x)               (((x) << 3) & GENMASK(3, 3))
#define HSIO_WRAP_GPIO_CFG_G_PU_M                GENMASK(3, 3)
#define HSIO_WRAP_GPIO_CFG_G_PU_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define HSIO_WRAP_GPIO_CFG_G_PD(x)               (((x) << 4) & GENMASK(4, 4))
#define HSIO_WRAP_GPIO_CFG_G_PD_M                GENMASK(4, 4)
#define HSIO_WRAP_GPIO_CFG_G_PD_X(x)             (((x) & GENMASK(4, 4)) >> 4)

/*      LCPLL28:LCPLL28:LCPLL_CONFIG1 */
#define LCPLL28_LCPLL_CONFIG1(t)  (t + 0x00)

#define LCPLL28_LCPLL_CONFIG1_SELCOFFSET(x)      (((x) << 24) & GENMASK(30, 24))
#define LCPLL28_LCPLL_CONFIG1_SELCOFFSET_M       GENMASK(30, 24)
#define LCPLL28_LCPLL_CONFIG1_SELCOFFSET_X(x)    (((x) & GENMASK(30, 24)) >> 24)

#define LCPLL28_LCPLL_CONFIG1_SPRF(x)            (((x) << 20) & GENMASK(23, 20))
#define LCPLL28_LCPLL_CONFIG1_SPRF_M             GENMASK(23, 20)
#define LCPLL28_LCPLL_CONFIG1_SPRF_X(x)          (((x) & GENMASK(23, 20)) >> 20)

#define LCPLL28_LCPLL_CONFIG1_FSTCTRL(x)         (((x) << 16) & GENMASK(19, 16))
#define LCPLL28_LCPLL_CONFIG1_FSTCTRL_M          GENMASK(19, 16)
#define LCPLL28_LCPLL_CONFIG1_FSTCTRL_X(x)       (((x) & GENMASK(19, 16)) >> 16)

#define LCPLL28_LCPLL_CONFIG1_SELCCRS_BIN(x)     (((x) << 13) & GENMASK(15, 13))
#define LCPLL28_LCPLL_CONFIG1_SELCCRS_BIN_M      GENMASK(15, 13)
#define LCPLL28_LCPLL_CONFIG1_SELCCRS_BIN_X(x)   (((x) & GENMASK(15, 13)) >> 13)

#define LCPLL28_LCPLL_CONFIG1_SELCFIN_BIN(x)     (((x) << 10) & GENMASK(12, 10))
#define LCPLL28_LCPLL_CONFIG1_SELCFIN_BIN_M      GENMASK(12, 10)
#define LCPLL28_LCPLL_CONFIG1_SELCFIN_BIN_X(x)   (((x) & GENMASK(12, 10)) >> 10)

#define LCPLL28_LCPLL_CONFIG1_ADAP(x)            (((x) << 9) & GENMASK(9, 9))
#define LCPLL28_LCPLL_CONFIG1_ADAP_M             GENMASK(9, 9)
#define LCPLL28_LCPLL_CONFIG1_ADAP_X(x)          (((x) & GENMASK(9, 9)) >> 9)

#define LCPLL28_LCPLL_CONFIG1_RBYP(x)            (((x) << 8) & GENMASK(8, 8))
#define LCPLL28_LCPLL_CONFIG1_RBYP_M             GENMASK(8, 8)
#define LCPLL28_LCPLL_CONFIG1_RBYP_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define LCPLL28_LCPLL_CONFIG1_STOPCPI(x)         (((x) << 4) & GENMASK(7, 4))
#define LCPLL28_LCPLL_CONFIG1_STOPCPI_M          GENMASK(7, 4)
#define LCPLL28_LCPLL_CONFIG1_STOPCPI_X(x)       (((x) & GENMASK(7, 4)) >> 4)

#define LCPLL28_LCPLL_CONFIG1_SELFC(x)           ((x) & GENMASK(3, 0))
#define LCPLL28_LCPLL_CONFIG1_SELFC_M            GENMASK(3, 0)
#define LCPLL28_LCPLL_CONFIG1_SELFC_X(x)         ((x) & GENMASK(3, 0))

/*      LCPLL28:LCPLL28:LCPLL_CONFIG2 */
#define LCPLL28_LCPLL_CONFIG2(t)  (t + 0x04)

#define LCPLL28_LCPLL_CONFIG2_SELFR(x)           (((x) << 24) & GENMASK(31, 24))
#define LCPLL28_LCPLL_CONFIG2_SELFR_M            GENMASK(31, 24)
#define LCPLL28_LCPLL_CONFIG2_SELFR_X(x)         (((x) & GENMASK(31, 24)) >> 24)

#define LCPLL28_LCPLL_CONFIG2_F(x)               ((x) & GENMASK(23, 0))
#define LCPLL28_LCPLL_CONFIG2_F_M                GENMASK(23, 0)
#define LCPLL28_LCPLL_CONFIG2_F_X(x)             ((x) & GENMASK(23, 0))

/*      LCPLL28:LCPLL28:LCPLL_CONFIG3 */
#define LCPLL28_LCPLL_CONFIG3(t)  (t + 0x08)

#define LCPLL28_LCPLL_CONFIG3_RSTN(x)            (((x) << 27) & GENMASK(27, 27))
#define LCPLL28_LCPLL_CONFIG3_RSTN_M             GENMASK(27, 27)
#define LCPLL28_LCPLL_CONFIG3_RSTN_X(x)          (((x) & GENMASK(27, 27)) >> 27)

#define LCPLL28_LCPLL_CONFIG3_HLF(x)             (((x) << 26) & GENMASK(26, 26))
#define LCPLL28_LCPLL_CONFIG3_HLF_M              GENMASK(26, 26)
#define LCPLL28_LCPLL_CONFIG3_HLF_X(x)           (((x) & GENMASK(26, 26)) >> 26)

#define LCPLL28_LCPLL_CONFIG3_PDSIG(x)           (((x) << 25) & GENMASK(25, 25))
#define LCPLL28_LCPLL_CONFIG3_PDSIG_M            GENMASK(25, 25)
#define LCPLL28_LCPLL_CONFIG3_PDSIG_X(x)         (((x) & GENMASK(25, 25)) >> 25)

#define LCPLL28_LCPLL_CONFIG3_R(x)               ((x) & GENMASK(23, 0))
#define LCPLL28_LCPLL_CONFIG3_R_M                GENMASK(23, 0)
#define LCPLL28_LCPLL_CONFIG3_R_X(x)             ((x) & GENMASK(23, 0))

/*      LCPLL28:LCPLL28:LCPLL_CONFIG4 */
#define LCPLL28_LCPLL_CONFIG4(t)  (t + 0x0c)

#define LCPLL28_LCPLL_CONFIG4_TESTMODE(x)        (((x) << 28) & GENMASK(28, 28))
#define LCPLL28_LCPLL_CONFIG4_TESTMODE_M         GENMASK(28, 28)
#define LCPLL28_LCPLL_CONFIG4_TESTMODE_X(x)      (((x) & GENMASK(28, 28)) >> 28)

#define LCPLL28_LCPLL_CONFIG4_TIMELMT(x)         (((x) << 23) & GENMASK(27, 23))
#define LCPLL28_LCPLL_CONFIG4_TIMELMT_M          GENMASK(27, 23)
#define LCPLL28_LCPLL_CONFIG4_TIMELMT_X(x)       (((x) & GENMASK(27, 23)) >> 23)

#define LCPLL28_LCPLL_CONFIG4_ERRBUF(x)          (((x) << 18) & GENMASK(22, 18))
#define LCPLL28_LCPLL_CONFIG4_ERRBUF_M           GENMASK(22, 18)
#define LCPLL28_LCPLL_CONFIG4_ERRBUF_X(x)        (((x) & GENMASK(22, 18)) >> 18)

#define LCPLL28_LCPLL_CONFIG4_N_SRC_SEL(x)       (((x) << 17) & GENMASK(17, 17))
#define LCPLL28_LCPLL_CONFIG4_N_SRC_SEL_M        GENMASK(17, 17)
#define LCPLL28_LCPLL_CONFIG4_N_SRC_SEL_X(x)     (((x) & GENMASK(17, 17)) >> 17)

#define LCPLL28_LCPLL_CONFIG4_N(x)               ((x) & GENMASK(15, 0))
#define LCPLL28_LCPLL_CONFIG4_N_M                GENMASK(15, 0)
#define LCPLL28_LCPLL_CONFIG4_N_X(x)             ((x) & GENMASK(15, 0))

/*      LCPLL28:LCPLL28:LCPLL_CONFIG5 */
#define LCPLL28_LCPLL_CONFIG5(t)  (t + 0x10)

#define LCPLL28_LCPLL_CONFIG5_SVCMHLF(x)         (((x) << 28) & GENMASK(28, 28))
#define LCPLL28_LCPLL_CONFIG5_SVCMHLF_M          GENMASK(28, 28)
#define LCPLL28_LCPLL_CONFIG5_SVCMHLF_X(x)       (((x) & GENMASK(28, 28)) >> 28)

#define LCPLL28_LCPLL_CONFIG5_STOPCPP(x)         (((x) << 24) & GENMASK(27, 24))
#define LCPLL28_LCPLL_CONFIG5_STOPCPP_M          GENMASK(27, 24)
#define LCPLL28_LCPLL_CONFIG5_STOPCPP_X(x)       (((x) & GENMASK(27, 24)) >> 24)

#define LCPLL28_LCPLL_CONFIG5_SNRF(x)            (((x) << 20) & GENMASK(23, 20))
#define LCPLL28_LCPLL_CONFIG5_SNRF_M             GENMASK(23, 20)
#define LCPLL28_LCPLL_CONFIG5_SNRF_X(x)          (((x) & GENMASK(23, 20)) >> 20)

#define LCPLL28_LCPLL_CONFIG5_SDUAL(x)           (((x) << 16) & GENMASK(16, 16))
#define LCPLL28_LCPLL_CONFIG5_SDUAL_M            GENMASK(16, 16)
#define LCPLL28_LCPLL_CONFIG5_SDUAL_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define LCPLL28_LCPLL_CONFIG5_SELCPI(x)          (((x) << 10) & GENMASK(14, 10))
#define LCPLL28_LCPLL_CONFIG5_SELCPI_M           GENMASK(14, 10)
#define LCPLL28_LCPLL_CONFIG5_SELCPI_X(x)        (((x) & GENMASK(14, 10)) >> 10)

#define LCPLL28_LCPLL_CONFIG5_DMUX_SEL(x)        (((x) << 6) & GENMASK(9, 6))
#define LCPLL28_LCPLL_CONFIG5_DMUX_SEL_M         GENMASK(9, 6)
#define LCPLL28_LCPLL_CONFIG5_DMUX_SEL_X(x)      (((x) & GENMASK(9, 6)) >> 6)

#define LCPLL28_LCPLL_CONFIG5_DMUX_EN(x)         (((x) << 5) & GENMASK(5, 5))
#define LCPLL28_LCPLL_CONFIG5_DMUX_EN_M          GENMASK(5, 5)
#define LCPLL28_LCPLL_CONFIG5_DMUX_EN_X(x)       (((x) & GENMASK(5, 5)) >> 5)

#define LCPLL28_LCPLL_CONFIG5_AMUX_SEL(x)        (((x) << 1) & GENMASK(4, 1))
#define LCPLL28_LCPLL_CONFIG5_AMUX_SEL_M         GENMASK(4, 1)
#define LCPLL28_LCPLL_CONFIG5_AMUX_SEL_X(x)      (((x) & GENMASK(4, 1)) >> 1)

#define LCPLL28_LCPLL_CONFIG5_AMUX_EN(x)         ((x) & GENMASK(0, 0))
#define LCPLL28_LCPLL_CONFIG5_AMUX_EN_M          GENMASK(0, 0)
#define LCPLL28_LCPLL_CONFIG5_AMUX_EN_X(x)       ((x) & GENMASK(0, 0))

/*      LCPLL28:LCPLL28:LCPLL_MISC_CONFIG */
#define LCPLL28_LCPLL_MISC_CONFIG(t) (t + 0x14)

#define LCPLL28_LCPLL_MISC_CONFIG_CLK_BRANCH_LEFT_EN(x) ((x) & GENMASK(0, 0))
#define LCPLL28_LCPLL_MISC_CONFIG_CLK_BRANCH_LEFT_EN_M GENMASK(0, 0)
#define LCPLL28_LCPLL_MISC_CONFIG_CLK_BRANCH_LEFT_EN_X(x) ((x) & GENMASK(0, 0))

#define LCPLL28_LCPLL_MISC_CONFIG_CLK_BRANCH_RIGHT_EN(x)\
	(((x) << 1) & GENMASK(1, 1))
#define LCPLL28_LCPLL_MISC_CONFIG_CLK_BRANCH_RIGHT_EN_M GENMASK(1, 1)
#define LCPLL28_LCPLL_MISC_CONFIG_CLK_BRANCH_RIGHT_EN_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define LCPLL28_LCPLL_MISC_CONFIG_CAP_CALIB_TOGGLE(x)\
	(((x) << 2) & GENMASK(2, 2))
#define LCPLL28_LCPLL_MISC_CONFIG_CAP_CALIB_TOGGLE_M GENMASK(2, 2)
#define LCPLL28_LCPLL_MISC_CONFIG_CAP_CALIB_TOGGLE_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define LCPLL28_LCPLL_MISC_CONFIG_MISC_CONFIG(x) (((x) << 3) & GENMASK(15, 3))
#define LCPLL28_LCPLL_MISC_CONFIG_MISC_CONFIG_M  GENMASK(15, 3)
#define LCPLL28_LCPLL_MISC_CONFIG_MISC_CONFIG_X(x) (((x) & GENMASK(15, 3)) >> 3)

/*      LCPLL28:LCPLL28:LCPLL_STATUS */
#define LCPLL28_LCPLL_STATUS(t)   (t + 0x18)

#define LCPLL28_LCPLL_STATUS_LOL(x)              (((x) << 13) & GENMASK(13, 13))
#define LCPLL28_LCPLL_STATUS_LOL_M               GENMASK(13, 13)
#define LCPLL28_LCPLL_STATUS_LOL_X(x)            (((x) & GENMASK(13, 13)) >> 13)

#define LCPLL28_LCPLL_STATUS_DONE(x)             (((x) << 12) & GENMASK(12, 12))
#define LCPLL28_LCPLL_STATUS_DONE_M              GENMASK(12, 12)
#define LCPLL28_LCPLL_STATUS_DONE_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define LCPLL28_LCPLL_STATUS_CFINSLOW(x)         (((x) << 9) & GENMASK(11, 9))
#define LCPLL28_LCPLL_STATUS_CFINSLOW_M          GENMASK(11, 9)
#define LCPLL28_LCPLL_STATUS_CFINSLOW_X(x)       (((x) & GENMASK(11, 9)) >> 9)

#define LCPLL28_LCPLL_STATUS_CFINFAST(x)         (((x) << 6) & GENMASK(8, 6))
#define LCPLL28_LCPLL_STATUS_CFINFAST_M          GENMASK(8, 6)
#define LCPLL28_LCPLL_STATUS_CFINFAST_X(x)       (((x) & GENMASK(8, 6)) >> 6)

#define LCPLL28_LCPLL_STATUS_CCRSSLOW(x)         (((x) << 3) & GENMASK(5, 3))
#define LCPLL28_LCPLL_STATUS_CCRSSLOW_M          GENMASK(5, 3)
#define LCPLL28_LCPLL_STATUS_CCRSSLOW_X(x)       (((x) & GENMASK(5, 3)) >> 3)

#define LCPLL28_LCPLL_STATUS_CCRSFAST(x)         ((x) & GENMASK(2, 0))
#define LCPLL28_LCPLL_STATUS_CCRSFAST_M          GENMASK(2, 0)
#define LCPLL28_LCPLL_STATUS_CCRSFAST_X(x)       ((x) & GENMASK(2, 0))

/*      LCPLL28:LCPLL28:LCPLL_MISC_STATUS */
#define LCPLL28_LCPLL_MISC_STATUS(t) (t + 0x1c)

#define LCPLL28_LCPLL_MISC_STATUS_MISC_STATUS(x) ((x) & GENMASK(15, 0))
#define LCPLL28_LCPLL_MISC_STATUS_MISC_STATUS_M  GENMASK(15, 0)
#define LCPLL28_LCPLL_MISC_STATUS_MISC_STATUS_X(x) ((x) & GENMASK(15, 0))


#endif /* _SPARX5_REGS_H_ */
