// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (C) 2022 Microchip Technology Inc. and its subsidiaries.
 */

#if defined(linux)
/* We don't want "linux" expanded! */
#undef linux
#endif

pcb=sr

console=ttyS0,115200n8
rootargs=root=/dev/ram0 rw rootfstype=squashfs
setup=setenv bootargs console=${console} ${mtdparts}
 ${rootargs} ${mtdroot} ${bootargs_extra}
ramboot=run setup; bootm ${loadaddr}#${pcb}

mmc_loadaddr=66000000
mmc_cur=0
mmc_bak=1
mmc_dev=mmc 0
mmc_image=new.ext4.gz

mmc_swap=env set mmc_cur ${mmc_bak};
	env save

mmc_dlup=dhcp ${mmc_image};
	unzip ${fileaddr} ${mmc_loadaddr};
	run mmc_update

mmc_set_blkcnt=setexpr mmc_blkcnt ${filesize} + 0x1ff;
	setexpr mmc_blkcnt ${mmc_blkcnt} / 0x200

mmc_update=run mmc_get_start;
	run mmc_set_blkcnt;
	mmc write ${mmc_loadaddr} ${mmc_start} ${mmc_blkcnt}

mmc_update_raw=run mmc_set_blkcnt;
	mmc write ${mmc_loadaddr} 0 ${mmc_blkcnt}

mmc_boot=run mmc_tryboot;
	env set mmc_cur Boot${mmc_bak};
	run mmc_tryboot

mmc_tryboot=run mmc_load;
	run mmc_get_number;
	setenv mtdroot root_next=/dev/mmcblk0p${mmc_number};
	run ramboot

mmc_get_start=part start ${mmc_dev} Boot${mmc_cur} mmc_start
mmc_get_size=part size ${mmc_dev} Boot${mmc_cur} mmc_size
mmc_get_number=part number ${mmc_dev} Boot${mmc_cur} mmc_number

mmc_load=run mmc_get_number;
	 ext4load ${mmc_dev}:${mmc_number} ${mmc_loadaddr} Image.itb;
	 env set loadaddr ${mmc_loadaddr}

mmc_part=uuid_disk=${mmc_guid};
	name=Boot0,size=1024MiB,type=linux;
	name=Boot1,size=1024MiB,type=linux;
	name=Data,size=1536MiB,type=linux

_ubupdate=sf probe; sf update ${fileaddr} 0 ${filesize}
ubupdate=set filesize=a000; run _ubupdate
